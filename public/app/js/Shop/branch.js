var nowBranchType = localStorage.getItem('listtype'); //當前商家列表版型
var nowAddImgType; //當前新增圖片類別(主圖/子圖)
var shopcoupon_num = 0; //當前shopcoupon顯示數量
var nowTab; //當前Tab類別
var nowSd_id; //當前汽車特店編號(sd_id)
var carModelArray; //當前車系陣列
var modelIndex; //當前廠牌序列值
var branch_menu = '0'; //當前汽車特店類別
var branch_cate = localStorage.getItem('cate'); //當前汽車特店類別
var map; //地圖
var full_map; //地圖
var markers = []; //地圖標點陣列
var prev = false; //地圖標記預覽與否
var prev_infowindow; //地圖標記預覽視窗
var nowCenter; //當前地圖中心點經緯度
var nowMode = 'list'; //當前查詢結果模式
var calendarReservation;
var order_swiper;
var order_totalcount = 0;
var now_page_picker; //訂單列表頁數選擇
var settle_accounts_swiper; //銷售對帳表swiper
var settle_accounts_totalcount = 0;
var settle_accounts_picker; //銷售對帳表頁數選擇
var billingtype = 1; //當前銷售對帳表類別
var now_scm_id;
var now_scl_id;
var mgrid;
var isOpen;
var doc;
var branchObj = {
    dataUrl: {

        shoplistquery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shop/shoplistquery',
        shopcontentquery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shop/shopcontentquery',
        shopdatabind: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shop/shopdatabind',
        shopbasicdataupdate: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shop/shopbasicdataupdate',
        shopcouponlistquery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponlistquery',
        shopcouponmanager: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponmanager',
        shopcouponcontentquery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponcontentquery',
        shopcouponget: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponget',
        shopcouponrecorver: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponrecorver',
        shopcouponreservationinfo: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponreservationinfo',
        shopcouponreservationbook: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponreservationbook',
        shopcouponscan: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponscan',
        shopcouponexec: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponexec',
        shopcouponabandon: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponabandon',
        shopcouponreservationquery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/shopcouponreservationquery',
        query_reservationreplystatus: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/query_reservationreplystatus',
        update_couponreplystatus: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopcoupon/update_couponreplystatus',
        shopquestionnaire_read: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopquestionnaire/shopquestionnaire_read',
        shopquestionnaire_ans: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopquestionnaire/shopquestionnaire_ans',
        shopquestionnaire_result: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopquestionnaire/shopquestionnaire_result',
        shopquestionnaire_response: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopquestionnaire/shopquestionnaire_response',
        shopservicelistquery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicelistquery',
        shopservicemanage: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicemanage',
        shopservicecontentquery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicecontentquery',
        shoponoffoperation: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shoponoffoperation',
        shopservicefunctionadjust: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicefunctionadjust',
        shopservicequeask: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicequeask',
        shopservicequequery: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicequequery',
        shopqueuenoshow: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopqueuenoshow',
        shopservicecallup: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicecallup',
        shopqueueovercall: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopqueueovercall',
        shopservicequerecorver: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicequerecorver',
        shopservicequeabandom: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicequeabandom',
        shopservicescan: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopservicescan',
        shopserviceexec: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopserviceexec',
        shopserviceclientreply: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopservice/shopserviceclientreply',

        postshopdata: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/carnews/postshopdata',

        queryshopbonusitem: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopmanage/queryshopbonusitem',
        postshopbonusmamager: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopmanage/postshopbonusmamager',
        querymemberidinfo: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/querymemberidinfo',
        postshopcomsumebonus: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopmanage/postshopcomsumebonus',
        query_shopmember: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shop/query_shopmember',
        queryshopclerklist: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopmanage/queryshopclerklist',
        postshopclerkmanager: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopmanage/postshopclerkmanager',
        querymembershopbonus: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shopmanage/querymembershopbonus',

        queryshoppushrecord: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shoppush/queryshoppushrecord',
        queryshoppushcontent: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shoppush/queryshoppushcontent',
        queryshopservicefee: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shoppush/queryshopservicefee',
        pushshopad2member: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shoppush/pushshopad2member',
        pushshopad2nonmember: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shoppush/pushshopad2nonmember',
        querypushnonmember: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shoppush/querypushnonmember',

        //querymembercoininfo: 'http://' + stringObj.BANK_URL + ':' + stringObj.PORT + '/api/querymembercoininfo',
        querymembercoininfo: 'http://' + stringObj.BANK_URL + ':' + stringObj.PORT + '/iscar-api/allpoint/getdata',
        query_advancedata: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/query_advancedata',

        query_relativelist: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/query_relativelist',
        modify_relative: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/modify_relative',

        querytplproduct: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/blesstemple/querytplproduct',
        createtplsales: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/blesstemple/createtplsales',
        modifytplsales: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/blesstemple/modifytplsales',
        createblessreport: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/blesstemple/createblessreport',
        createblesslightreport: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/blesstemple/createblesslightreport',

        shopadvanceupdate: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shop/shopadvanceupdate',

        querycannedmessagelist: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/cannedmessage/querycannedmessagelist',
        modifycannedmessage: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/cannedmessage/modifycannedmessage',

        createlogisticsdata: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/createlogisticsdata',
        createpaymentflow: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/createpaymentflow',
        updatescgpayment: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/updatescgpayment',

        queryshopsalesoverview: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/shop/queryshopsalesoverview',
        queryorderlist: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/queryorderlist',
        queryordercontent: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/queryordercontent',
        printdeliverorder: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/printdeliverorder',
        querysclid: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/querysclid',
        reportcargopack: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/reportcargopack',
        reportsentlogistics: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/reportsentlogistics',
        reportcargoarrive: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/reportcargoarrive',
        updateshopdatapayment: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/updateshopdatapayment',
        paysuccesstopush: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/logistics/paysuccesstopush',

        query_member_car_list: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/query_member_car_list',
        query_member_car_detail: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/query_member_car_detail',

        query_reservationpausedlist: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/reservationpaused/query_reservationpausedlist',
        create_reservationpaused: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/reservationpaused/create_reservationpaused',
        delete_reservationpaused: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/reservationpaused/delete_reservationpaused',
        query_couponreservation_year: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/reservationpaused/query_couponreservation_year',

        verify_memberseccode: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/vrf/verify_memberseccode',
        modify_memberseccode: 'http://' + stringObj.MEMBER_URL + ':' + stringObj.PORT + '/api/modify_memberseccode',

        query_shopsettlementrec_m_list: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/settlementrec/query_shopsettlementrec_m_list',
        query_shopsettlementrec_m: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/settlementrec/query_shopsettlementrec_m',
        query_shopsettlementrec_d_list: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/settlementrec/query_shopsettlementrec_d_list',
        update_settlementview: 'http://' + stringObj.API_IP + ':' + stringObj.PORT + '/settlementrec/update_settlementview',

        FTP_HOST: stringObj.FTP_HOST,
        FTP_PATH_BRANCH: '/shopdata', //'iscarapp/shopdata',
        FTP_TEMPPRARY_PATH: 'temporary/'

    },
    _menuList: [{
        name: stringObj.branchMenu.branch_cooperative,
        list: [
            /*{
             name: stringObj.branchMenu.used_car,
             spm_serno: '1'
             },*/
            {
                name: stringObj.branchMenu.car_cosmetology,
                spm_serno: '2'
            }, {
                name: stringObj.branchMenu.car_repair,
                spm_serno: '3'
            }
            /*, {
                            name: stringObj.branchMenu.car_tire,
                            spm_serno: '4'
                        }, {
                            name: stringObj.branchMenu.car_department,
                            spm_serno: '5'
                        }*/


        ]
    }],
    storage: {
        shop_report_data: 'shop_report_data',
        branchData: 'branchData',
        shopCouponRecord: 'shopCouponRecord',
        branchScanRecord: 'branchScanRecord',
        alarmInfo: 'alarmInfo',
        nextNumObj: 'nextNumObj',
        callTimeObj: 'callTimeObj',
        shopServiceRecord: 'shopServiceRecord',
        searchRegion: 'searchRegion',
        searchShopName: 'searchShopName',
        applicationData: 'applicationData',
        imagePath: 'imagePath',
        md_id_array: 'md_id_array',
        push_objectfillter: 'push_objectfillter',
        today_push: 'today_push',
        my_relatives: 'my_relatives',
        blessed_relatives: 'blessed_relatives',
        temple_products: 'temple_products',
        shop_data: 'shop_data',
        commodity_data: 'commodity_data',
        save_data: 'save_data',
        search_result: 'search_result',
        reservationbook: 'reservationbook'
    },
    firstId: null,
    listId: null,
    listLoading: false,
    refreshLoading: false,
    distance: '',
    //今日服務(商家主頁)
    branchMainInit: function(page) {
        var q = page.query;
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        if (q.sd_id) {
            branchData.sd_id = q.sd_id;
            branchData.sd_type = 'shop';
            indexObj._dataStorage(branchObj.storage.branchData, branchData);
            Cookies.set('shoplist', 1);
            Cookies.set('branchData', q.sd_id);
        }

        //紀錄今日推送次數
        var today_push = indexObj._dataStorage(branchObj.storage.today_push) || [];

        if (!JSON.stringify(today_push).match(branchData.sd_id)) {
            today_push.push({
                sd_id: branchData.sd_id,
                push_times: 0,
                last_update_date: '2000/01/01'
            });
            indexObj._dataStorage(branchObj.storage.today_push, today_push);
        }

        //設置標題店名
        var myshopdata = indexObj._dataStorage(indexObj._storage.myshopdata) || [];
        findArrayItem(myshopdata, 'sd_id', branchData.sd_id);
        $('.navbar .center').html(myshopdata[nowIndex].sd_shopname);

        var today = new Date();
        var month = (today.getMonth() + 1);
        var dates = today.getDate();
        if (month < 10) {
            month = '0' + month;
        }
        if (dates < 10) {
            dates = '0' + dates;
        }
        branchObj.shopcouponreservationquery(branchData.sd_id, today.getFullYear() + '-' + month + '-' + dates, 9);

        //branchObj.shopservicequequery(0, '', branchData.sd_id);

    },
    //更新商家進階功能內容
    shopadvanceupdate: function(sd_id) {
        //myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};

        for (var i in shop_data.sd_advancedata) {
            if (shop_data.sd_advancedata[i].content_img) {
                if (shop_data.sd_advancedata[i].content_img.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                    shop_data.sd_advancedata[i].content_img = shop_data.sd_advancedata[i].content_img.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                }
            }
        }

        shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id,
            sd_advancedata: JSON.stringify(shop_data.sd_advancedata)
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.shopadvanceupdate,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.shopadvanceupdateresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopadvanceupdateresult));
                    if (rObj.message_no === "000000000") {

                        if (Cookies.get('app_version') !== undefined) {
                            if (isMobile.Android()) {
                                if (shop_data.sd_advancedata) {
                                    if (shop_data.sd_advancedata.length > 0) {
                                        for (var i in shop_data.sd_advancedata) {
                                            if (shop_data.sd_advancedata[i].content_img) {
                                                webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, shop_data.sd_advancedata[i].content_img, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                                            }
                                        }
                                    }
                                }
                            } else if (isMobile.iOS()) {
                                if (shop_data.sd_advancedata) {
                                    var sd_advancedata = [];
                                    if (shop_data.sd_advancedata.length > 0) {
                                        for (var i in shop_data.sd_advancedata) {
                                            if (shop_data.sd_advancedata[i].content_img) {
                                                sd_advancedata.push(shop_data.sd_advancedata[i].content_img);
                                            }
                                        }
                                    }
                                    webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, sd_advancedata, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', []);
                                }
                            }
                        }

                        indexObj._dataStorage(branchObj.storage.shop_data, null);

                        myApp.modal({
                            title: stringObj.text.editFinish,
                            text: '是否前往預覽',
                            buttons: [{
                                text: stringObj.text.cancel,
                                onClick: function() {
                                    var myshopdata = indexObj._dataStorage(indexObj._storage.myshopdata) || [];
                                    findArrayItem(myshopdata, 'sd_id', sd_id);
                                    if (myshopdata[nowIndex].smb_shoptype == '1') {
                                        mainView.router.load({
                                            url: 'used-car/publish-management?sd_id=' + sd_id
                                        });
                                    } else if (myshopdata[nowIndex].smb_shoptype == '0') {
                                        mainView.router.load({
                                            url: 'shop/branch-main'
                                        });
                                    }
                                }
                            }, {
                                text: stringObj.text.confirm,
                                onClick: function() {
                                    var myshopdata = indexObj._dataStorage(indexObj._storage.myshopdata) || [];
                                    findArrayItem(myshopdata, 'sd_id', sd_id);
                                    if (myshopdata[nowIndex].smb_shoptype == '1') {
                                        mainView.router.load({
                                            url: 'used-car/used-car-branch-info?sd_id=' + sd_id,
                                            reload: true
                                        });
                                    } else if (myshopdata[nowIndex].smb_shoptype == '0') {
                                        //                                            mainView.router.load({
                                        //                                                url: 'branch-info?sd_id=' + sd_id + '&from=preview'
                                        //                                            });
                                        localStorage.setItem('pageInit', 'shop/branch-info-edit');
                                        window.location = 'pm/branch-info?sd_id=' + sd_id;
                                    } else if (myshopdata[nowIndex].smb_shoptype == '99') {
                                        mainView.router.load({
                                            url: 'temple-info?sd_id=' + sd_id + '&from=preview'
                                        });
                                    }
                                }
                            }]
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
                noNetwork();
            }
        });

    },
    //商家資料修改
    branchInfoEditInit: function(page) {
        var q = page.query;

        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};

        branchObj.branchInfoGet(branchData.sd_id, '');

        $('.edit').click(function() {

            $('.branch-name').removeClass('lengthError');
            $('.branch-tel').removeClass('lengthError');
            $('.user-name').removeClass('lengthError');
            $('.user-email').removeClass('lengthError');
            $('.user-tel').removeClass('lengthError');
            $('.user-phone').removeClass('lengthError');
            $('.user-address').removeClass('lengthError');
            $('.branch-address').removeClass('lengthError');
            $('.user-email').removeClass('formatError');
            $('.branch-name').removeClass('spacesError');
            $('.branch-tel').removeClass('spacesError');
            $('.branch-address').removeClass('spacesError');
            $('.branch-name').removeClass('nullError');
            $('.branch-tel').removeClass('nullError');
            $('.branch-date').removeClass('nullError');
            $('.branch-time').removeClass('nullError');
            $('.branch-region').removeClass('nullError');
            $('.branch-address').removeClass('nullError');
            $('.user-name').removeClass('nullError');
            $('.sd_uniformnumbers').removeClass('lengthError');
            $('.sd_uniformnumbers').removeClass('nullError');
            $('.sd_uniformnumbers').removeClass('formatError');

            $('.noSetImg').css('display', 'none');

            var branch_name = $('.page:not(.cached) #branch-name').val();
            var branch_tel = $('.page:not(.cached) #branch-tel').val();
            var branch_date = $('.branchDate').val();
            var branch_time = $('.branchTime').val();
            var branch_region = $('.branchRegion').val();
            var branch_address = $('.page:not(.cached) #branch-address').val();
            var branch_info = $('.page:not(.cached) #branch-info').val();
            var user_name = $('.page:not(.cached) #user-name').val();
            var user_email = $('.page:not(.cached) #user-email').val();
            var user_tel = $('.page:not(.cached) #user-tel').val();
            var user_phone = $('.page:not(.cached) #user-phone').val();
            var user_address = $('.page:not(.cached) #user-address').val();
            var sd_uniformnumbers = $('.page:not(.cached) #sd_uniformnumbers').val();

            var isError = false;

            if ($.trim(sd_uniformnumbers) !== "") {
                switch (chkTaxId($.trim(sd_uniformnumbers))) {
                    case 'lengthError':
                        $('.sd_uniformnumbers').addClass('lengthError');
                        isError = true;
                        break;
                    case 'formatError':
                        $('.sd_uniformnumbers').addClass('formatError');
                        isError = true;
                        break;
                }
            }


            var emailRegEx = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i; //電子郵件格式限制
            if (user_email.search(emailRegEx) == -1 && user_email !== "") {
                $('.user-email').addClass('formatError');
                isError = true;
            }


            //長度判斷
            if (4 > branch_tel.length > 10) {
                $('.branch-tel').addClass('lengthError');
                isError = true;
            }
            if (user_name.length > 20) {
                $('.user-name').addClass('lengthError');
                isError = true;
            }
            if (4 > user_tel.length > 20) {
                $('.user-tel').addClass('lengthError');
                isError = true;
            }
            if (user_phone.length != 10 && user_phone != '') {
                $('.user-phone').addClass('lengthError');
                isError = true;
            }
            if (user_address.length > 100) {
                $('.user-address').addClass('lengthError');
                isError = true;
            }
            if (branch_name.length > 20) {
                $('.branch-name').addClass('lengthError');
                isError = true;
            }
            if (user_email.length > 50) {
                $('.user-email').addClass('lengthError');
                isError = true;
            }
            if (branch_address.length > 100) {
                $('.branch-address').addClass('lengthError');
                isError = true;
            }


            //空白字元判斷
            if (branch_name.indexOf(" ") !== -1) {
                $('.branch-name').addClass('spacesError');
                isError = true;
            }
            if (branch_tel.indexOf(" ") !== -1) {
                $('.branch-tel').addClass('spacesError');
                isError = true;
            }
            if (branch_address.indexOf(" ") !== -1) {
                $('.branch-address').addClass('spacesError');
                isError = true;
            }
            if (sd_uniformnumbers.indexOf(" ") !== -1) {
                $('.sd_uniformnumbers').addClass('spacesError');
                isError = true;
            }


            var branchData = indexObj._dataStorage(branchObj.storage.branchData);


            //填寫判斷
            if (branchData.sd_shopphotopath === '') {
                $('.noSetImg').css('display', 'inherit');
                isError = true;
            }
            if (branch_name === "") {
                $('.branch-name').addClass('nullError');
                isError = true;
            }
            if (branch_tel === "") {
                $('.branch-tel').addClass('nullError');
                isError = true;
            }
            if (branch_date === "") {
                $('.branch-date').addClass('nullError');
                isError = true;
            }
            if (branch_time === "") {
                $('.branch-time').addClass('nullError');
                isError = true;
            }
            if (branch_region === "") {
                $('.branch-region').addClass('nullError');
                isError = true;
            }
            if (branch_address === "") {
                $('.branch-address').addClass('nullError');
                isError = true;
            }
            if (user_name === "") {
                $('.user-name').addClass('nullError');
                isError = true;
            }


            if (branchData.sd_shopphotopath.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                branchData.sd_shopphotopath = branchData.sd_shopphotopath.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                indexObj._dataStorage(branchObj.storage.branchData, branchData);
            }

            if (!isError) {

                var mainSg = indexObj._dataCookies(indexObj._storage.main);
                branchData = indexObj._dataStorage(branchObj.storage.branchData);
                var data = {
                    modacc: stringObj.shop.moduleaccount,
                    modvrf: Cookies.get('modvrf'),
                    sat: mainSg.sat,
                    sd_id: branchData.sd_id,
                    sd_shopname: branch_name,
                    sd_shoptel: branch_tel,
                    sd_zipcode: branch_region,
                    sd_shopaddress: branch_address,
                    sd_weeklystart: branch_date.substring(2, 3),
                    sd_weeklyend: branch_date.substring(8, 9),
                    sd_dailystart: branch_time.substring(0, 5),
                    sd_dailyend: branch_time.substring(8, 13),
                    sd_shopphotopath: branchData.sd_shopphotopath,
                    sd_introtext: branch_info,
                    sd_contact_person: user_name,
                    sd_contact_tel: branch_tel,
                    sd_contact_mobile: user_phone,
                    sd_contact_address: user_address,
                    sd_contact_email: user_email,
                    rl_city_code: stringObj.counties.indexOf(mCounty) + 1,
                    sd_uniformnumbers: sd_uniformnumbers
                };

                //console.log(JSON.stringify(data));

                myApp.showIndicator();
                indexObj._wcfget({
                    url: branchObj.dataUrl.shopbasicdataupdate,
                    para: data,
                    success: function(r) {
                        //console.log(JSON.stringify(r));
                        if (r.shopbasicdataupdateresult) {
                            var rObj = JSON.parse(JSON.stringify(r.shopbasicdataupdateresult));
                            if (rObj.message_no === "000000000") {
                                branchData = indexObj._dataStorage(branchObj.storage.branchData);
                                var myshopdata = indexObj._dataStorage(indexObj._storage.myshopdata) || [];
                                //更新storage相對應廠商店名&圖片路徑
                                findArrayItem(myshopdata, 'sd_id', branchData.sd_id);
                                myshopdata[nowIndex].sd_shopname = branch_name;
                                myshopdata[nowIndex].sd_shopphotopath = stringObj.text.branch_img_path + branchData.sd_shopphotopath;
                                indexObj._dataStorage(indexObj._storage.myshopdata, myshopdata);

                                indexObj._dataStorage(branchObj.storage.imagePath, null);


                                if (isMobile.Android()) {
                                    webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.sd_shopphotopath, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                                } else if (isMobile.iOS()) {
                                    var sd_shopphotopath = [];
                                    sd_shopphotopath.push(branchData.sd_shopphotopath);
                                    webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, sd_shopphotopath, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', []);
                                }

                                branchObj.shopadvanceupdate(branchData.sd_id);

                            } else {
                                myApp.hideIndicator();
                                stringObj.return_header(rObj.message_no);
                                if (_tip) {
                                    myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                    _tip = null;
                                }
                            }
                        }
                    },
                    error: function(r) {
                        myApp.hideIndicator();
                        noNetwork();
                    }
                });

            } else {
                myApp.alert(stringObj.text.data_not_complete, stringObj.text.warn);
            }

        });

        $('.preview').click(function() {
            var mainSg = indexObj._dataCookies(indexObj._storage.main);
            if (mainSg.md_clienttype === '1') {
                //                mainView.router.load({
                //                    url: 'branch-info?sd_id=' + branchData.sd_id + '&from=preview'
                //                });
                localStorage.setItem('pageInit', 'shop/branch-info-edit');
                window.location = 'pm/branch-info?sd_id=' + branchData.sd_id;
            } else if (mainSg.md_clienttype === '99') {
                mainView.router.load({
                    url: 'temple-info?sd_id=' + branchData.sd_id + '&from=preview'
                });
            }
        });

    },
    //商家選單資訊取得
    menuDataGet: function(menu, cate) {
        branch_cate = cate;
        var menuObj = {};
        //menu
        menuObj.menu = (menu in branchObj._menuList) ? menu : 0;
        menuObj.name = branchObj._menuList[menuObj.menu].name;
        //cate
        menuObj.cate = (cate in branchObj._menuList[menuObj.menu].list) ? cate : 0;
        //list
        menuObj.list = branchObj._menuList[menuObj.menu].list.map(function(elem, index) {
            var item = {
                name: elem.name
            };
            if (index == menuObj.cate) {
                item.active = true;
                menuObj.spm_serno = elem.spm_serno;
            }
            return item;
        });
        branchObj.menuInfo = menuObj;
    },
    //點擊選單時
    menuChange: function(direct) {
        var menu = mainView.activePage.query.menu || 0;
        var cate = mainView.activePage.query.cate || 0;
        var cateNew = parseInt(cate) + direct;
        if (branchObj._menuList[menu].list[cateNew]) {
            mainView.router.load({
                url: 'branch-cooperative?menu=' + menu + '&cate=' + cateNew
            });
        }
    },
    //商家列表滑頁
    _pageTouch: function(e) {

        if ($$('.panel-overlay').css('display') === 'block') {
            branchObj._tmsx = null;
            return false;
        }
        if ($$('body.with-panel-left-reveal').length == 1) {
            branchObj._tmsx = null;
            return false;
        }
        var _limit = 30;
        if (e.type === 'touchstart') {
            //console.log('start:' + e.changedTouches[0].clientX + ',' + e.changedTouches[0].clientY);
            branchObj._tmsx = Math.round(e.changedTouches[0].clientX);
            branchObj._tmsy = Math.round(e.changedTouches[0].clientY);
            return true;
        }
        if ((e.type === 'touchcancel' || e.type === 'touchend') && branchObj._tmsx) {
            //console.log('end:' + e.changedTouches[0].clientX + ',' + e.changedTouches[0].clientY);
            var _dx = Math.round(e.changedTouches[0].clientX) - branchObj._tmsx;
            var _dy = Math.round(e.changedTouches[0].clientY) - branchObj._tmsy;
            if (Math.abs(_dy) > Math.abs(_dx)) {
                return false;
            }
            if (_dx > _limit) {
                branchObj.menuChange(-1);
            }
            if (_dx < -_limit) {
                branchObj.menuChange(1);
            }
        }
    },
    //選單初始化
    menuInit: function(menu, cate) {
        branchObj.menuDataGet(menu, cate);
        //menuInit
        $$('.menu-title').html(branchObj.menuInfo.name);

        //template
        if (nowPage === 'branch-cooperative') {
            var temp = indexObj.template('templateBranchCate');
        } else if (nowPage === 'around-search-result') {
            var temp = indexObj.template('templateAroundSearchCate');
        }
        var item = temp(branchObj.menuInfo);
        $$('.blog-cate.swiper-container').html(item);
        var mySwiper = myApp.swiper('.blog-cate.swiper-container', {
            spaceBetween: 0,
            slidesPerView: 2,
            initialSlide: branchObj.menuInfo.cate
        });



        if (menu !== undefined && cate !== undefined) {
            var type = {};
            type.menu = menu;
            type.cate = cate;
        } else {
            var type = {};
            type.menu = '0';
            type.cate = '0';
        }

        branch_menu = type.menu;
        branch_cate = type.cate;

        if (nowPage === 'branch-cooperative') {
            //列表版面Type
            var typeTemp = indexObj.template('templateBranchListType');
            var typeItem = typeTemp(type);
            $$('.branchType .toolbar-inner').html(typeItem);
        }


    },
    //isCar合作社
    branchCooperativeInit: function(page) {
        var q = page.query;

        if (q.listType !== undefined) {
            nowBranchType = q.listType;
        }

        branchObj.menuInit(q.menu, q.cate);

        branchObj.firstId = '';
        branchObj.listId = '';
        branchObj.listLoading = false;
        myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
        if (q.shopname) {
            branchObj.branchListGet(q.shopname);
        } else {
            branchObj.branchListGet('');
        }

        //下拉刷新
        $$('.pull-to-refresh-content').on('refresh', function() {
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            if (q.shopname) {
                branchObj.branchListRefresh(q.shopname);
            } else {
                branchObj.branchListRefresh('');
            }
        });
        //無限加載
        $$('.infinite-scroll').on('infinite', function() {
            if (q.shopname) {
                branchObj.branchListGet(q.shopname);
            } else {
                branchObj.branchListGet('');
            }
        });

        //周邊商家
        $('.around_search').unbind('click');
        $('.around_search').click(function(event) {
            indexObj._dataStorage(branchObj.storage.search_result, null);
            var search_result = {};
            nowlat = '25.047908'; //25.047908, 121.517115
            nowlng = '121.517115';
            if (Cookies.get('app_version') !== undefined) {
                webview.getLocation();
            } else {
                var search_result = {};
                search_result.spm_serno = 2;
                search_result.sd_lat = nowlat || '';
                search_result.sd_lng = nowlng || '';
                search_result.sd_shopname = '';
                search_result.sd_country = '';
                indexObj._dataStorage(indexObj._storage.search_result, search_result);
                mainView.router.load({
                    url: 'around-search-result'
                });
            }

        });

        //進階查詢
        $('.advanced_search').unbind('click');
        $('.advanced_search').click(function(event) {
            indexObj._dataStorage(branchObj.storage.search_result, {
                spm_serno: 1,
                sd_shopname: "",
                sd_lat: "25.047908",
                sd_lng: "121.517115",
                sd_country: ""
            });
        });


    },
    //開店申請
    postshopdata: function(data) {
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.postshopdata,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.postshopdataresult) {
                    var rObj = JSON.parse(JSON.stringify(r.postshopdataresult));
                    if (rObj.message_no === "011103000") {

                        /*myApp.toast(stringObj.text.application_success, '', {}).show();
                         if (browser_width < 992) {
                         $('.toast-container').css('width', '50%');
                         $('.toast-container').css('left', '40%');
                         } else {
                         $('.toast-container').css('width', '15%');
                         $('.toast-container').css('left', '47.5%');
                         }*/
                        myApp.alert(stringObj.text.application_success, stringObj.text.warn);

                        indexObj._dataStorage(branchObj.storage.applicationData, null);

                        $('.modal-button').click(function(event) {
                            indexObj._userLogout();
                        });

                    } else {
                        //將輸入資訊暫存
                        indexObj._dataStorage(branchObj.storage.applicationData, data);

                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                indexObj._dataStorage(branchObj.storage.applicationData, data);
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家地區查詢
    branchRegionSearchInit: function(page) {

        $('.branch-search-left').click(function(event) {
            indexObj._dataStorage(branchObj.storage.search_result, null);
        });

        var search_result = indexObj._dataStorage(branchObj.storage.search_result) || {};

        if (search_result.sd_shopname) {
            $('.sd_shopname').val(search_result.sd_shopname);
        }

        // var rl_city = regionObj[0].rl_city;
        // var rlObj = {
        //     rlList: [{
        //         rl_city: rl_city,
        //         rl_city_ename: regionObj[0].rl_city_ename
        //     }]
        // };
        // var temp;
        // var item;
        // for (var i in regionObj) {
        //     if (rl_city != regionObj[i].rl_city) {
        //         var rl_item = {};
        //         rl_item.rl_city = regionObj[i].rl_city;
        //         rl_item.rl_city_ename = regionObj[i].rl_city_ename;
        //         rlObj.rlList.push(rl_item);
        //         rl_city = regionObj[i].rl_city;
        //     }
        // }

        var city_item;
        for (var i in stringObj.counties) {
            city_item = {};
            city_item.rl_no = i + 1;
            city_item.rl_city = stringObj.counties[i];
            temp = indexObj.template('templateBranchRegionList');
            item = temp(city_item);
            $$('.block-list').append(item);
        }

        nowlat = '';
        nowlng = '';
        //離我最近
        $('input[type=checkbox][name=my_location]').change(function() {
            if (this.checked) {
                $('.block-list input').attr('disabled', 'disabled');
                $('.block-list input[type="checkbox"] + label').css('background', 'dimgray');
                $('.block-list input[type="checkbox"] + label').css('color', '#333');

                nowlat = ''; //25.047908, 121.517115
                nowlng = '';
                $(".block-list input").prop("checked", false);
                if (isMobile.Android() || isMobile.iOS()) {
                    webview.getLocation();
                }

                if (nowlat === undefined || nowlat === 0 || nowlat === '') {
                    $(this).prop('checked', false);
                    $('.block-list input').removeAttr('disabled');
                    $('.block-list input[type="checkbox"] + label').css('background', 'darkgray');
                    $('.block-list input[type="checkbox"] + label').css('color', '#000');
                }

            } else {
                $('.block-list input').removeAttr('disabled');
                $('.block-list input[type="checkbox"] + label').css('background', 'darkgray');
                $('.block-list input[type="checkbox"] + label').css('color', '#000');
                nowlat = '';
                nowlng = '';
            }
        });

        if (search_result.sd_lat) {
            $('input[type=checkbox][name=my_location]').prop('checked', true);
            $('.block-list input').attr('disabled', 'disabled');
            $('.block-list input[type="checkbox"] + label').css('background', 'dimgray');
            $('.block-list input[type="checkbox"] + label').css('color', '#333');
        } else {
            if (search_result.sd_country) {
                for (var i in search_result.sd_country.split(',')) {
                    //findArrayItem(rlObj.rlList, 'rl_city', search_result.sd_country.split(',')[i]);
                    $('#r' + search_result.sd_country.split(',')[i]).prop('checked', true);
                }
            }
        }

        //縣市
        $('.block-list input').change(function() {
            if (this.checked) {
                $(this).next().css('background', 'darkorange');
                $(this).next().css('color', '#FCFAF2');
            } else {
                $(this).next().css('background', 'darkgray');
                $(this).next().css('color', '#000');
            }
        });


        // temp = indexObj.template('templateBranchRegionAccordion');
        // item = temp(rlObj);
        // $$('.regionList').append(item);


        if (search_result.spm_serno) {
            $('.spm_serno').val(stringObj.shop.spm_serno_array[parseInt(search_result.spm_serno) - 1]);
        } else {
            search_result.spm_serno = 1;
        }
        //商家類別
        var spm_serno_picker = myApp.picker({
            input: '.spm_serno',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.spm_serno + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0];
            },
            onOpen: function(p) {
                if (search_result.spm_serno) {
                    p.setValue([stringObj.shop.spm_serno_array[parseInt(search_result.spm_serno) - 1]]);
                }
            },
            onClose: function(p) {
                search_result.spm_serno = p.cols[0].activeIndex + 1;
            },
            cols: [{
                width: '100%',
                textAlign: 'center',
                values: stringObj.shop.spm_serno_array
            }]
        });

        // for (var i in regionObj) {
        //     temp = indexObj.template('templateBranchRegionList');
        //     item = temp(regionObj[i]);
        //     $$('.' + regionObj[i].rl_city_ename).append(item);
        // }


        // var searchShopName = localStorage.getItem(branchObj.storage.searchShopName) || '';

        // $('.sd_shopname').val(searchShopName);

        // var searchRegion = indexObj._dataStorage(branchObj.storage.searchRegion) || [];

        // if (searchRegion) {
        //     for (var i in searchRegion) {
        //         $('.r' + searchRegion[i]).prop('checked', true);
        //         findArrayItem(regionObj, 'rl_zip', parseInt(searchRegion[i]));
        //         myApp.accordionOpen('.accordion-' + regionObj[nowIndex].rl_city_ename);
        //     }
        // }

        $$('.search').click(function() {
            var region = [];
            $("input[name='region']:checked").each(function() {
                region.push($(this).val());
            });

            search_result.sd_shopname = $('.sd_shopname').val();
            search_result.sd_lat = nowlat || '';
            search_result.sd_lng = nowlng || '';
            search_result.sd_country = region.toString();

            indexObj._dataStorage(branchObj.storage.search_result, search_result);

            mainView.router.load({
                url: 'shop-search-result'
            });

        });
    },
    //周邊商家初始化
    aroundSearchResultInit: function(page) {
        var q = page.query;

        branchObj.menuInit(0, q.cate);

        var search_result = indexObj._dataStorage(branchObj.storage.search_result) || {};

        //$('.around-search-result-left').attr('href', 'branch-cooperative?menu=' + branch_menu + '&cate=' + branch_cate);
        $('.around-search-result-left').click(function(event) {
            nowMode = 'list';
            indexObj._dataStorage(branchObj.storage.search_result, null);
            window.location = 'pm/branch-cooperative?cate=' + localStorage.getItem('cate') + '&listtype=' + nowBranchType;
        });

        branchObj.firstId = '';
        branchObj.listId = '';
        branchObj.distance = '';
        branchObj.listLoading = false;
        myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
        //無限加載
        $$('.infinite-scroll').on('infinite', function() {
            branchObj.branchListGet('');
        });

        branchObj.branchListGet('');

        toTop();

        branchObj.changeMode(nowMode);

        //模式切換
        $('.toolbar.mode').click(function(event) {
            if (nowMode === 'list') {
                nowMode = 'map';
                branchObj.changeMode('map');
            } else if (nowMode === 'map') {
                nowMode = 'list';
                branchObj.changeMode('list');
            }
        });


        $('.subnavbar a').click(function() {
            branchObj.menuDataGet(0, $(this).attr('cate'));
            $('.subnavbar a').removeClass('swiper-slide-active');
            $('.subnavbar a').removeClass('active');
            $(this).addClass('swiper-slide-active');
            $(this).addClass('active');
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.distance = '';
            branchObj.listLoading = false;
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            //無限加載
            $$('.infinite-scroll').on('infinite', function() {
                branchObj.branchListGet('');
            });
            if (nowMode === 'map') {
                full_map.setCenter(new google.maps.LatLng(nowlat, nowlng));
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                markers = [];
            }
            branchObj.branchListGet('');
        });

        //查詢更多
        $('.search-btn').click(function(event) {
            full_map.setCenter(new google.maps.LatLng(nowlat, nowlng));
            branchObj.branchListGet('');
        });

    },
    //修改周邊商家模式
    changeMode: function(mode) {
        if (mode === 'map') {
            $('.blog-box').css('display', 'none');
            $('.full_map').css('display', 'block');
            $('.toolbar.mode a').html('<i class="fa fa-th" aria-hidden="true"></i>&nbsp;&nbsp;列表模式');
            $('.search-btn').css('display', 'block');
            $('.set_location').css('display', 'block');

            if (Cookies.get('app_version') !== undefined) {
                webview.getLocation();
            } else {
                $.getJSON("http://ip-api.com/json/?callback=?", function(data) {
                    //console.log(JSON.stringify(data));
                    nowLocation(data.lon, data.lat);
                });
            }


            if (nowCenter !== undefined) {
                full_map.setCenter(nowCenter);
            }


        } else if (mode === 'list') {
            $('.full_map').css('display', 'none');
            $('.search-btn').css('display', 'none');
            $('.set_location').css('display', 'none');
            $('.blog-box').css('display', 'block');
            $('.toolbar.mode a').html('<i class="fa fa-map-marker" aria-hidden="true"></i>&nbsp;&nbsp;地圖模式');
        }
    },
    //查詢結果初始化
    shopSearchResultInit: function(page) {
        var q = page.query;

        var search_result = indexObj._dataStorage(branchObj.storage.search_result) || {};
        nowlat = '';
        nowlng = '';
        branchObj.popupCondition();

        //$('.shop-search-result-left').attr('href', 'branch-cooperative?menu=' + branch_menu + '&cate=' + branch_cate);
        $('.shop-search-result-left').click(function(event) {
            indexObj._dataStorage(branchObj.storage.search_result, null);
            window.location = 'pm/branch-cooperative?cate=' + localStorage.getItem('cate') + '&listtype=' + nowBranchType;
        });

        var condition_list = [];
        condition_list.push({
            condition: stringObj.shop.spm_serno_array[parseInt(search_result.spm_serno) - 1]
        });
        condition_list.push({
            condition: search_result.sd_shopname
        });
        if (search_result.sd_lat && search_result.sd_lng) {
            condition_list.push({
                condition: stringObj.shop.around_me
            });
        }
        if (search_result.sd_country) {
            for (var i in search_result.sd_country.split(',')) {
                condition_list.push({
                    condition: search_result.sd_country.split(',')[i]
                });
            }
        }

        condition_list = {
            condition_list: condition_list
        };

        var temp = indexObj.template('templateConditionBlock');
        var item = temp(condition_list);
        $$('.condition-block').html(item);

        branchObj.firstId = '';
        branchObj.listId = '';
        branchObj.distance = '';
        branchObj.listLoading = false;
        myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
        //無限加載
        $$('.infinite-scroll').on('infinite', function() {
            branchObj.branchListGet('');
        });

        branchObj.branchListGet('');

        toTop();

        //查詢條件
        $('.more-condition').unbind('click');
        $('.more-condition').click(function(event) {
            branchObj.popupCondition();
        });

        //模式切換
        nowMode = 'list';
        $('.result-title .mode').click(function(event) {
            if (nowMode === 'list') {
                $('.blog-box').css('display', 'none');
                $('.full_map').css('display', 'block');
                nowMode = 'map';
                $(this).html('<i class="fa fa-th" aria-hidden="true"></i>');

                if (Cookies.get('app_version') !== undefined) {
                    webview.getLocation();
                }
                var myLatlng;
                if (nowlat === undefined || nowlat === 0 || nowlat === '') {
                    myLatlng = new google.maps.LatLng(25.047908, 121.517115);
                } else {
                    myLatlng = new google.maps.LatLng(nowlat, nowlng);
                }

                //設定地圖參數
                var mapOptions = {
                    zoom: 14, //初始放大倍數
                    center: myLatlng, //預設中心經緯度
                    mapTypeId: google.maps.MapTypeId.ROADMAP, //正常2D道路模式
                    mapTypeControl: false, //切換地圖檢視類型的面板
                    streetViewControl: false //街景服務的面板
                };


                //在指定DOM元素中嵌入地圖 document.getElementById("full_map")
                var map_block = $('.full_map');
                full_map = new google.maps.Map(map_block[0], mapOptions);


                if (nowlat !== undefined && nowlat !== 0 && nowlat !== '') {

                    full_map.setCenter(myLatlng);
                    //map marker icon
                    var image = {
                        url: 'app/image/user-marker.png'
                    };

                    //將目前位置新增至地圖
                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: full_map,
                        title: 'Me',
                        icon: image
                    });

                }

                if (nowCenter !== undefined) {
                    full_map.setCenter(nowCenter);
                }

                branchObj.branchListGet('');
            } else if (nowMode === 'map') {
                $('.full_map').css('display', 'none');
                $('.blog-box').css('display', 'block');
                nowMode = 'list';
                $(this).html('<i class="fa fa-map-marker" aria-hidden="true"></i>');
            }
        });

    },
    //進階查詢窗
    popupCondition: function() {

        myApp.popup('.popup-condition');
        $$('.block-list').html('');

        var search_result = indexObj._dataStorage(branchObj.storage.search_result) || {};

        if (search_result.sd_shopname) {
            $('.sd_shopname').val(search_result.sd_shopname);
        }
        var temp;
        var item;
        var city_item;
        for (var i in stringObj.counties) {
            city_item = {};
            city_item.rl_no = parseInt(i) + 1;
            city_item.rl_city = stringObj.counties[i];
            temp = indexObj.template('templateBranchRegionList');
            item = temp(city_item);
            $$('.block-list').append(item);
        }

        //離我最近
        $('input[type=checkbox][name=my_location]').change(function() {
            if (this.checked) {
                $(this).next().css('background', 'darkorange');
                $(this).next().css('color', '#FCFAF2');
                $('.block-list input').attr('disabled', 'disabled');
                $('.block-list input[type="checkbox"] + label').css('background', 'dimgray');
                $('.block-list input[type="checkbox"] + label').css('color', '#333');

                nowlat = ''; //25.047908, 121.517115
                nowlng = '';
                $(".block-list input").prop("checked", false);
                if (Cookies.get('app_version') !== undefined) {
                    webview.getLocation();
                } else {
                    myApp.modal({
                        title: stringObj.text.warn,
                        text: stringObj.shop.no_GPS,
                        buttons: [{
                            text: stringObj.text.cancel,
                            onClick: function() {}
                        }]
                    });
                    $(this).prop('checked', false);
                    $(this).next().css('background', 'darkgray');
                    $(this).next().css('color', '#000');
                    $('.block-list input').removeAttr('disabled');
                    $('.block-list input[type="checkbox"] + label').css('background', 'darkgray');
                    $('.block-list input[type="checkbox"] + label').css('color', '#000');
                }

                // if (nowlat === undefined || nowlat === 0 || nowlat === '') {
                //     $(this).prop('checked', false);
                //     $(this).next().css('background', 'darkgray');
                //     $(this).next().css('color', '#000');
                //     $('.block-list input').removeAttr('disabled');
                //     $('.block-list input[type="checkbox"] + label').css('background', 'darkgray');
                //     $('.block-list input[type="checkbox"] + label').css('color', '#000');
                // }

            } else {
                $(this).next().css('background', 'darkgray');
                $(this).next().css('color', '#000');
                $('.block-list input').removeAttr('disabled');
                $('.block-list input[type="checkbox"] + label').css('background', 'darkgray');
                $('.block-list input[type="checkbox"] + label').css('color', '#000');
                nowlat = '';
                nowlng = '';
            }
        });

        if (search_result.sd_lat) {
            $('input[type=checkbox][name=my_location]').prop('checked', true);
            $('.block-list input').attr('disabled', 'disabled');
            $('.block-list input[type="checkbox"] + label').css('background', 'dimgray');
            $('.block-list input[type="checkbox"] + label').css('color', '#333');
        } else {
            if (search_result.sd_country) {
                for (var i in search_result.sd_country.split(',')) {
                    //findArrayItem(rlObj.rlList, 'rl_city', search_result.sd_country.split(',')[i]);
                    $('#r' + search_result.sd_country.split(',')[i]).prop('checked', true);
                }
            }
        }

        //縣市
        $('.block-list input').change(function() {
            if (this.checked) {
                $(this).next().css('background', 'darkorange');
                $(this).next().css('color', '#FCFAF2');
            } else {
                $(this).next().css('background', 'darkgray');
                $(this).next().css('color', '#000');
            }
        });


        if (search_result.spm_serno) {
            $('.spm_serno').val(stringObj.shop.spm_serno_array[parseInt(search_result.spm_serno) - 1]);
        } else {
            search_result.spm_serno = 1;
        }
        //商家類別
        var spm_serno_picker = myApp.picker({
            input: '.spm_serno',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.spm_serno + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0];
            },
            onOpen: function(p) {
                if (search_result.spm_serno) {
                    p.setValue([stringObj.shop.spm_serno_array[parseInt(search_result.spm_serno) - 1]]);
                }
            },
            onClose: function(p) {
                search_result.spm_serno = p.cols[0].activeIndex + 1;
            },
            cols: [{
                width: '100%',
                textAlign: 'center',
                values: stringObj.shop.spm_serno_array
            }]
        });

        $('.search').unbind('click');
        $('.search').click(function() {
            var region = [];
            $("input[name='region']:checked").each(function() {
                region.push($(this).val());
            });

            search_result.sd_shopname = $('.sd_shopname').val();
            search_result.sd_lat = nowlat || '';
            search_result.sd_lng = nowlng || '';
            search_result.sd_country = region.toString();

            indexObj._dataStorage(branchObj.storage.search_result, search_result);


            myApp.closeModal();
            search_result = indexObj._dataStorage(branchObj.storage.search_result) || {};

            var condition_list = [];
            condition_list.push({
                condition: stringObj.shop.spm_serno_array[parseInt(search_result.spm_serno) - 1]
            });
            condition_list.push({
                condition: search_result.sd_shopname
            });
            if (search_result.sd_lat && search_result.sd_lng) {
                condition_list.push({
                    condition: stringObj.shop.around_me
                });
            }
            if (search_result.sd_country) {
                for (var i in search_result.sd_country.split(',')) {
                    condition_list.push({
                        condition: stringObj.counties[search_result.sd_country.split(',')[i] - 1]
                    });
                }
            }

            condition_list = {
                condition_list: condition_list
            };

            var temp = indexObj.template('templateConditionBlock');
            var item = temp(condition_list);
            $$('.condition-block').html(item);

            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            //無限加載
            $$('.infinite-scroll').on('infinite', function() {
                branchObj.branchListGet('');
            });

            branchObj.branchListGet('');

        });

    },
    //商家查詢
    branchSearchInit: function(page) {

        var rl_city = regionObj[0].rl_city;
        var rlObj = {
            rlList: [{
                rl_city: rl_city,
                rl_city_ename: regionObj[0].rl_city_ename
            }]
        };
        var temp;
        var item;
        for (var i in regionObj) {
            if (rl_city != regionObj[i].rl_city) {
                var rl_item = {};
                rl_item.rl_city = regionObj[i].rl_city;
                rl_item.rl_city_ename = regionObj[i].rl_city_ename;
                rlObj.rlList.push(rl_item);
                rl_city = regionObj[i].rl_city;
            }
        }

        temp = indexObj.template('templateRegionAccordion');
        item = temp(rlObj);
        $$('.regionList').append(item);

        for (var i in regionObj) {
            temp = indexObj.template('templateRegionList');
            item = temp(regionObj[i]);
            $$('.' + regionObj[i].rl_city_ename).append(item);
        }



        $('.search').click(function() {
            var serving = [];
            var brands = [];
            var cars = [];
            var region = [];
            $("input[name='serving']:checked").each(function() {
                serving.push($(this).val());
            });
            $("input[name='brands']:checked").each(function() {
                brands.push($(this).val());
            });
            $("input[name='cars']:checked").each(function() {
                cars.push($(this).val());
            });
            $("input[name='region']:checked").each(function() {
                region.push($(this).val());
            });

            //console.log(serving);
            //console.log(brands);
            //console.log(cars);
            //console.log(region);
        });



        $$('.accordion-item1').on('open', function(m) {
            $('.content-block-title+.list-block').css('height', 'auto');
            $('.accordion-item1 .item-content').css('min-height', '44px');
        });

        $$('.accordion-item1').on('close', function(e) {
            $('.content-block-title+.list-block').css('height', '93%');
            $('.accordion-item1 .item-content').css('min-height', '100%');
        });

        $$('.accordion-item2').on('open', function(m) {
            $('.content-block-title+.list-block').css('height', 'auto');
            $('.accordion-item2 .item-content').css('min-height', '44px');
        });

        $$('.accordion-item2').on('close', function(e) {
            $('.content-block-title+.list-block').css('height', '93%');
            $('.accordion-item2 .item-content').css('min-height', '100%');
        });

        $$('.accordion-item3').on('open', function(m) {
            $('.content-block-title+.list-block').css('height', 'auto');
            $('.accordion-item3 .item-content').css('min-height', '44px');
        });

        $$('.accordion-item3').on('close', function(e) {
            $('.content-block-title+.list-block').css('height', '93%');
            $('.accordion-item3 .item-content').css('min-height', '100%');
        });


        $$('.accordion-item4').on('open', function(m) {
            isOpen = true;
            $('.content-block-title+.list-block').css('height', 'auto');
            $('.accordion-item4 .region-content').css('min-height', '44px');
        });

        $$('.accordion-item4').on('close', function(e) {
            if (isOpen) {
                $('.content-block-title+.list-block').css('height', '93%');
                $('.accordion-item4 .region-content').css('min-height', '100%');
            }
        });



        $$('.region-item').on('close', function(e) {
            isOpen = false;
            $('.accordion-item4 .region-content').css('min-height', '44px');
        });



    },
    //商家資訊初始化
    branchInfoInit: function(page) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var q = page.query;
        nowSd_id = q.sd_id;
        //console.log(q.sd_id);
        /*var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
         if (branchData.sd_id === undefined) {
         branchData.sd_id = q.sd_id;
         indexObj._dataStorage(branchObj.storage.branchData, branchData);
         }*/

        if (mainSg.mdId) {
            //更新用戶排隊紀錄
            branchObj.shopservicequerecorver();
        }

        branchObj.branchInfoGet(nowSd_id, q.from);

        if (q.tab) {
            myApp.showTab('.' + q.tab);

            if (q.tab == 'branch-preferential-content') {
                $('.toolbar-bottom a').removeClass('active');
                $('.preferential').addClass('active');
                shopcoupon_num = 0;
                branchObj.firstId = '';
                branchObj.listId = '';
                branchObj.listLoading = false;
                branchObj.getShopCouponList(nowSd_id);

                //下拉刷新
                $$('.pull-to-refresh-content').on('refresh', function() {
                    branchObj.shopCouponListRefresh(q.sd_id);
                });
                //無限加載
                $$('.infinite-scroll').on('infinite', function() {
                    branchObj.getShopCouponList(nowSd_id);
                });
            } else if (q.tab == 'branch-queue-content') {
                $('.toolbar-bottom a').removeClass('active');
                $('.queue').addClass('active');
                branchObj.getBranchQueue(nowSd_id);
            }

        }
        //商家資訊
        $$('.branch-info-content').on('show', function() {
            $('.toolbar-bottom a').removeClass('active');
            $('.info').addClass('active');
            branchObj.branchInfoGet(nowSd_id, q.from);
        });

        //商家評價
        $$('.branch-evaluate-browse-content').on('show', function() {
            $('.toolbar-bottom a').removeClass('active');
            $('.evaluate-browse').addClass('active');
            branchObj.shopquestionnaire_result(nowSd_id);
        });
        //商家排隊服務
        $$('.branch-queue-content').on('show', function() {
            $('.toolbar-bottom a').removeClass('active');
            $('.queue').addClass('active');
            branchObj.getBranchQueue(nowSd_id);
        });
        //商家優惠
        $$('.branch-preferential-content').on('show', function() {
            $('.toolbar-bottom a').removeClass('active');
            $('.preferential').addClass('active');
            shopcoupon_num = 0;
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            $('.shopcoupon-list-container').html('');
            branchObj.getShopCouponList(nowSd_id);

            //下拉刷新
            $$('.pull-to-refresh-content').on('refresh', function() {
                branchObj.shopCouponListRefresh(nowSd_id);
            });
            //無限加載
            $$('.infinite-scroll').on('infinite', function() {
                branchObj.getShopCouponList(nowSd_id);
            });
        });

        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 2000);


    },
    //商家資訊取得
    branchInfoGet: function(sd_id, from) {
        myApp.showIndicator();
        if (nowPage === 'pay-setting') {
            myApp.showIndicator();
        }
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: encodeURIComponent(btoa(localStorage.getItem('salt_no') + '_' + CryptoJS.SHA256(stringObj.shop.moduleaccount + stringObj.shop.modulepassword + localStorage.getItem('salt')))),
            sd_id: sd_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcontentquery,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.shopcontentqueryresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcontentqueryresult));
                    if (rObj.message_no === "000000000") {

                        if (nowPage === 'branch-info' || nowPage === 'used-car-branch-info' || nowPage === 'temple-info') {

                            if (rObj.sd_advancedata) {
                                rObj.sd_advancedata = JSON.parse(rObj.sd_advancedata);
                                for (var i in rObj.sd_advancedata) {
                                    if (rObj.sd_advancedata[i].content_img) {
                                        rObj.sd_advancedata[i].content_img = stringObj.text.branch_img_path + rObj.sd_advancedata[i].content_img;
                                    }
                                }
                            }

                            if (rObj.sd_shopphotopath) {
                                rObj.sd_shopphotopath = stringObj.text.branch_img_path + rObj.sd_shopphotopath;
                            } else {
                                rObj.sd_shopphotopath = '../app/image/imgDefault.png';
                            }

                            if (rObj.sd_havebind === '1') {
                                rObj.sd_havebind = true;
                                rObj.authenticate_icon = '../app/image/authenticate.png';
                                $('.toolbar-bottom.tabbar').css('display', 'block');
                            } else {
                                rObj.sd_havebind = false;
                                $('.toolbar-bottom.tabbar').css('display', 'none');
                            }
                            rObj.subscription_icon = '../app/image/unsubscribe.png';

                            rObj.sd_id = sd_id;

                            if (nowPage === 'branch-info' || nowPage === 'used-car-branch-info') {
                                var temp = indexObj.template('templateBranchInfo');
                                var item = temp(rObj);
                                $$('.branch-info-content').html(item);
                            }
                            myApp.initImagesLazyLoad('.page-content');

                            if (rObj.sd_shopphotopath) {
                                //圖片放大滑動檢視特效
                                $('.main-img').wrap('<span style="display:inline-block"></span>')
                                    .css('display', 'block')
                                    .parent()
                                    .zoom();
                            }

                            //$('.left a').attr('href', 'branch-cooperative?menu=' + branch_menu + '&cate=' + branch_cate);

                            var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
                            var search_result = indexObj._dataStorage(branchObj.storage.search_result) || {};
                            //if (mainSg.md_clienttype === '1' || mainSg.md_clienttype === '2') {
                            if (from === 'preview') {
                                $('.back-btn a').attr('href', 'shop/branch-info-edit');
                                $('.back-btn a').html('<span class="icon-chevron-left"></span>');
                                $('.back-btn').css('font-size', '1.5em');
                            } else if (from === 'favorite') {
                                $('.back-btn a').attr('href', 'shop/favorite');
                            } else if (from === 'map') {
                                $('.back-btn a').attr('href', 'map');
                            } else if (from === 'map_mode') {
                                $('.back-btn a').attr('href', 'around-search-result?menu=' + branch_menu + '&cate=' + branch_cate);
                            } else if (from === 'search') {
                                $('.back-btn a').attr('href', '#');
                                $('.back-btn a').addClass('back');
                            } else if (indexObj._dataStorage(branchObj.storage.search_result) && search_result.sd_lat) {
                                $('.back-btn a').attr('href', 'around-search-result');
                            } else if (indexObj._dataStorage(branchObj.storage.search_result)) {
                                $('.back-btn a').attr('href', 'shop-search-result');
                            } else {
                                $('.back-btn a').attr('href', 'branch-cooperative?menu=' + branch_menu + '&cate=' + branch_cate);
                            }


                            $$('.track').click(function() {
                                addFavorite(sd_id, stringObj.text.branch_img_path + rObj.sd_shopphotopath, rObj.sd_shopname, rObj.sd_shopaddress, rObj.sd_shoptel, '', '2');
                            });


                            var favoriteList = indexObj._dataStorage(indexObj._storage.favorite) || {
                                lastupdate: '',
                                newsList: [],
                                couponList: [],
                                branchList: [],
                                shopcouponList: []
                            };

                            var favoriteObj = JSON.stringify(favoriteList.branchList);

                            if (favoriteObj.match(sd_id)) {
                                $$('.track').html('<img src="../app/image/subscribe.png" onerror=\'this.src="app/image/imgDefault.png"\' />');
                            }

                        } else if (nowPage === 'branch-info-edit') {
                            var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
                            branchData.sd_shopphotopath = rObj.sd_shopphotopath;
                            indexObj._dataStorage(branchObj.storage.branchData, branchData);

                            if (localStorage.getItem(branchObj.storage.imagePath)) {
                                rObj.sd_shopphotopath = stringObj.text.branch_img_path + localStorage.getItem(branchObj.storage.imagePath);
                                branchData.sd_shopphotopath = localStorage.getItem(branchObj.storage.imagePath);
                                indexObj._dataStorage(branchObj.storage.branchData, branchData);
                            } else {
                                if (rObj.sd_shopphotopath) {
                                    rObj.sd_shopphotopath = stringObj.text.branch_img_path + rObj.sd_shopphotopath;
                                } else {
                                    rObj.sd_shopphotopath = '../app/image/imgDefault.png';
                                }
                            }


                            var temp = indexObj.template('templateBranchInfoEdit');
                            var item;
                            var shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};


                            if (shop_data.sd_shopname) {
                                if (localStorage.getItem(branchObj.storage.imagePath)) {
                                    shop_data.sd_shopphotopath = stringObj.text.branch_img_path + localStorage.getItem(branchObj.storage.imagePath);
                                } else {
                                    shop_data.sd_shopphotopath = stringObj.text.branch_img_path + shop_data.sd_shopphotopath;
                                }
                                for (var i in shop_data.sd_advancedata) {
                                    if (shop_data.sd_advancedata[i].content_img) {
                                        shop_data.sd_advancedata[i].img_path = stringObj.text.branch_img_path;
                                    }
                                }
                                item = temp(shop_data);
                            } else {
                                if (rObj.sd_advancedata) {
                                    rObj.sd_advancedata = JSON.parse(rObj.sd_advancedata);
                                    for (var i in rObj.sd_advancedata) {
                                        if (rObj.sd_advancedata[i].content_img) {
                                            rObj.sd_advancedata[i].img_path = stringObj.text.branch_img_path;
                                        }
                                    }
                                }
                                item = temp(rObj);
                            }

                            $$('.branch-info-edit-content').html(item);
                            myApp.initImagesLazyLoad('.page-content');

                            if (localStorage.getItem('scrollTop')) {
                                $('.branch-info-edit-content').scrollTop(parseFloat(localStorage.getItem('scrollTop')));
                                localStorage.removeItem('scrollTop');
                            }

                            //向上移動
                            $('.move-up').click(function(event) {
                                if ($(this).parents('li').index() !== 0) {
                                    shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};
                                    if (!shop_data.sd_advancedata) {
                                        shop_data.sd_advancedata = rObj.sd_advancedata || [];
                                        indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                    }
                                    shop_data.sd_advancedata.splice($(this).parents('li').index() - 1, 0, shop_data.sd_advancedata.splice($(this).parents('li').index(), 1)[0]);
                                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                    $(this).parents('li').insertBefore('.branch-details-block.sortable li:nth-child(' + ($(this).parents('li').index()) + ')');
                                }
                            });
                            //向下移動
                            $('.move-down').click(function(event) {
                                shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};
                                if (!shop_data.sd_advancedata) {
                                    shop_data.sd_advancedata = rObj.sd_advancedata || [];
                                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                    shop_data.sd_advancedata.splice($(this).parents('li').index() + 1, 0, shop_data.sd_advancedata.splice($(this).parents('li').index(), 1)[0]);
                                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                    $(this).parents('li').insertAfter('.branch-details-block.sortable li:nth-child(' + ($(this).parents('li').index() + 2) + ')');
                                } else {
                                    if ($(this).parents('li').index() < shop_data.sd_advancedata.length - 1) {
                                        shop_data.sd_advancedata.splice($(this).parents('li').index() + 1, 0, shop_data.sd_advancedata.splice($(this).parents('li').index(), 1)[0]);
                                        indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                        $(this).parents('li').insertAfter('.branch-details-block.sortable li:nth-child(' + ($(this).parents('li').index() + 2) + ')');
                                    }
                                }
                            });

                            shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};
                            $('.details-img').click(function() {
                                if (!shop_data.sd_advancedata) {
                                    shop_data.sd_advancedata = rObj.sd_advancedata || [];
                                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                }
                                if (Cookies.get('app_version') !== undefined) {
                                    addImage('shopcontent', shop_data.sd_advancedata[$(this).parents('li').index()].content_img);
                                } else {
                                    setImgOnPC('sd_id=' + sd_id + '&folder=shopcontent&position=' + $(this).parents('li').index(), shop_data.sd_advancedata[$(this).parents('li').index()].content_img);
                                }
                            });
                            $('.details-text').parents('.item-inner').click(function() {
                                if (!shop_data.sd_advancedata) {
                                    shop_data.sd_advancedata = rObj.sd_advancedata || [];
                                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                }
                                var position = $(this).parents('li').index();
                                var details_text = $(this).find('.details-text');
                                myApp.modal({
                                    title: '文字內容',
                                    text: '<textarea class="info resizable" placeholder="內容" rows="8"></textarea>',
                                    buttons: [{
                                        text: stringObj.text.cancel,
                                        onClick: function() {

                                        }
                                    }, {
                                        text: stringObj.text._clear,
                                        onClick: function() {
                                            shop_data.sd_advancedata.splice(position, 1);
                                            details_text.parents('.branch-details-item').remove();
                                            indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                        }
                                    }, {
                                        text: stringObj.text.edit,
                                        onClick: function() {
                                            if (!shop_data.sd_advancedata) {
                                                shop_data.sd_advancedata = rObj.sd_advancedata;
                                                indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                            }
                                            shop_data.sd_advancedata[position].content_text = $('textarea.info').val();
                                            if ($('textarea.info').val()) {
                                                details_text.text($('textarea.info').val());
                                            } else {
                                                shop_data.sd_advancedata.splice(position, 1);
                                                details_text.parents('.branch-details-item').remove();
                                            }
                                            indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                        }
                                    }]
                                });

                                $('textarea.info').val(details_text.text());

                                $('textarea.info').focus();

                            });
                            $('.add-details-image').click(function() {
                                if (!shop_data.sd_advancedata) {
                                    shop_data.sd_advancedata = rObj.sd_advancedata || [];
                                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                }
                                if (Cookies.get('app_version') !== undefined) {
                                    addImage('shopcontent', '');
                                } else {
                                    setImgOnPC('sd_id=' + sd_id + '&folder=shopcontent&position=add', '');
                                }
                            });
                            $('.add-details-text').click(function() {
                                myApp.modal({
                                    title: '文字內容',
                                    text: '<textarea class="info resizable" placeholder="內容" rows="8"></textarea>',
                                    buttons: [{
                                        text: stringObj.text.cancel,
                                        onClick: function() {}
                                    }, {
                                        text: stringObj.text.add,
                                        onClick: function() {
                                            if (!shop_data.sd_advancedata) {
                                                shop_data.sd_advancedata = rObj.sd_advancedata || [];
                                                indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                            }
                                            if ($.trim($('textarea.info').val()) !== '') {
                                                shop_data.sd_advancedata.push({
                                                    content_text: $('textarea.info').val(),
                                                    content_img: ''
                                                });
                                                indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                                                localStorage.setItem('scrollTop', $('.branch-info-edit-content').scrollTop() + 70);
                                                saveShopData();
                                                mainView.router.load({
                                                    url: window.location.href.substring(window.location.href.indexOf("#!/") + 3),
                                                    reload: true
                                                });
                                            }
                                        }
                                    }]
                                });

                                $('textarea.info').focus();

                            });

                            if (shop_data.sd_shopname) {
                                $$('.branch-address textarea').val(shop_data.sd_shopaddress);
                                $$('.branch-info textarea').val(shop_data.sd_introtext);
                                $$('.user-address textarea').val(shop_data.sd_contact_address);
                            } else {
                                $$('.branch-address textarea').val(rObj.sd_shopaddress);
                                $$('.branch-info textarea').val(rObj.sd_introtext);
                                $$('.user-address textarea').val(rObj.sd_contact_address);
                            }

                            if (rObj.sd_weeklystart) {
                                $$('.branchDate').val('星期' + rObj.sd_weeklystart + ' ~ ' + '星期' + rObj.sd_weeklyend);
                            } else if (shop_data.sd_weeklystart) {
                                $$('.branchDate').val('星期' + shop_data.sd_weeklystart + ' ~ ' + '星期' + shop_data.sd_weeklyend);
                            } else {
                                $$('.branchDate').val('');
                            }
                            if (rObj.sd_dailystart) {
                                $$('.branchTime').val(rObj.sd_dailystart.substring(0, 5) + ' ~ ' + rObj.sd_dailyend.substring(0, 5));
                            } else if (shop_data.sd_dailystart) {
                                $$('.branchTime').val(shop_data.sd_dailystart.substring(0, 5) + ' ~ ' + shop_data.sd_dailyend.substring(0, 5));
                            } else {
                                $$('.branchTime').val('');
                            }


                            //更新storage相對應廠商圖片路徑
                            /*var mainSg = indexObj._dataCookies(indexObj._storage.main);
                             findArrayItem(mainSg.shopdata_array, 'sd_id', sd_id);
                             mainSg.shopdata_array[nowIndex].sd_shopphotopath = rObj.sd_shopphotopath;
                             indexObj._dataStorage(indexObj._storage.main, mainSg);*/

                            //營業日期
                            var pickerBranchDate = myApp.picker({
                                input: '.branchDate',
                                rotateEffect: false,
                                toolbarTemplate: '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"></a>' +
                                    '</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>',
                                formatValue: function(p, values, displayValues) {
                                    return values[0] + ' ~ ' + values[1];
                                },
                                cols: [{
                                        values: stringObj.text.week_array,
                                        textAlign: 'center',
                                        width: 120

                                    },
                                    // Divider
                                    {
                                        textAlign: 'center',
                                        divider: true,
                                        content: ' ~ '
                                    }, {
                                        values: stringObj.text.week_array,
                                        textAlign: 'center',
                                        width: 120

                                    }

                                ]
                            });

                            //營業時間
                            var pickerTime = myApp.picker({
                                input: '.branchTime',
                                rotateEffect: false,
                                toolbarTemplate: '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"></a>' +
                                    '</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>',
                                formatValue: function(p, values, displayValues) {
                                    return values[0] + ':' + values[1] + ' ~ ' + values[2] + ':' + values[3];
                                },
                                cols: [
                                    // Hours
                                    {
                                        textAlign: 'center',
                                        values: (function() {
                                            var arr = [];
                                            for (var i = 0; i <= 23; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })(),
                                    },
                                    // Divider
                                    {
                                        textAlign: 'center',
                                        divider: true,
                                        content: ':'
                                    },
                                    // Minutes
                                    {
                                        values: (function() {
                                            var arr = [];
                                            for (var i = 0; i <= 59; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })(),
                                    },
                                    // Divider
                                    {
                                        textAlign: 'center',
                                        divider: true,
                                        content: ' ~ '
                                    },
                                    // Hours
                                    {
                                        textAlign: 'center',
                                        values: (function() {
                                            var arr = [];
                                            for (var i = 0; i <= 23; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })(),
                                    },
                                    // Divider
                                    {
                                        textAlign: 'center',
                                        divider: true,
                                        content: ':'
                                    },
                                    // Minutes
                                    {
                                        textAlign: 'center',
                                        values: (function() {
                                            var arr = [];
                                            for (var i = 0; i <= 59; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })(),
                                    }

                                ]
                            });


                            var region = stringObj.region;

                            zipArray = region.臺北市[1];

                            var branchRegion = myApp.picker({
                                input: '.branchRegion',
                                rotateEffect: false,
                                toolbarTemplate: '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"></a>' +
                                    '</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>',
                                formatValue: function(p, values, displayValues) {
                                    return zipArray[regionIndex];
                                },
                                cols: [{
                                        textAlign: 'center',
                                        width: 140,
                                        values: stringObj.counties,
                                        onChange: function(picker, country) {
                                            mCounty = country;
                                            if (picker.cols[1].replaceValues) {
                                                picker.cols[1].replaceValues(region[country][0]);
                                                //regionArray = region[country][0];
                                                zipArray = region[country][1];
                                                $('#branch-address').val(country + region[country][0][0]);
                                            }
                                        }
                                    },

                                    {
                                        textAlign: 'center',
                                        values: region.臺北市[0],
                                        width: 140,
                                        onChange: function(picker, district) {
                                            mDistrict = district;
                                            regionIndex = picker.cols[1].activeIndex;
                                            $('#branch-address').val(mCounty + district);
                                        }
                                    },
                                ]
                            });

                            //編輯照片
                            $('.edit-img').click(function() {
                                if (Cookies.get('app_version') !== undefined) {
                                    addImage('branch-img', '');
                                } else {
                                    setImgOnPC('sd_id=' + sd_id + '&folder=maincover', '');
                                }
                            });

                        } else if (nowPage === 'pay-setting') {

                            if (rObj.sd_paymentflow !== '0') {
                                var sd_paymentflowdata = JSON.parse(rObj.sd_paymentflowdata);
                                switch (rObj.sd_paymentflow) {
                                    case '1':
                                        $('.list-block li.esafe').css('display', 'block');
                                        $('.list-block li.ecpay').css('display', 'none');
                                        $('.sd_paymentflow').val('紅陽');
                                        $('.web').val(sd_paymentflowdata.web);
                                        $('.TransPwd').val(sd_paymentflowdata.TransPwd);
                                        break;
                                    case '2':
                                        $('.list-block li.esafe').css('display', 'none');
                                        $('.list-block li.ecpay').css('display', 'block');
                                        $('.sd_paymentflow').val('綠界');
                                        $('.MerchantID').val(sd_paymentflowdata.MerchantID);
                                        $('.HashKey').val(sd_paymentflowdata.HashKey);
                                        $('.HashIV').val(sd_paymentflowdata.HashIV);
                                        break;
                                }
                            }


                            var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
                            var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                sd_id: branchData.sd_id,
                                sd_paymentflow: parseInt(rObj.sd_paymentflow)
                            };
                            //金流類型
                            var sd_paymentflow = myApp.picker({
                                input: '.sd_paymentflow',
                                rotateEffect: false,
                                toolbarTemplate: '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '<div class="center">' + stringObj.shop.sd_paymentflow + '</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>',
                                formatValue: function(p, values, displayValues) {
                                    return values[0];
                                },
                                onOpen: function(p) {
                                    if (data.sd_paymentflow !== 0) {
                                        p.setValue([stringObj.shop.sd_paymentflow_array[data.sd_paymentflow]]);
                                        switch (data.sd_paymentflow) {
                                            case 1:
                                                //紅陽
                                                $('.list-block li.esafe').css('display', 'block');
                                                $('.list-block li.ecpay').css('display', 'none');
                                                break;
                                            case 2:
                                                //綠界
                                                $('.list-block li.esafe').css('display', 'none');
                                                $('.list-block li.ecpay').css('display', 'block');
                                                break;
                                        }
                                    }
                                },
                                onClose: function(p) {
                                    data.sd_paymentflow = p.cols[0].activeIndex + 1;
                                },
                                onChange: function(picker, carmodel) {
                                    switch (picker.cols[0].activeIndex + 1) {
                                        case 1:
                                            $('.list-block li.esafe').css('display', 'block');
                                            $('.list-block li.ecpay').css('display', 'none');
                                            break;
                                        case 2:
                                            $('.list-block li.esafe').css('display', 'none');
                                            $('.list-block li.ecpay').css('display', 'block');
                                            break;
                                    }
                                    data.sd_paymentflow = picker.cols[0].activeIndex + 1;
                                },
                                cols: [{
                                    width: '100%',
                                    textAlign: 'center',
                                    values: stringObj.shop.sd_paymentflow_array
                                }]
                            });

                            $('.toolbar-bottom.set').click(function(event) {
                                var isError = false;
                                if (data.sd_paymentflow !== 0) {
                                    switch (data.sd_paymentflow) {
                                        case 1:
                                            if ($.trim($('.web').val()) !== '' || $.trim($('.TransPwd').val()) !== '') {
                                                data.sd_paymentflowdata = {
                                                    web: $('.web').val(),
                                                    TransPwd: $('.TransPwd').val()
                                                };
                                            } else {
                                                isError = true;
                                            }
                                            break;
                                        case 2:
                                            if ($.trim($('.MerchantID').val()) !== '' || $.trim($('.HashKey').val()) !== '' || $.trim($('.HashIV').val()) !== '') {
                                                data.sd_paymentflowdata = {
                                                    MerchantID: $('.MerchantID').val(),
                                                    HashKey: $('.HashKey').val(),
                                                    HashIV: $('.HashIV').val()
                                                };
                                            } else {
                                                isError = true;
                                            }
                                            break;
                                    }
                                    if (!isError) {
                                        data.sd_paymentflowdata = JSON.stringify(data.sd_paymentflowdata);
                                        branchObj.updateshopdatapayment(data);
                                    } else {
                                        myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                                        if (browser_width < 992) {
                                            $('.toast-container').css('width', '40%');
                                            $('.toast-container').css('left', '45%');
                                        } else {
                                            $('.toast-container').css('width', '15%');
                                            $('.toast-container').css('left', '47.5%');
                                        }
                                    }

                                } else {
                                    myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                                    if (browser_width < 992) {
                                        $('.toast-container').css('width', '40%');
                                        $('.toast-container').css('left', '45%');
                                    } else {
                                        $('.toast-container').css('width', '15%');
                                        $('.toast-container').css('left', '47.5%');
                                    }
                                }
                            });
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });


    },
    //取得商家排隊資訊
    getBranchQueue: function(sd_id) {
        branchObj.shopservicelistquery(sd_id);

    },
    //商家綁定
    branchBindingInit: function(page) {
        var q = page.query;
        var md_id = q.md_id;

        $('.branch-binding-left').click(function(event) {
            //window.history.back();
            //            mainView.router.load({
            //                url: 'branch-cooperative?menu=' + branch_menu + '&cate=' + branch_cate
            //            });
            localStorage.setItem('pageInit', nowPage);
            window.location = 'pm/branch-cooperative?cate=' + branch_cate + '&listtype=' + nowBranchType;

        });


        //template
        var temp = indexObj.template('templateBranchListNull');
        var item = temp('');
        $$('.branch-binding-content .list-block ul').html(item);


        //下拉刷新
        $$('.pull-to-refresh-content').on('refresh', function() {
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            branchObj.branchListRefresh($(".search-block input").val());
        });
        //無限加載
        $$('.infinite-scroll').on('infinite', function() {
            branchObj.branchListGet($(".search-block input").val());
        });


        $$('.search-block .col-15').click(function() {
            if ($(".search-block input").val() == '') {
                myApp.alert(stringObj.text.no_input_name, stringObj.text.warn);
            } else {
                branchObj.firstId = '';
                branchObj.listId = '';
                branchObj.listLoading = false;
                myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
                branchObj.branchListGet($(".search-block input").val());
            }
        });


        $$('.binding').click(function() {
            if ($("input[name=branch-radio]:checked").val() == null) {
                myApp.alert(stringObj.text.no_shop, stringObj.text.warn);
            } else {

                var dcil_data = stringObj.text.dcil_list;
                var dcil_item = '';
                for (var i in dcil_data) {
                    if (dcil_data[i].dcil_category === 3) {
                        dcil_item += '<li style="border-bottom: 1px dashed #ccc;">' +
                            '<label class="label-radio item-content">' +
                            '<input type="radio" name="bindDays" value="' + dcil_data[i].dcil_id + '" checked>' +
                            '<div class="item-inner">' +
                            '<div class="item-title-row">' +
                            '<div class="item-title"><b>' + dcil_data[i].dcil_itemname + '</b></div>' +
                            '<div class="item-after">' + dcil_data[i].dcil_depositamount + 'pt</div>' +
                            '</div>' +
                            '<div class="item-text">' + dcil_data[i].dcil_itemdescript + '</div>' +
                            '</div>' +
                            '</label>' +
                            '</li>';
                    }
                }

                myApp.modal({
                    title: stringObj.text.bindingType,
                    text: '<div class="row">' +
                        '<div class="col-40 note">' + stringObj.text.shop_type + '：</div>' +
                        '<div class="col-60">' + stringObj.text.shop_type_array[0] + '</div>' +
                        '</div>' +
                        '<div class="row">' +
                        '<div class="col-40 note">試用方案：</div>' +
                        '<div class="col-60"></div>' +
                        '</div>' +
                        '<div class="list-block media-list">' +
                        '<ul id="bindDaysList" style="background:none;">' +
                        dcil_item +
                        '</ul>' +
                        '</div>',
                    buttons: [{
                        text: stringObj.text.cancel,
                        onClick: function() {

                        }
                    }, {
                        text: stringObj.text.confirm,
                        onClick: function() {
                            if ($('input[name="bindDays"]:checked').val() !== null && $(".modal-text .row select option:selected").val() !== '') {
                                var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
                                var businessData = JSON.parse(localStorage.getItem(indexObj._storage.businessData));
                                var data = {
                                    modacc: stringObj.shop.moduleaccount,
                                    modvrf: Cookies.get('modvrf'),
                                    sls_sat: mainSg.sat,
                                    sd_id: $("input[name=branch-radio]:checked").val(),
                                    md_id: md_id,
                                    //validity_days: $('input[name="bindDays"]:checked').val(),
                                    dcil_id: $('input[name="bindDays"]:checked').val(),
                                    shop_type: '1'
                                };
                                //console.log(JSON.stringify(data));

                                myApp.showIndicator();
                                indexObj._wcfget({
                                    url: branchObj.dataUrl.shopdatabind,
                                    para: data,
                                    success: function(r) {
                                        //console.log(JSON.stringify(r));
                                        if (r.shopdatabindresult) {
                                            var rObj = JSON.parse(JSON.stringify(r.shopdatabindresult));
                                            if (rObj.message_no === "000000000") {

                                                myApp.modal({
                                                    title: stringObj.text.warn,
                                                    text: stringObj.text.binding_success,
                                                    buttons: [{
                                                        text: stringObj.text.confirm,
                                                        onClick: function() {
                                                            //                                                                    mainView.router.load({
                                                            //                                                                        url: 'branch-cooperative?menu=' + branch_menu + '&cate=' + branch_cate
                                                            //                                                                    });
                                                            localStorage.setItem('pageInit', nowPage);
                                                            window.location = 'pm/branch-cooperative?cate=' + branch_cate + '&listtype=' + nowBranchType;
                                                        }
                                                    }]
                                                });

                                            } else {
                                                stringObj.return_header(rObj.message_no);
                                                if (_tip) {
                                                    myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                                    _tip = null;
                                                }
                                            }
                                        }
                                        myApp.hideIndicator();
                                    },
                                    error: function(r) {
                                        myApp.hideIndicator();
                                        noNetwork();
                                    }
                                });

                            } else {
                                myApp.toast(stringObj.text.no_dcil_id_or_type, '', {}).show();
                                if (browser_width < 992) {
                                    $('.toast-container').css('width', '48%');
                                    $('.toast-container').css('left', '42%');
                                } else {
                                    $('.toast-container').css('width', '15%');
                                    $('.toast-container').css('left', '47.5%');
                                }
                            }
                        }
                    }]
                });

                $('.modal-text').css('margin', '5% 0');

                //$('.modal-text .row').css('padding-left', '15px');
                $('.modal-text .row select').css('width', '100%');
                $('.modal-text .row select').css('border', '0');
                $('.modal-text .row select').css('background', 'none');
                $('.modal-text .row select').css('border-bottom', '1px solid #ccc');
                $('.modal-text .row select').css('font-size', '.95em');
                $('.modal-text .row').css('margin-top', '5%');

                $('.modal-text .list-block').css('margin', '1% 0');

                $('.modal-text .col-40.note').css('color', 'steelblue');

                $('.modal .list-block').css("margin", "1% 0");
                $('.modal-inner').css("background", "#FFF");
                $('.modal .item-text').css("text-align", "left");
                $('.media-list li').css("border-bottom", "1px solid #DDD");
                $('.item-after').css("color", "firebrick");

            }

        });

    },
    //商家列表
    branchListGet: function(sd_shopname) {
        myApp.showIndicator();
        if (branchObj.listLoading)
            return;
        branchObj.listLoading = true;
        $$('.infinite-scroll-preloader').show();

        if (nowPage === 'branch-binding') {
            myApp.showIndicator();
        }

        var id = branchObj.listId;

        var url = branchObj.dataUrl.shoplistquery;
        var para_obj;
        if (nowPage === 'map') {
            //myApp.showIndicator();
            para_obj = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                operation_type: '0',
                spm_serno: Cookies.get('marker_type'),
                sd_zipcode: '',
                sd_country: '',
                sd_shopname: sd_shopname,
                startid: '',
                queryamount: '',
                sd_lat: Cookies.get('sd_lat'),
                sd_lng: Cookies.get('sd_lng'),
                distance: ''
            };
            if (Cookies.get('marker_type') === undefined) {
                para_obj.spm_serno = '2';
            }
        } else if (nowPage === 'shop-search-result' || nowPage === 'around-search-result' || indexObj._dataStorage(branchObj.storage.search_result)) {
            var search_result = indexObj._dataStorage(branchObj.storage.search_result) || {};
            if (search_result.spm_serno === 1) {
                search_result.spm_serno = '';
            }
            para_obj = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                operation_type: '2',
                spm_serno: search_result.spm_serno,
                sd_zipcode: '',
                sd_country: search_result.sd_country,
                sd_shopname: search_result.sd_shopname,
                startid: id,
                queryamount: '20',
                sd_lat: search_result.sd_lat,
                sd_lng: search_result.sd_lng,
                distance: branchObj.distance
            };
            if (nowPage === 'around-search-result') {
                para_obj.startid = '';
                para_obj.spm_serno = branchObj.menuInfo.spm_serno;
            }
            if (nowMode === 'map') {
                para_obj.startid = '';
                para_obj.queryamount = '50';
                para_obj.sd_lat = nowlat;
                para_obj.sd_lng = nowlng;
            }
        } else if (nowPage === 'branch-cooperative') {
            para_obj = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                operation_type: '0',
                spm_serno: branchObj.menuInfo.spm_serno,
                sd_zipcode: '',
                sd_country: '',
                sd_shopname: sd_shopname,
                startid: id,
                queryamount: '20',
                sd_lat: '',
                sd_lng: '',
                distance: ''
            };
            var searchShopName = localStorage.getItem(branchObj.storage.searchShopName) || '';
            para_obj.sd_shopname = searchShopName;
            var searchRegion = indexObj._dataStorage(branchObj.storage.searchRegion) || [];
            if (searchRegion) {
                para_obj.sd_zipcode = searchRegion + '';
            }

        } else if (nowPage === 'branch-binding') {
            para_obj = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                operation_type: '2',
                spm_serno: '',
                sd_zipcode: '',
                sd_country: '',
                sd_shopname: sd_shopname,
                startid: id,
                queryamount: '20',
                sd_lat: '',
                sd_lng: '',
                distance: ''
            };
        }

        //console.log(JSON.stringify(para_obj));
        indexObj._wcfget({
            url: url,
            para: para_obj,
            success: function(data) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(data);
                //console.log(JSON.stringify(data));

                if (data.shoplistqueryresult.message_no === '000000000' || data.shoplistqueryresult.message_no === '011101000') {
                    if (data.shoplistqueryresult.shoplistarray) {

                        if (id === '') {
                            $$('.branch-list-container').html('<div class="row branch-block"></div>');
                            $$('.branch-binding-content .list-block ul').html('');
                        }

                        var dataObj = {
                            list: []
                        };

                        if (nowPage === 'map' || nowMode === 'map') {
                            indexObj._dataStorage('shop_list', data.shoplistqueryresult.shoplistarray);
                        }

                        for (var i in data.shoplistqueryresult.shoplistarray) {

                            if (nowPage === 'map' || nowMode === 'map') {
                                if (data.shoplistqueryresult.shoplistarray[i].sd_lat && data.shoplistqueryresult.shoplistarray[i].sd_lng) {
                                    //定義經緯度位置
                                    var latlng = new google.maps.LatLng(data.shoplistqueryresult.shoplistarray[i].sd_lat, data.shoplistqueryresult.shoplistarray[i].sd_lng);

                                    if (nowPage === 'map') {
                                        //加入標示點(Marker)
                                        branchObj.addMarker_fullmap(latlng, data.shoplistqueryresult.shoplistarray[i].sd_shopname, full_map, Cookies.get('marker_type'), data.shoplistqueryresult.shoplistarray[i].sd_id);
                                    } else if (nowMode === 'map') {
                                        //加入標示點(Marker)
                                        branchObj.addMarker_fullmap(latlng, data.shoplistqueryresult.shoplistarray[i].sd_shopname, full_map, data.shoplistqueryresult.shoplistarray[i].spm_serno, data.shoplistqueryresult.shoplistarray[i].sd_id);
                                    }
                                }
                            }

                            var listItem = {};
                            listItem.sd_id = data.shoplistqueryresult.shoplistarray[i].sd_id;
                            if (data.shoplistqueryresult.shoplistarray[i].sd_shopphotopath !== '') {
                                listItem.sd_shopphotopath = stringObj.text.branch_img_path + data.shoplistqueryresult.shoplistarray[i].sd_shopphotopath;
                            } else {
                                listItem.sd_shopphotopath = '../app/image/imgDefault.png';
                            }
                            if (data.shoplistqueryresult.shoplistarray[i].sd_havebind === '1') {
                                listItem.sd_havebind = true;
                                listItem.authenticate_icon = '../app/image/authenticate.png';
                            } else {
                                listItem.sd_havebind = false;
                            }
                            listItem.subscription_icon = '../app/image/unsubscribe.png';
                            listItem.sd_shopname = data.shoplistqueryresult.shoplistarray[i].sd_shopname;
                            listItem.star_sd_shopname = indexObj.jsonUrlEncode(data.shoplistqueryresult.shoplistarray[i].sd_shopname);
                            listItem.sd_shoptel = data.shoplistqueryresult.shoplistarray[i].sd_shoptel;
                            listItem.sd_shopaddress = data.shoplistqueryresult.shoplistarray[i].sd_shopaddress;
                            listItem.spm_serno = data.shoplistqueryresult.shoplistarray[i].spm_serno;
                            if (data.shoplistqueryresult.shoplistarray[i].spm_serno !== '99') {
                                listItem.sd_type = stringObj.shop.spm_serno_array[parseInt(data.shoplistqueryresult.shoplistarray[i].spm_serno) - 1];
                            }
                            if (para_obj.spm_serno == '99') {
                                listItem.isTemple = true;
                            } else {
                                listItem.isTemple = false;
                            }
                            if (nowPage === 'shop-search-result' || nowPage === 'around-search-result' || indexObj._dataStorage(branchObj.storage.search_result)) {
                                listItem.sd_distance = (google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(parseFloat(search_result.sd_lat), parseFloat(search_result.sd_lng)), new google.maps.LatLng(parseFloat(data.shoplistqueryresult.shoplistarray[i].sd_lat), parseFloat(data.shoplistqueryresult.shoplistarray[i].sd_lng))) / 1000).toFixed(1);
                            }
                            dataObj.list.push(listItem);

                        }


                        if (dataObj.list.length > 0) {
                            if (branchObj.firstId === '') {
                                branchObj.firstId = dataObj.list[0].sd_id;
                            }
                        }

                        if (nowMode === 'map' || nowPage === 'around-search-result') {
                            branchObj.distance = data.shoplistqueryresult.shoplistarray[data.shoplistqueryresult.shoplistarray.length - 1].distance;
                        }

                        if (dataObj.list.length > 0) {
                            branchObj.listId = dataObj.list[(dataObj.list.length - 1)].sd_id;
                        }

                        if (nowPage === 'branch-cooperative' || nowPage === 'around-search-result') {
                            if (nowMode !== 'map') {
                                //template
                                var temp;
                                var item;
                                switch (nowBranchType) {
                                    case '0':
                                        //大圖版型
                                        temp = indexObj.template('templateBranchList');
                                        item = temp(dataObj);
                                        $$('.branch-list-container').append(item);
                                        $('.listType0').css('display', 'none');
                                        $('.listType2').css('display', 'flex');
                                        $('.title a').ellipsis({
                                            row: 2
                                        });
                                        break;
                                    case '1':
                                        //列表版型
                                        temp = indexObj.template('templateBranchListType1');
                                        item = temp(dataObj);
                                        $$('.branch-list-container').append(item);
                                        $('.fa-th-list').css('color', '#f26531');
                                        $('.image').addClass('listType1');
                                        $('.type1Title').ellipsis({
                                            row: 2
                                        });
                                        break;
                                    case '2':
                                        //格子板型
                                        temp = indexObj.template('templateBranchListType2');
                                        item = temp(dataObj);
                                        $$('.branch-list-container .branch-block').append(item);
                                        $('.listType0').css('display', 'flex');
                                        $('.listType2').css('display', 'none');
                                        $('.image').addClass('listType2');

                                        $('.branch-block .branch-item .title span').ellipsis({
                                            row: 2
                                        });
                                        break;
                                    default:
                                        //大圖版型
                                        temp = indexObj.template('templateBranchList');
                                        item = temp(dataObj);
                                        $$('.branch-list-container').append(item);
                                        $('.fa-stop').css('color', '#f26531');

                                        $('.title a').ellipsis({
                                            row: 2
                                        });
                                        break;
                                }

                                $('.branch-pager').click(function(event) {
                                    indexObj._dataStorage(branchObj.storage.blessed_relatives, null);
                                });
                                if (nowPage === 'around-search-result') {
                                    $('.to_info').unbind('click');
                                    $('.to_info').click(function() {
                                        localStorage.setItem('pageInit', 'around-search-result');
                                        window.location = 'pm/branch-info?sd_id=' + $(this).attr('sd_id');
                                    });
                                }

                            }

                        } else if (nowPage === 'branch-binding') {
                            //template
                            var temp = indexObj.template('templateBranchBindList');
                            var item = temp(dataObj);
                            $$('.branch-binding-content .list-block ul').append(item);

                            $('.shopname').ellipsis({
                                row: 2
                            });
                        } else if (nowPage === 'shop-search-result') {
                            //大圖版型
                            temp = indexObj.template('templateBranchSearchList');
                            item = temp(dataObj);
                            $$('.branch-list-container').append(item);
                            $('.title a').ellipsis({
                                row: 2
                            });
                            $('.to_info').unbind('click');
                            $('.to_info').click(function() {
                                localStorage.setItem('pageInit', 'shop-search-result');
                                window.location = 'pm/branch-info?sd_id=' + $(this).attr('sd_id');
                            });
                        }


                        $$('.infinite-scroll-preloader').hide();

                        var favoriteList = indexObj._dataStorage(indexObj._storage.favorite) || '';

                        if (favoriteList) {
                            for (var i in favoriteList.branchList) {
                                $$('.favorite-' + favoriteList.branchList[i].ubm_objectid).html('<img src="../app/image/subscribe.png" onerror=\'this.src="app/image/imgDefault.png"\' />');
                            }
                        }

                        myApp.initImagesLazyLoad('.page-content');



                    } else if (para_obj.spm_serno === '99') {
                        //祈福專區
                        myApp.detachInfiniteScroll($$('.infinite-scroll'));
                        $$('.infinite-scroll-preloader').remove();
                        $('.temple-item').css('display', 'inherit');

                    } else {
                        myApp.detachInfiniteScroll($$('.infinite-scroll'));
                        $$('.infinite-scroll-preloader').remove();
                        if (id === '') {
                            if (nowPage === 'branch-binding') {
                                var nullTemp = indexObj.template('templateBranchListNull');
                                var nullItem = nullTemp('');
                                $$('.branch-binding-content .list-block ul').html(nullItem);
                                $('.content-null h3').html('暫無店家資訊');
                            } else if (nowPage === 'around-search-result') {
                                var nullTemp = indexObj.template('templateCooperativeListNull');
                                var nullItem = nullTemp('');
                                $$('.page-content .branch-list-container').html(nullItem);
                            } else if (nowPage === 'shop-search-result' || indexObj._dataStorage(branchObj.storage.search_result) !== '') {
                                var nullTemp = indexObj.template('templateShopSearchNull');
                                var nullItem = nullTemp('');
                                $$('.page-content .branch-list-container').html(nullItem);
                            } else {
                                var nullTemp = indexObj.template('templateCooperativeListNull');
                                var nullItem = nullTemp('');
                                $$('.page-content.branch-cooperative-content').html(nullItem);
                            }

                        }

                    }
                    branchObj.listLoading = false;
                } else {
                    if (nowPage == 'shop-search-result' || indexObj._dataStorage(branchObj.storage.search_result)) {
                        var nullTemp = indexObj.template('templateShopSearchNull');
                        var nullItem = nullTemp('');
                        $$('.page-content .branch-list-container').html(nullItem);
                    } else {
                        var nullTemp = indexObj.template('templateCooperativeListNull');
                        var nullItem = nullTemp('');
                        $$('.page-content.branch-cooperative-content').html(nullItem);
                    }

                    stringObj.return_header(data.shoplistqueryresult.message_no);
                    if (_tip) {
                        myApp.alert(_tip + '( ' + data.shoplistqueryresult.message_no + ' )', stringObj.text.warn);
                        _tip = null;
                    }
                }
                myApp.hideIndicator();

            },
            error: function(data) {
                myApp.hideIndicator();
                myApp.detachInfiniteScroll($$('.infinite-scroll'));
                $$('.infinite-scroll-preloader').remove();
                noNetwork();
                branchObj.listLoading = false;
            }
        });

    },
    //商家列表重整
    branchListRefresh: function(sd_shopname) {
        if (branchObj.firstId === '') {
            myApp.pullToRefreshDone('.pull-to-refresh-content');
            return false;
        }
        if (branchObj.refreshLoading) {
            return false;
        }
        branchObj.refreshLoading = true;

        var url = branchObj.dataUrl.shoplistquery;

        var para_obj;
        if (nowPage === 'branch-cooperative') {
            para_obj = {
                operation_type: '0',
                spm_serno: branchObj.menuInfo.spm_serno,
                sd_zipcode: '',
                sd_shopname: sd_shopname,
                startid: '',
                queryamount: '20'
            };
            var searchShopName = localStorage.getItem(branchObj.storage.searchShopName) || '';
            para_obj.sd_shopname = searchShopName;
            var searchRegion = indexObj._dataStorage(branchObj.storage.searchRegion) || [];
            if (searchRegion) {
                para_obj.sd_zipcode = searchRegion + '';
            }

        } else if (nowPage === 'branch-binding') {
            para_obj = {
                operation_type: '2',
                spm_serno: '',
                sd_zipcode: '',
                sd_shopname: sd_shopname,
                startid: '',
                queryamount: '20'
            };
        }

        //console.log(JSON.stringify(para_obj));


        indexObj._wcfget({
            url: url,
            para: para_obj,
            success: function(data) {
                indexObj.jsonUrlDecode(data);
                //console.log(JSON.stringify(data));
                if (data.shoplistqueryresult.shoplistarray) {
                    if (data.shoplistqueryresult.shoplistarray[0].sd_id != branchObj.firstId) {
                        myApp.pullToRefreshDone('.pull-to-refresh-content');
                        branchObj.refreshLoading = false;
                        return false;
                    }

                    if (nowPage === 'branch-binding') {
                        $$('.branch-list-container').html('');
                    } else {
                        $$('.branch-list-container').html('<div class="row branch-block"></div>');
                    }

                    var dataObj = {
                        list: []
                    };

                    for (var i in data.shoplistqueryresult.shoplistarray) {
                        var listItem = {};
                        listItem.sd_id = data.shoplistqueryresult.shoplistarray[i].sd_id;
                        listItem.sd_shopphotopath = stringObj.text.branch_img_path + data.shoplistqueryresult.shoplistarray[i].sd_shopphotopath;
                        listItem.sd_shopname = data.shoplistqueryresult.shoplistarray[i].sd_shopname;
                        listItem.star_sd_shopname = indexObj.jsonUrlEncode(data.shoplistqueryresult.shoplistarray[i].sd_shopname);
                        listItem.sd_shoptel = data.shoplistqueryresult.shoplistarray[i].sd_shoptel;
                        listItem.sd_shopaddress = data.shoplistqueryresult.shoplistarray[i].sd_shopaddress;
                        if (para_obj.spm_serno == '99') {
                            listItem.isTemple = true;
                        } else {
                            listItem.isTemple = false;
                        }
                        dataObj.list.push(listItem);
                    }


                    if (branchObj.firstId === '') {
                        branchObj.firstId = dataObj.list[0].sd_id;
                    }


                    branchObj.listId = dataObj.list[(dataObj.list.length - 1)].sd_id;

                    if (nowPage === 'branch-cooperative') {
                        //template
                        var temp;
                        var item;
                        switch (nowBranchType) {
                            case '0':
                                //大圖版型
                                temp = indexObj.template('templateBranchList');
                                item = temp(dataObj);
                                $$('.branch-list-container').append(item);
                                $('.fa-stop').css('color', '#f26531');

                                $('.title a').ellipsis({
                                    row: 2
                                });
                                break;
                            case '1':
                                //列表版型
                                temp = indexObj.template('templateBranchListType1');
                                item = temp(dataObj);
                                $$('.branch-list-container').append(item);
                                $('.fa-th-list').css('color', '#f26531');
                                $('.image').addClass('listType1');

                                $('.type1Title').ellipsis({
                                    row: 2
                                });
                                break;
                            case '2':
                                //格子板型
                                temp = indexObj.template('templateBranchListType2');
                                item = temp(dataObj);
                                $$('.branch-list-container .branch-block').append(item);
                                $('.fa-th-large').css('color', '#f26531');
                                $('.image').addClass('listType2');

                                $('.branch-block .branch-item .title span').ellipsis({
                                    row: 2
                                });
                                break;
                            default:
                                //大圖版型
                                temp = indexObj.template('templateBranchList');
                                item = temp(dataObj);
                                $$('.branch-list-container').append(item);
                                $('.fa-stop').css('color', '#f26531');

                                $('.title a').ellipsis({
                                    row: 2
                                });
                                break;
                        }

                    } else if (nowPage === 'branch-binding') {
                        $$('.branch-binding-content .list-block ul').html('');
                        //template
                        var temp = indexObj.template('templateBranchBindList');
                        var item = temp(dataObj);
                        $$('.branch-binding-content .list-block ul').append(item);

                        $('.shopname').ellipsis({
                            row: 2
                        });
                    }



                    myApp.initImagesLazyLoad('.page-content');
                    $$('.infinite-scroll-preloader').hide();

                    var favoriteList = indexObj._dataStorage(indexObj._storage.favorite);

                    if (favoriteList) {
                        for (var i in favoriteList.branchList) {
                            $$('.favorite-' + favoriteList.branchList[i].ubm_objectid).html('<img src="../app/image/subscribe.png" onerror=\'this.src="app/image/imgDefault.png"\' />');
                        }
                    }


                }

                myApp.pullToRefreshDone('.pull-to-refresh-content');
                branchObj.refreshLoading = false;
            },

            error: function(data) {
                myApp.pullToRefreshDone('.pull-to-refresh-content');
                noNetwork();
                branchObj.refreshLoading = false;
            }
        });
    },
    //我的商家初始化
    myBranchsInit: function(page) {
        indexObj.listId = '';
        indexObj.listLoading = false;
        myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
        indexObj.querymembershopinfo();
        //無限加載
        $$('.infinite-scroll').on('infinite', function() {
            indexObj.querymembershopinfo();
        });
    },
    //取得商家優惠券列表
    getShopCouponList: function(sd_id) {

        if (branchObj.listLoading)
            return;
        branchObj.listLoading = true;

        myApp.showIndicator();

        var create_date = branchObj.listId;

        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            scm_category: '',
            sd_zipcode: '',
            sd_id: sd_id,
            create_date: create_date,
            queryamount: '20'
        };

        if (nowPage === 'message-info') {
            data.create_date = '';
            data.queryamount = '';
        }

        //console.log(JSON.stringify(data));

        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponlistquery,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                var rObj = JSON.parse(JSON.stringify(r.shopcouponlistqueryresult));
                if (rObj.message_no === "000000000") {
                    if (r.shopcouponlistqueryresult.shopcoupon_list) {

                        if (branchObj.firstId === '') {
                            branchObj.firstId = rObj.shopcoupon_list[0].create_date;
                        }


                        branchObj.listId = rObj.shopcoupon_list[(rObj.shopcoupon_list.length - 1)].create_date;

                        var shopcouponList = {
                            shopcoupon_now: {
                                list: []
                            },
                            shopcoupon_fail: {
                                list: []
                            }
                        };



                        if (nowPage == 'shopcoupon-management') {

                            for (var i in rObj.shopcoupon_list) {

                                rObj.shopcoupon_list[i].scm_enddate = rObj.shopcoupon_list[i].scm_enddate.replace(/-/ig, '/');

                                var enddate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_enddate).getTime());
                                var today = parseFloat(new Date().getTime());

                                switch (rObj.shopcoupon_list[i].scm_poststatus) {
                                    case '0':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_off;
                                        rObj.shopcoupon_list[i].poststatus = false;
                                        //判斷活動券是否過期
                                        if (enddate < today) {
                                            rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                            shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                            shopcoupon_num++;
                                        } else {
                                            rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_off;
                                            shopcouponList.shopcoupon_now.list.push(rObj.shopcoupon_list[i]);
                                        }
                                        break;
                                    case '1':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_on;
                                        rObj.shopcoupon_list[i].poststatus = true;
                                        //判斷活動券是否過期
                                        if (enddate < today) {
                                            rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                            shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                            shopcoupon_num++;
                                        } else {
                                            rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_on;
                                            shopcouponList.shopcoupon_now.list.push(rObj.shopcoupon_list[i]);
                                        }
                                        break;
                                    case '2':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.illegal;
                                        rObj.shopcoupon_list[i].poststatus = false;
                                        shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                        shopcoupon_num++;
                                        break;
                                    case '3':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                        rObj.shopcoupon_list[i].poststatus = false;
                                        shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                        shopcoupon_num++;
                                        break;
                                }
                                rObj.shopcoupon_list[i].scm_mainpic = stringObj.text.branch_img_path + rObj.shopcoupon_list[i].scm_mainpic;
                                switch (rObj.shopcoupon_list[i].scm_reservationtag) {
                                    case '0':
                                        rObj.shopcoupon_list[i].reservationtag = false;
                                        break;
                                    case '1':
                                        rObj.shopcoupon_list[i].reservationtag = true;
                                        break;
                                }
                                switch (rObj.shopcoupon_list[i].scm_producttype) {
                                    case '1':
                                        rObj.shopcoupon_list[i].coupontag = true;
                                        break;
                                    case '2':
                                        rObj.shopcoupon_list[i].commoditytag = true;
                                        break;
                                }


                            }


                            // if (shopcouponList.shopcoupon_now.list.length === 0) {
                            //     dataNull('templateShopCouponListNull', stringObj.text.no_data, '#shopcoupon-now');
                            // } else {
                            //     var temp = indexObj.template('templateShopCoupons');
                            //     var item = temp(shopcouponList.shopcoupon_now);
                            //     $$('#shopcoupon-now .shopcoupon-list').append(item);
                            //     myApp.initImagesLazyLoad('.page-content');
                            //     $$('.infinite-scroll-preloader').hide();
                            // }

                            var temp = indexObj.template('templateShopCoupons');
                            var item = temp(shopcouponList.shopcoupon_now);
                            $$('#shopcoupon-now .shopcoupon-list').append(item);
                            myApp.initImagesLazyLoad('.page-content');
                            $$('.infinite-scroll-preloader').hide();


                            if (nowTab == 'shopcoupon-fail' && shopcoupon_num > 0) {
                                var temp = indexObj.template('templateShopCoupons');
                                var item = temp(shopcouponList.shopcoupon_fail);
                                $$('.shopcoupon-fail .shopcoupon-list').append(item);
                                myApp.initImagesLazyLoad('.page-content');
                                $$('.infinite-scroll-preloader').hide();
                            }

                            $('.title a').ellipsis({
                                row: 2
                            });

                            $('.to_info').unbind('click');
                            $('.to_info').click(function() {
                                localStorage.setItem('pageInit', 'shop/shopcoupon-management');
                                window.location = 'pm/shopcoupon-info?scm_id=' + $(this).attr('scm_id');
                            });

                            $('.check').click(function() {
                                myApp.alert(stringObj.text.shopcoupon_edit_check, stringObj.text.warn);
                            });

                        } else if (nowPage == 'branch-info') {
                            for (var i in rObj.shopcoupon_list) {
                                switch (rObj.shopcoupon_list[i].scm_poststatus) {
                                    case '0':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_off;
                                        rObj.shopcoupon_list[i].poststatus = false;
                                        break;
                                    case '1':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_on;
                                        rObj.shopcoupon_list[i].poststatus = true;
                                        break;
                                    case '2':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.illegal;
                                        rObj.shopcoupon_list[i].poststatus = false;
                                        break;
                                    case '3':
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                        rObj.shopcoupon_list[i].poststatus = false;
                                        break;
                                }

                                rObj.shopcoupon_list[i].scm_mainpic = stringObj.text.branch_img_path + rObj.shopcoupon_list[i].scm_mainpic;

                                switch (rObj.shopcoupon_list[i].scm_reservationtag) {
                                    case '0':
                                        rObj.shopcoupon_list[i].reservationtag = false;
                                        break;
                                    case '1':
                                        rObj.shopcoupon_list[i].reservationtag = true;
                                        break;
                                }
                                switch (rObj.shopcoupon_list[i].scm_producttype) {
                                    case '1':
                                        rObj.shopcoupon_list[i].coupontag = true;
                                        break;
                                    case '2':
                                        rObj.shopcoupon_list[i].commoditytag = true;
                                        break;
                                }
                                rObj.shopcoupon_list[i].scm_startdate = rObj.shopcoupon_list[i].scm_startdate.replace(/-/ig, '/');
                                rObj.shopcoupon_list[i].scm_enddate = rObj.shopcoupon_list[i].scm_enddate.replace(/-/ig, '/');

                                //判斷今天日期是否在活動期間內
                                var startdate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_startdate).getTime());
                                var enddate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_enddate).getTime());
                                var today = parseFloat(new Date().getTime());

                                if (enddate > today && today > startdate) {
                                    rObj.shopcoupon_list[i].date_status = true;
                                } else {
                                    rObj.shopcoupon_list[i].date_status = false;
                                }

                                if (rObj.shopcoupon_list[i].poststatus == true && rObj.shopcoupon_list[i].date_status == true) {
                                    shopcoupon_num++;
                                }
                            }

                            var temp = indexObj.template('templateShopCouponList');
                            var item = temp(rObj);
                            $$('.shopcoupon-list-container').append(item);

                            $('.title a').ellipsis({
                                row: 2
                            });

                        } else if (nowPage == 'message-info') {

                            var shop_items = '';

                            for (var i in rObj.shopcoupon_list) {
                                if (rObj.shopcoupon_list[i].scm_mainpic) {
                                    rObj.shopcoupon_list[i].scm_mainpic = stringObj.text.branch_img_path + rObj.shopcoupon_list[i].scm_mainpic;
                                } else {
                                    rObj.shopcoupon_list[i].scm_mainpic = 'app/image/imgDefault.png';
                                }
                                rObj.shopcoupon_list[i].scm_startdate = rObj.shopcoupon_list[i].scm_startdate.replace(/-/ig, '/');
                                rObj.shopcoupon_list[i].scm_enddate = rObj.shopcoupon_list[i].scm_enddate.replace(/-/ig, '/');
                                //判斷今天日期是否在活動期間內
                                var startdate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_startdate).getTime());
                                var enddate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_enddate).getTime());
                                var today = parseFloat(new Date().getTime());

                                if (enddate > today && today > startdate) {
                                    rObj.shopcoupon_list[i].date_status = true;
                                } else {
                                    rObj.shopcoupon_list[i].date_status = false;
                                }

                                if (rObj.shopcoupon_list[i].scm_poststatus === '1' && rObj.shopcoupon_list[i].date_status === true) {
                                    shop_items += '<li>' +
                                        '<label class="label-radio item-content">' +
                                        '<input type="radio" name="shop_items" value="' + rObj.shopcoupon_list[i].scm_id + '">' +
                                        '<div class="item-media"><img src="' + rObj.shopcoupon_list[i].scm_mainpic + '" width="120" onerror=\'this.src="app/image/imgDefault.png"\'></div>' +
                                        '<div class="item-inner">' +
                                        '<div class="item-text">' + rObj.shopcoupon_list[i].scm_title + '</div>' +
                                        '</div>' +
                                        '</label>' +
                                        '</li>';
                                }
                            }

                            var popupHTML = '<div class="popup popup-shop-items">' +
                                // '<div class="close-btn">' +
                                // '<a href="#" class="close-popup">' +
                                // '<i class="fa fa-times" aria-hidden="true"></i>' +
                                // '</a>' +
                                // '</div>' +
                                '<div class="content-block">' +
                                '<div class="title">' + stringObj.shop.shop_items + '</div>' +
                                '<div class="shop-items-content">' +
                                '<div class="list-block">' +
                                '<ul>' +
                                shop_items +
                                '</ul>' +
                                '</div>' +
                                '</div>' +
                                '</div>' +
                                '<div class="toolbar toolbar-bottom tabbar animated fadeInUp">' +
                                '<div class="toolbar-inner">' +
                                '<a href="#" class="confirm">' + stringObj.text.confirm + '</a>' +
                                '</div>' +
                                '</div>' +
                                '</div>';
                            myApp.popup(popupHTML);
                            $('.popup-shop-items').css('z-index', '91000');

                            $('.item-text').ellipsis({
                                row: 2
                            });

                            $('.shop-items-content ul li input').eq(0).attr('checked', '"checked"');

                            $('.popup-shop-items .toolbar-bottom .confirm').click(function(event) {
                                myApp.closeModal('.popup-shop-items');
                                $('.push-item-block').css('display', 'initial');
                                $('.push-item-block .push-item').attr('scm_id', $('input[name=shop_items]:checked').val());
                                $('.push-item-block .push-item').val($('input[name=shop_items]:checked').parents('.item-content').find('.item-inner .item-text').text());
                            });
                        }

                        myApp.initImagesLazyLoad('.page-content');
                        $$('.infinite-scroll-preloader').hide();
                        myApp.hideIndicator();

                        var favoriteList = indexObj._dataStorage(indexObj._storage.favorite);

                        if (favoriteList) {
                            for (var i in favoriteList.shopcouponList) {
                                $$('.favorite-' + favoriteList.shopcouponList[i].ubm_objectid).html('<i class="fa fa-star"></i>');
                            }
                        }

                        branchObj.listLoading = false;
                        if (nowPage === 'branch-info' && shopcoupon_num < 10) {
                            branchObj.getShopCouponList(sd_id);
                        } else if (nowTab === 'shopcoupon-fail' && shopcoupon_num < 10) {
                            branchObj.getShopCouponList(sd_id);
                        }


                    } else {
                        shopcouponList = {
                            shopcoupon_now: {
                                list: []
                            },
                            shopcoupon_fail: {
                                list: []
                            }
                        };
                        if (nowPage == 'branch-info' && shopcoupon_num == 0) {
                            dataNull('templateShopCouponNull', stringObj.text.no_shopcoupon, '.shopcoupon-list-block');
                        } else if (nowTab == 'shopcoupon-fail' && shopcoupon_num == 0) {
                            dataNull('templateShopCouponListNull', stringObj.text.no_data, '.shopcoupon-fail');
                        }

                        myApp.detachInfiniteScroll($$('.infinite-scroll'));
                        $$('.infinite-scroll-preloader').hide();

                    }

                } else if (rObj.message_no === "010903001") {
                    if (nowPage == 'shopcoupon-management') {

                        dataNull('templateShopCouponListNull', stringObj.text.no_data, '.shopcoupon-now');

                        dataNull('templateShopCouponListNull', stringObj.text.no_data, '.shopcoupon-fail');

                    } else if (nowPage == 'branch-info') {
                        dataNull('templateShopCouponNull', stringObj.text.no_shopcoupon, '.branch-preferential-content');
                    }

                    myApp.detachInfiniteScroll($$('.infinite-scroll'));
                    $$('.infinite-scroll-preloader').hide();
                } else {
                    stringObj.return_header(rObj.message_no);
                    if (_tip) {
                        myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                        _tip = null;
                    }
                }

                myApp.hideIndicator();

            },
            error: function(r) {
                myApp.detachInfiniteScroll($$('.infinite-scroll'));
                $$('.infinite-scroll-preloader').remove();
                myApp.hideIndicator();
                noNetwork();
                branchObj.listLoading = false;
            }
        });
    },
    //商家優惠券列表重整
    shopCouponListRefresh: function(sd_id) {
        if (branchObj.firstId === '') {
            myApp.pullToRefreshDone('.pull-to-refresh-content');
            return false;
        }
        if (branchObj.refreshLoading) {
            return false;
        }
        branchObj.refreshLoading = true;

        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        if (!sd_id) {
            sd_id = branchData.sd_id;
        }
        var data = {
            scm_category: '',
            sd_zipcode: '',
            sd_id: sd_id,
            create_date: '',
            queryamount: '20'
        };


        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponlistquery,
            para: data,
            success: function(r) {
                var rObj = JSON.parse(JSON.stringify(r.shopcouponlistqueryresult));
                if (rObj.shopcoupon_list) {
                    indexObj.jsonUrlDecode(r);
                    if (rObj.shopcoupon_list[0].create_date != branchObj.firstId) {
                        myApp.pullToRefreshDone('.pull-to-refresh-content');
                        branchObj.refreshLoading = false;
                        return false;
                    }

                    $$('.shopcoupon-list-container').html('');
                    branchObj.firstId = rObj.shopcoupon_list[0].create_date;
                    branchObj.listId = rObj.shopcoupon_list[(rObj.shopcoupon_list.length - 1)].create_date;

                    var shopcouponList = {
                        shopcoupon_now: {
                            list: []
                        },
                        shopcoupon_fail: {
                            list: []
                        }
                    };

                    if (nowPage == 'shopcoupon-management') {
                        for (var i in rObj.shopcoupon_list) {

                            rObj.shopcoupon_list[i].scm_enddate = rObj.shopcoupon_list[i].scm_enddate.replace(/-/ig, '/');

                            var enddate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_enddate).getTime());
                            var today = parseFloat(new Date().getTime());

                            switch (rObj.shopcoupon_list[i].scm_poststatus) {
                                case '0':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_off;
                                    rObj.shopcoupon_list[i].poststatus = false;
                                    //判斷活動券是否過期
                                    if (enddate < today) {
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                        shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                    } else {
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_off;
                                        shopcouponList.shopcoupon_now.list.push(rObj.shopcoupon_list[i]);
                                    }
                                    break;
                                case '1':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_on;
                                    rObj.shopcoupon_list[i].poststatus = true;
                                    //判斷活動券是否過期
                                    if (enddate < today) {
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                        shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                    } else {
                                        rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_on;
                                        shopcouponList.shopcoupon_now.list.push(rObj.shopcoupon_list[i]);
                                    }
                                    break;
                                case '2':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.illegal;
                                    rObj.shopcoupon_list[i].poststatus = false;
                                    shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                    break;
                                case '3':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                    rObj.shopcoupon_list[i].poststatus = false;
                                    shopcouponList.shopcoupon_fail.list.push(rObj.shopcoupon_list[i]);
                                    break;
                            }

                            switch (rObj.shopcoupon_list[i].scm_reservationtag) {
                                case '0':
                                    rObj.shopcoupon_list[i].reservationtag = false;
                                    break;
                                case '1':
                                    rObj.shopcoupon_list[i].reservationtag = true;
                                    break;
                            }


                        }

                        if (shopcouponList.shopcoupon_now.list.length == 0) {
                            dataNull('templateShopCouponListNull', stringObj.text.no_data, '#shopcoupon-now');
                        } else {
                            var temp = indexObj.template('templateShopCoupons');
                            var item = temp(shopcouponList.shopcoupon_now);
                            $$('#shopcoupon-now .shopcoupon-list').html(item);
                        }


                        $$('.shopcoupon-now').on('show', function() {
                            if (shopcouponList.shopcoupon_now.list.length == 0) {
                                dataNull('templateShopCouponListNull', stringObj.text.no_data, '.shopcoupon-now');
                            } else {
                                var temp = indexObj.template('templateShopCoupons');
                                var item = temp(shopcouponList.shopcoupon_now);
                                $$('.shopcoupon-now .shopcoupon-list').html(item);
                                setTimeout(function() {
                                    myApp.initImagesLazyLoad('.page-content');
                                    $$('.infinite-scroll-preloader').hide();
                                }, 500);
                            }
                            $('.now').css('background', '#F26531');
                            $('.fail').css('background', '#202020');
                        });

                        $$('.shopcoupon-fail').on('show', function() {
                            if (shopcouponList.shopcoupon_fail.list.length == 0) {
                                dataNull('templateShopCouponListNull', stringObj.text.no_data, '.shopcoupon-fail');
                            } else {
                                var temp = indexObj.template('templateShopCoupons');
                                var item = temp(shopcouponList.shopcoupon_fail);
                                $$('.shopcoupon-fail .shopcoupon-list').html(item);
                                myApp.initImagesLazyLoad('.page-content');
                                $$('.infinite-scroll-preloader').hide();
                            }
                            $('.now').css('background', '#202020');
                            $('.fail').css('background', '#F26531');
                        });


                        $('.title a').ellipsis({
                            row: 2
                        });

                        $('.check').click(function() {
                            myApp.alert(stringObj.shop.status_off_edit, stringObj.text.warn);
                        });

                    } else if (nowPage == 'branch-info') {
                        for (var i in rObj.shopcoupon_list) {
                            switch (rObj.shopcoupon_list[i].scm_poststatus) {
                                case '0':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_off;
                                    rObj.shopcoupon_list[i].poststatus = false;
                                    break;
                                case '1':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.status_on;
                                    rObj.shopcoupon_list[i].poststatus = true;
                                    break;
                                case '2':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.illegal;
                                    rObj.shopcoupon_list[i].poststatus = false;
                                    break;
                                case '3':
                                    rObj.shopcoupon_list[i].scm_poststatus = stringObj.shop.expired;
                                    rObj.shopcoupon_list[i].poststatus = false;
                                    break;
                            }

                            switch (rObj.shopcoupon_list[i].scm_reservationtag) {
                                case '0':
                                    rObj.shopcoupon_list[i].reservationtag = false;
                                    break;
                                case '1':
                                    rObj.shopcoupon_list[i].reservationtag = true;
                                    break;
                            }
                            switch (rObj.shopcoupon_list[i].scm_producttype) {
                                case '1':
                                    rObj.shopcoupon_list[i].coupontag = true;
                                    break;
                                case '2':
                                    rObj.shopcoupon_list[i].commoditytag = true;
                                    break;
                            }
                            rObj.shopcoupon_list[i].scm_startdate = rObj.shopcoupon_list[i].scm_startdate.replace(/-/ig, '/');
                            rObj.shopcoupon_list[i].scm_enddate = rObj.shopcoupon_list[i].scm_enddate.replace(/-/ig, '/');

                            //判斷今天日期是否在活動期間內
                            var startdate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_startdate).getTime());
                            var enddate = parseFloat(new Date(rObj.shopcoupon_list[i].scm_enddate).getTime());
                            var today = parseFloat(new Date().getTime());

                            if (enddate > today && today > startdate) {
                                rObj.shopcoupon_list[i].date_status = true;
                            } else {
                                rObj.shopcoupon_list[i].date_status = false;
                            }
                        }

                        var temp = indexObj.template('templateShopCouponList');
                        var item = temp(rObj);
                        $$('.shopcoupon-list-container').append(item);

                        $('.title a').ellipsis({
                            row: 2
                        });
                    }

                    myApp.initImagesLazyLoad('.page-content');
                }

                myApp.pullToRefreshDone('.pull-to-refresh-content');
                branchObj.refreshLoading = false;
            },

            error: function(data) {
                myApp.pullToRefreshDone('.pull-to-refresh-content');
                noNetwork();
                branchObj.refreshLoading = false;
            }
        });
    },
    //活動管理初始化
    shopcouponManagementInit: function(page) {

        $$('.tab-link').click(function() {
            $$('.tab-link').removeClass('active');
            $$(this).addClass('active');
        });

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        branchObj.firstId = '';
        branchObj.listId = '';
        branchObj.listLoading = false;
        branchObj.getShopCouponList(branchData.sd_id);

        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 2000);

        $$('.shopcoupon-now').on('show', function() {
            nowTab = 'shopcoupon-now';
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            $$('.shopcoupon-now .shopcoupon-list').html('');
            branchObj.getShopCouponList(branchData.sd_id);
        });

        $$('.shopcoupon-fail').on('show', function() {
            nowTab = 'shopcoupon-fail';
            shopcoupon_num = 0;
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            $$('.shopcoupon-fail .shopcoupon-list').html('');
            branchObj.getShopCouponList(branchData.sd_id);
        });

        //下拉刷新
        $$('.pull-to-refresh-content').on('refresh', branchObj.shopCouponListRefresh);
        //無限加載
        $$('.infinite-scroll').on('infinite', function() {
            branchObj.getShopCouponList(branchData.sd_id);
        });
    },
    //合作社問卷答覆結果查看
    shopquestionnaire_result: function(sd_id) {

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopquestionnaire_result,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sd_id: sd_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopquestionnaire_resultresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopquestionnaire_resultresult));
                    if (rObj.message_no === "000000000") {

                        for (var i in rObj.activemessage) {
                            if (rObj.activemessage[i].ssd_picturepath.match('square')) {
                                rObj.activemessage[i].ssd_picturepath = rObj.activemessage[i].ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                            }
                        }


                        if (nowPage == 'questionnaire-management') {

                            if (rObj.sd_questiontotalaverage == '' || rObj.sd_questiontotalaverage == '0.0') {
                                $('.average').html(0);
                                $('.count').html(0);
                                $$('.questionnaire-list .list-null').html(stringObj.text.no_comment);
                                $('.list-null').css('margin-top', '25%');

                            } else {
                                var sd_questiontotalaverage = JSON.parse(rObj.sd_questiontotalaverage);

                                //$('.average').html(sd_questiontotalaverage.questiontotalaverage.average);
                                //$('.count').html(sd_questiontotalaverage.questiontotalaverage.count);

                                //數字累加特效
                                var options = {
                                    useEasing: true,
                                    useGrouping: true,
                                    separator: ',',
                                    decimal: '.',
                                    prefix: '',
                                    suffix: ''
                                };
                                var average = new CountUp(".average", 0, parseFloat(sd_questiontotalaverage.questiontotalaverage.average), 0, 1, options);
                                average.start();
                                var count = new CountUp(".count", 0, parseInt(sd_questiontotalaverage.questiontotalaverage.count), 0, 1, options);
                                count.start();

                                if (rObj.activemessage) {
                                    for (var i in rObj.activemessage) {
                                        if (rObj.activemessage[i].ssd_picturepath == '') {
                                            rObj.activemessage[i].ssd_picturepath = '../app/image/general_user.png';
                                        }
                                        var sqna_dt = new Date(rObj.activemessage[i].sqna_last_update);
                                        rObj.activemessage[i].sqna_dt = sqna_dt.getTime();
                                    }
                                    //排序
                                    rObj.activemessage.sort(sortByProperty('sqna_dt', -1));

                                    var temp = indexObj.template('templateQuestionnaireList');
                                    var item = temp(rObj);
                                    $$('.questionnaire-list').append(item);

                                    myApp.initImagesLazyLoad('.page-content');
                                }


                            }



                            var category = [];
                            var avg = [];
                            if (rObj.sd_questionnaireresult) {
                                var sd_questionnaireresult = JSON.parse(rObj.sd_questionnaireresult);
                                for (var i in sd_questionnaireresult.questionnaireresult) {
                                    category.push(stringObj.shop.sd_question_category_array[parseInt(sd_questionnaireresult.questionnaireresult[i].sd_question_category)]);
                                    avg.push(parseFloat(sd_questionnaireresult.questionnaireresult[i].avg) * 20);
                                }
                            } else {
                                category = stringObj.shop.sd_question_category_array;
                                avg = [0, 0, 0, 0, 0, 0, 0, 0];
                            }


                            var radarChartData = {
                                labels: category, //["服務態度", "技術能力", "商品品質", "服務態度", "技術能力", "技術能力", "技術能力", "技術能力"],
                                datasets: [{
                                    label: "Test",
                                    fillColor: "rgba(20,120,220,0.4)",
                                    strokeColor: "rgba(20,120,220,1)",
                                    pointColor: "rgba(20,120,220,1)",
                                    pointStrokeColor: "rgba(255,255,255,.5)",
                                    pointHighlightFill: "#000",
                                    pointHighlightStroke: "rgba(20,20,220,1)",
                                    data: avg //[85, 89, 70, 31, 86, 66, 76, 46]
                                }]
                            };
                            window.myRadar = new Chart(document.getElementById("mCanvas").getContext("2d")).Radar(radarChartData, {
                                responsive: false,
                                angleLineColor: "rgba(200,200,200,.7)",
                                pointLabelFontColor: "green",
                                pointLabelFontFamily: "'Microsoft JhengHei'",
                                pointLabelFontSize: 18,
                                scaleLineColor: "rgba(200, 200, 200, 0.9)"
                            });


                            if (browser_width < 992) {
                                $('.page:not(.cached) #mCanvas').css('width', '80%');
                                $('.page:not(.cached) #mCanvas').css('padding-left', '10%');
                            } else {
                                $('.page:not(.cached) #mCanvas').css('width', '50%');
                                $('.page:not(.cached) #mCanvas').css('padding-left', '25%');
                            }

                            //監聽裝置畫面大小
                            $(window).on("resize", function() {
                                browser_width = $(window).width();
                                if (nowPage == 'questionnaire-management') {
                                    if (browser_width < 992) {
                                        $('.page:not(.cached) #mCanvas').css('width', '80%');
                                        $('.page:not(.cached) #mCanvas').css('padding-left', '10%');
                                    } else {
                                        $('.page:not(.cached) #mCanvas').css('width', '50%');
                                        $('.page:not(.cached) #mCanvas').css('padding-left', '25%');
                                    }
                                }
                            });

                            $('.page:not(.cached) #mCanvas').css('height', 'auto');

                        } else if (nowPage == 'branch-info' || nowPage == 'used-car-branch-info') {
                            $$('.activemessage-list').html('<div class="list-null"></div>');
                            if (rObj.sd_questiontotalaverage == '' || rObj.sd_questiontotalaverage == '0.0') {
                                $('.average').html(0);
                                $('.count').html(0);
                                $$('.activemessage-list .list-null').html(stringObj.text.no_comment);
                                $('.list-null').css('margin-top', '25%');

                            } else {
                                var sd_questiontotalaverage = JSON.parse(rObj.sd_questiontotalaverage);

                                //$('.average').html(sd_questiontotalaverage.questiontotalaverage.average);
                                //$('.count').html(sd_questiontotalaverage.questiontotalaverage.count);

                                //數字累加特效
                                var options = {
                                    useEasing: true,
                                    useGrouping: true,
                                    separator: ',',
                                    decimal: '.',
                                    prefix: '',
                                    suffix: ''
                                };
                                var average = new CountUp(".average", 0, parseFloat(sd_questiontotalaverage.questiontotalaverage.average), 0, 1, options);
                                average.start();
                                var count = new CountUp(".count", 0, parseInt(sd_questiontotalaverage.questiontotalaverage.count), 0, 1, options);
                                count.start();

                                if (rObj.activemessage) {
                                    for (var i in rObj.activemessage) {
                                        if (rObj.activemessage[i].ssd_picturepath == '') {
                                            rObj.activemessage[i].ssd_picturepath = '../app/image/general_user.png';
                                        }
                                        rObj.activemessage[i].sqna_last_update = rObj.activemessage[i].sqna_last_update.replace(/-/ig, '/');
                                        rObj.activemessage[i].sqnr_last_update = rObj.activemessage[i].sqnr_last_update.replace(/-/ig, '/');

                                        var sqna_dt = new Date(rObj.activemessage[i].sqna_last_update);
                                        rObj.activemessage[i].sqna_dt = sqna_dt.getTime();
                                    }
                                    //排序
                                    rObj.activemessage.sort(sortByProperty('sqna_dt', -1));

                                    var temp = indexObj.template('templateBranchEvaluateBrowse');
                                    var item = temp(rObj);
                                    $$('.activemessage-list').append(item);

                                    myApp.initImagesLazyLoad('.page-content');
                                }


                            }

                            var category = [];
                            var avg = [];
                            if (rObj.sd_questionnaireresult) {
                                var sd_questionnaireresult = JSON.parse(rObj.sd_questionnaireresult);
                                for (var i in sd_questionnaireresult.questionnaireresult) {
                                    category.push(sd_questionnaireresult.questionnaireresult[i].sd_question_category);
                                    avg.push(parseFloat(sd_questionnaireresult.questionnaireresult[i].avg) * 20);
                                }
                            } else {
                                category = [0, 0, 0, 0, 0, 0, 0, 0];
                                avg = [0, 0, 0, 0, 0, 0, 0, 0];
                            }

                            var radarChartData = {
                                labels: category, //["服務態度", "技術能力", "商品品質", "服務態度", "技術能力", "技術能力", "技術能力", "技術能力"],
                                datasets: [{
                                    label: "TestTest",
                                    fillColor: "rgba(20,120,220,0.4)",
                                    strokeColor: "rgba(20,120,220,1)",
                                    pointColor: "rgba(20,120,220,1)",
                                    pointStrokeColor: "rgba(255,255,255,.5)",
                                    pointHighlightFill: "#000",
                                    pointHighlightStroke: "rgba(20,20,220,1)",
                                    data: avg //[85, 89, 70, 31, 86, 66, 76, 46]
                                }]
                            };
                            window.myRadar = new Chart(document.getElementById("canvas").getContext("2d")).Radar(radarChartData, {
                                responsive: false,
                                angleLineColor: "rgba(200,200,200,.7)",
                                pointLabelFontColor: "green",
                                pointLabelFontFamily: "'Microsoft JhengHei'",
                                pointLabelFontSize: 18,
                                scaleLineColor: "rgba(200, 200, 200, 0.9)"
                            });


                            if (browser_width < 992) {
                                $('.page:not(.cached) #canvas').css('width', '70%');
                                $('.page:not(.cached) #canvas').css('margin-left', '15%');
                            } else {
                                $('.page:not(.cached) #canvas').css('width', '35%');
                                $('.page:not(.cached) #canvas').css('margin-left', '32.5%');
                            }

                            //監聽裝置畫面大小
                            $(window).on("resize", function() {
                                browser_width = $(window).width();
                                if (nowPage == 'branch-info' || nowPage == 'used-car-branch-info') {
                                    if (browser_width < 992) {
                                        $('.page:not(.cached) #canvas').css('width', '70%');
                                        $('.page:not(.cached) #canvas').css('margin-left', '15%');
                                    } else {
                                        $('.page:not(.cached) #canvas').css('width', '35%');
                                        $('.page:not(.cached) #canvas').css('margin-left', '32.5%');
                                    }
                                }
                            });
                            $('.page:not(.cached) #canvas').css('height', 'auto');


                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //評價管理
    questionnaireManagementInit: function(page) {

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        branchObj.shopquestionnaire_result(branchData.sd_id);


    },
    //商家優惠活動券管理
    shopcouponmanager: function(data) {
        data.scm_coupon_usetype = 0;
        //data.scm_bonus_modify_type = 0;
        //data.scm_bonus_amount = 0;
        //console.log(JSON.stringify(data));
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        var commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponmanager,
            para: data,
            success: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopcouponmanagerresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponmanagerresult));
                    indexObj._dataStorage(branchObj.storage.imagePath, null);
                    if (rObj.message_no === "010907001") {
                        if (isMobile.Android()) {
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.shopcoupon_imgs.main, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                            if (branchData.shopcoupon_imgs.imgs.length > 0) {
                                for (var i in branchData.shopcoupon_imgs.imgs) {
                                    webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.shopcoupon_imgs.imgs[i], branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                                }
                            }
                            if (commodity_data.scm_advancedescribe.length > 0) {
                                for (var j in commodity_data.scm_advancedescribe) {
                                    if (commodity_data.scm_advancedescribe[j].content_img) {
                                        webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, commodity_data.scm_advancedescribe[j].content_img, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                                    }
                                }
                            }
                        } else if (isMobile.iOS()) {
                            branchData.shopcoupon_imgs.imgs.push(branchData.shopcoupon_imgs.main);
                            if (commodity_data.scm_advancedescribe.length > 0) {
                                for (var j in commodity_data.scm_advancedescribe) {
                                    if (commodity_data.scm_advancedescribe[j].content_img) {
                                        branchData.shopcoupon_imgs.imgs.push(commodity_data.scm_advancedescribe[j].content_img);
                                    }
                                }
                            }
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.shopcoupon_imgs.imgs, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', []);
                        }

                        myApp.toast(stringObj.text.add_success, '', {}).show();
                        branchData.shopcoupon_imgs = {
                            main: '',
                            imgs: []
                        };
                        indexObj._dataStorage(branchObj.storage.branchData, branchData);
                        mainView.router.load({
                            url: 'shop/shopcoupon-management'
                        });

                        indexObj._dataStorage(branchObj.storage.commodity_data, null);

                    } else if (rObj.message_no === "010907002") {
                        //console.log(JSON.stringify(branchData));
                        if (nowPage == 'shopcoupon-edit') {
                            if (isMobile.Android()) {
                                webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.shopcoupon_imgs.main, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                                if (branchData.shopcoupon_imgs.imgs.length > 0) {
                                    for (var i in branchData.shopcoupon_imgs.imgs) {
                                        webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.shopcoupon_imgs.imgs[i], branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                                    }
                                }
                                if (branchData.delete_imgs.length > 0) {
                                    for (var i in branchData.delete_imgs) {
                                        webview.deleteFileFromFTP(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.delete_imgs[i]);
                                    }
                                }
                            } else if (isMobile.iOS()) {
                                branchData.shopcoupon_imgs.imgs.push(branchData.shopcoupon_imgs.main);
                                webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.shopcoupon_imgs.imgs, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', branchData.delete_imgs);

                            }

                            mainView.router.load({
                                url: 'shop/shopcoupon-management'
                            });

                        } else {
                            mainView.router.load({
                                url: 'shop/shopcoupon-management',
                                reload: true
                            });
                        }
                        branchData.shopcoupon_imgs = {
                            main: '',
                            imgs: []
                        };
                        indexObj._dataStorage(branchObj.storage.branchData, branchData);
                        myApp.toast(stringObj.text.edit_success, '', {}).show();

                        indexObj._dataStorage(branchObj.storage.commodity_data, null);

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //新增活動
    addShopCouponInit: function(page) {

        var commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {
            scm_advancedescribe: []
        };

        $('.add-shopcoupon-left').click(function(event) {
            indexObj._dataStorage(branchObj.storage.commodity_data, null);
        });

        if (commodity_data) {

            for (var i in commodity_data.scm_advancedescribe) {
                if (commodity_data.scm_advancedescribe[i].content_img) {
                    commodity_data.scm_advancedescribe[i].img_path = stringObj.text.branch_img_path;
                }
            }

            var temp = indexObj.template('templateCommodityDetailsAdd');
            var item = temp(commodity_data);
            $$('.commodity-details-block.sortable').html(item);
            myApp.initImagesLazyLoad('.page-content');

            var branchData = indexObj._dataStorage(branchObj.storage.branchData);

            if (localStorage.getItem(branchObj.storage.imagePath) !== 'ShopCoupon') {
                branchData.shopcoupon_imgs = {
                    main: '',
                    imgs: []
                };
            }

            branchData.delete_imgs = [];
            indexObj._dataStorage(branchObj.storage.branchData, branchData);
            if (branchData.shopcoupon_imgs.main !== '') {
                //$$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '" onclick="addImage(\'main-img\',\'' + branchData.shopcoupon_imgs.main + '\')"/><div class="main-lable">封面</div></div>');
                $$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '"/><div class="main-lable">封面</div></div>');
                $('.main-image-block').click(function() {
                    if (isMobile.Android() || isMobile.iOS()) {
                        addImage('main-img', branchData.shopcoupon_imgs.main);
                    } else {
                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=main', '');
                    }
                });
            } else {
                //$$('.image-block .container').html('<div class="main-image-block"><div class="image-item main" onclick="addImage(\'main-img\',\'\')">+</div><div class="main-lable">封面</div></div>');
                $$('.image-block .container').html('<div class="main-image-block"><div class="image-item main">+</div><div class="main-lable">封面</div></div>');
                $('.main-image-block').click(function() {
                    if (isMobile.Android() || isMobile.iOS()) {
                        addImage('main-img', '');
                    } else {
                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=main', '');
                    }
                });
            }
            if (branchData.shopcoupon_imgs.imgs.length > 0) {
                for (var i in branchData.shopcoupon_imgs.imgs) {
                    //$$('.image-block .container').append('<div class="sub-image-block"><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" onclick="addImage(\'sub-img\',\'' + branchData.shopcoupon_imgs.imgs[i] + '\')"/></div>');
                    $$('.image-block .container').append('<div class="sub-image-block" position=' + i + '><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" /></div>');
                }
                $('.sub-image-block').click(function() {
                    if (isMobile.Android() || isMobile.iOS()) {
                        addImage('sub-img', branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                    } else {
                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=' + $(this).attr('position'), branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                    }
                });
            }
            if (branchData.shopcoupon_imgs.main != '' && branchData.shopcoupon_imgs.imgs.length < 5) {
                //$$('.image-block .container').append('<div class="image-item" onclick="addImage(\'sub-img\',\'\')">+</div>');
                $$('.image-block .container').append('<div class="image-item">+</div>');
                $('.image-item').click(function() {
                    if (isMobile.Android() || isMobile.iOS()) {
                        addImage('sub-img', '');
                    } else {
                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=add', '');
                    }
                });
            }
            if (branchData.shopcoupon_imgs.main == '' && branchData.shopcoupon_imgs.imgs.length == 0) {
                $('.image-item').css('padding', '0');
            }

            myApp.initImagesLazyLoad('.page-content');
            $('#shopcoupon-name').val(commodity_data.scm_title);
            $('.scm_producttype').val(stringObj.shop.scm_producttype_array[parseInt(commodity_data.scm_producttype) - 1]);
            $('#scm_fulldescript').val(commodity_data.scm_fulldescript);
            $('#shopcoupon-type').val(commodity_data.scm_type);
            $('.scm_coupon_providetype').val(stringObj.shop.scm_coupon_providetype_array[parseInt(commodity_data.scm_coupon_providetype)]);
            $('#scm_bonus_payamount').val(commodity_data.scm_bonus_payamount);
            $('#scm_bonus_giveamount').val(commodity_data.scm_bonus_giveamount);
            $('#price').val(commodity_data.scm_price);
            if (commodity_data.scm_startdate) {
                $('#calendar-range').val(commodity_data.scm_startdate.replace(/-/ig, '/') + ' - ' + commodity_data.scm_enddate.replace(/-/ig, '/'));
            }
            $('#limit').val(commodity_data.scm_member_limit);
            $('#scm_balanceno').val(commodity_data.scm_balanceno);

            //特點兌換
            if (commodity_data.scm_coupon_providetype === '1') {
                $('.scm_bonus_payamount').css('display', 'inherit');
                $('#price').val(0);
                $('.price').css('display', 'none');
            }

            //贈送特點
            if (commodity_data.scm_bonus_giveafteruse === 1) {
                $('.scm_bonus_giveamount').css('display', 'inherit');
                $('.giveafteruse-checkbox').prop('checked', true);
            } else {
                $('#scm_bonus_giveamount').val('');
            }

            //可預約
            var scm_reservationtag = commodity_data.scm_reservationtag;
            if (scm_reservationtag === 1) {
                $('.branch-region').css('display', 'inherit');
                $('.reservation-checkbox').prop('checked', true);

                $('#calendar-range').css('color', '#fff');

                $('.shopcoupon-time').css('display', 'inherit');
                $('.weekend-radio').css('display', 'inherit');
                $('.require-time').css('display', 'inherit');
                $('.prepare-time').css('display', 'inherit');
                $('.reserve-num').css('display', 'inherit');

                if (commodity_data.scm_dailystart) {
                    $('#shopcoupon-time').val(commodity_data.scm_dailystart.substring(0, 5) + ' ~ ' + commodity_data.scm_dailyend.substring(0, 5));
                }
                if (commodity_data.scm_workhour) {
                    var scm_workhour_h = parseInt(parseFloat(commodity_data.scm_workhour) * 30 / 60);
                    var scm_workhour_m = parseInt(parseFloat(commodity_data.scm_workhour) * 30 % 60);
                    if (scm_workhour_h < 10) {
                        scm_workhour_h = '0' + scm_workhour_h;
                    }
                    if (scm_workhour_m < 10) {
                        scm_workhour_m = '0' + scm_workhour_m;
                    }
                    $('#require-time').val(scm_workhour_h + ' 小時 ' + scm_workhour_m + ' 分鐘');
                }
                if (commodity_data.scm_preparehour) {
                    var scm_preparehour_h = parseInt(parseFloat(commodity_data.scm_preparehour) * 30 / 60);
                    var scm_preparehour_m = parseInt(parseFloat(commodity_data.scm_preparehour) * 30 % 60);
                    if (scm_preparehour_h < 10) {
                        scm_preparehour_h = '0' + scm_preparehour_h;
                    }
                    if (scm_preparehour_m < 10) {
                        scm_preparehour_m = '0' + scm_preparehour_m;
                    }
                    $('#prepare-time').val(scm_preparehour_h + ' 小時 ' + scm_preparehour_m + ' 分鐘');
                }
                $('#reserve-num').val(commodity_data.scm_reservationavailable);
                if (commodity_data.scm_includeweekend === '1') {
                    $('.includ').prop('checked', true);
                } else if (commodity_data.scm_includeweekend === '0') {
                    $('.not_included').prop('checked', true);
                }


            }
        }

        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        if (localStorage.getItem(branchObj.storage.imagePath) !== 'ShopCoupon') {
            branchData.shopcoupon_imgs = {
                main: '',
                imgs: []
            };
        }
        indexObj._dataStorage(branchObj.storage.branchData, branchData);


        if (branchData.shopcoupon_imgs.main !== '') {
            //$$('.image-block .container').html('<div class="main-image-block"><img class="main" src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '" onclick="addImage(\'main-img\',\'' + branchData.shopcoupon_imgs.main + '\')"/><div class="main-lable">封面</div></div>');
            $$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '"/><div class="main-lable">封面</div></div>');
            $('.main-image-block').click(function() {
                if (isMobile.Android() || isMobile.iOS()) {
                    addImage('main-img', branchData.shopcoupon_imgs.main);
                } else {
                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=main', '');
                }
            });
        } else {
            //$$('.image-block .container').html('<div class="main-image-block"><div class="image-item main" onclick="addImage(\'main-img\',\'\')">+</div><div class="main-lable">封面</div></div>');
            $$('.image-block .container').html('<div class="main-image-block"><div class="image-item main">+</div><div class="main-lable">封面</div></div>');
            $('.main-image-block').click(function() {
                if (isMobile.Android() || isMobile.iOS()) {
                    addImage('main-img', '');
                } else {
                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=main', '');
                }
            });
        }
        if (branchData.shopcoupon_imgs.imgs.length > 0) {
            /*for (var i in branchData.shopcoupon_imgs.imgs) {
             $$('.image-block .container').append('<div class="sub-image-block"><img src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" onclick="addImage(\'sub-img\',\'' + branchData.shopcoupon_imgs.imgs[i] + '\')"/></div>');
             }*/
            for (var i in branchData.shopcoupon_imgs.imgs) {
                //$$('.image-block .container').append('<div class="sub-image-block"><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" onclick="addImage(\'sub-img\',\'' + branchData.shopcoupon_imgs.imgs[i] + '\')"/></div>');
                $$('.image-block .container').append('<div class="sub-image-block" position=' + i + '><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" /></div>');
            }
            $('.sub-image-block').click(function() {
                //console.log($(this).attr('position'));
                //console.log(parseInt($(this).attr('position')));
                if (isMobile.Android() || isMobile.iOS()) {
                    addImage('sub-img', branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                } else {
                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=' + $(this).attr('position'), branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                }
            });
        }
        if (branchData.shopcoupon_imgs.main != '' && branchData.shopcoupon_imgs.imgs.length < 5) {
            //$$('.image-block .container').append('<div class="image-item" onclick="addImage(\'sub-img\',\'\')">+</div>');
            $$('.image-block .container').append('<div class="image-item">+</div>');
            $('.image-item').click(function() {
                if (isMobile.Android() || isMobile.iOS()) {
                    addImage('sub-img', '');
                } else {
                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=add', '');
                }
            });
        }
        if (branchData.shopcoupon_imgs.main == '' && branchData.shopcoupon_imgs.imgs.length == 0) {
            $('.image-item').css('padding', '0');
        }

        myApp.initImagesLazyLoad('.page-content');

        //測試 (暫時把商品形式隱藏)
        $('.branch-region').css('display', 'inherit');

        //活動期間
        var calendarRange = myApp.calendar({
            input: '#calendar-range',
            dateFormat: 'yyyy/mm/dd',
            rangePicker: true,
            monthNames: stringObj.text.monthNames
        });

        $('#calendar-range').change(function() {
            if ($(this).val().length == 23) {
                calendarRange.close();
            }
        });

        //贈送特點
        if (!commodity_data.scm_bonus_giveafteruse) {
            commodity_data.scm_bonus_giveafteruse = 0;
            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
        }
        var scm_reservationtag = commodity_data.scm_bonus_giveafteruse || 0;
        $('.giveafteruse-checkbox').change(function() {
            if ($(this).is(':checked')) {
                scm_bonus_giveafteruse = 1;
                commodity_data.scm_bonus_giveafteruse = 1;
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                $('.scm_bonus_giveamount').css('display', 'inherit');
            } else {
                scm_bonus_giveafteruse = 0;
                commodity_data.scm_bonus_giveafteruse = 0;
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                $('.scm_bonus_giveamount').css('display', 'none');
            }
        });

        //預約狀態
        if (!commodity_data.scm_reservationtag) {
            commodity_data.scm_reservationtag = 0;
            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
        }
        var scm_reservationtag = commodity_data.scm_reservationtag || 0;
        $('.reservation-checkbox').change(function() {
            if ($(this).is(':checked')) {
                scm_reservationtag = 1;
                commodity_data.scm_reservationtag = 1;
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                $('.shopcoupon-time').css('display', 'inherit');
                $('.weekend-radio').css('display', 'inherit');
                $('.require-time').css('display', 'inherit');
                $('.prepare-time').css('display', 'inherit');
                $('.reserve-num').css('display', 'inherit');
            } else {
                scm_reservationtag = 0;
                commodity_data.scm_reservationtag = 0;
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                $('.shopcoupon-time').css('display', 'none');
                $('.weekend-radio').css('display', 'none');
                $('.require-time').css('display', 'none');
                $('.prepare-time').css('display', 'none');
                $('.reserve-num').css('display', 'none');
            }
        });

        if (commodity_data.scm_producttype === '2') {
            scm_reservationtag = 0;
            commodity_data.scm_reservationtag = 0;
            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
            $('.branch-region').css('display', 'none');
            $('.shopcoupon-time').css('display', 'none');
            $('.weekend-radio').css('display', 'none');
            $('.require-time').css('display', 'none');
            $('.prepare-time').css('display', 'none');
            $('.reserve-num').css('display', 'none');
            $('.reservation-checkbox').prop('checked', false);
        }

        //商品名稱
        $$('.shopcoupon-name').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="名稱">', '商品名稱');

            $('.input-value').val($('#shopcoupon-name').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#shopcoupon-name').val($('.input-value').val());
            });
        });

        //活動說明
        $$('.scm_fulldescript').on('click', function() {
            myApp.alert('<textarea class="info resizable" placeholder="內容" rows="9"></textarea>', '活動說明');

            $('.info').val($('#scm_fulldescript').val());

            $('textarea.info').focus();

            $('.modal-button').click(function() {
                $('#scm_fulldescript').val($('.info').val());
            });
        });

        //活動費用
        $$('.price').on('click', function() {
            myApp.alert('<input class="input-value" type="number" min="0" placeholder="金額" onkeydown="input_limit(this, 9);" onkeyup="input_limit(this, 9);">', '費用');

            $('.input-value').val($('#price').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#price').val($('.input-value').val());
            });
        });

        //特點扣除
        $$('.scm_bonus_payamount').on('click', function() {
            myApp.alert('<input class="input-value" type="number" min="1" placeholder="數額（1~9999）" onkeydown="input_limit(this, 4);" onkeyup="input_limit(this, 4);">', '特點扣除');

            $('.input-value').val($('#scm_bonus_payamount').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#scm_bonus_payamount').val($('.input-value').val());
            });
        });

        //特點贈與
        $$('.scm_bonus_giveamount').on('click', function() {
            myApp.alert('<input class="input-value" type="number" min="1" placeholder="數額（1~9999）" onkeydown="input_limit(this, 4);" onkeyup="input_limit(this, 4);">', '特點贈與');

            $('.input-value').val($('#scm_bonus_giveamount').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#scm_bonus_giveamount').val($('.input-value').val());
            });
        });

        //索取張數限制
        $$('.limit').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="張數" onkeydown="input_limit(this, 9);" onkeyup="input_limit(this, 9);">', '索取張數限制');

            $('.input-value').val($('#limit').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#limit').val($('.input-value').val());
            });
        });

        //銷帳單號
        $$('.scm_balanceno').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="單號">', '銷帳單號');

            $('.input-value').val($('#scm_balanceno').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#scm_balanceno').val($('.input-value').val());
            });
        });

        //同時段允許預約數
        $$('.reserve-num').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="數目">', '同時段允許預約數');

            $('.input-value').val($('#reserve-num').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#reserve-num').val($('.input-value').val());
            });
            if ($('#limit').val() != '') {
                //監聽人數輸入事件
                $(".input-value").on("input", function(e) {
                    //Max
                    if ($(this).val() > parseInt($('#limit').val())) {
                        $(this).val(parseInt($('#limit').val()));
                    }
                    //Min
                    if ($(this).val() < 0) {
                        $(this).val(1);
                    }
                    if ($(this).val() == 0) {
                        $(this).val('');
                    }
                });
            }
        });

        //活動類別
        // var pickerType = myApp.picker({
        //     input: '#shopcoupon-type',
        //     rotateEffect: false,
        //     toolbarTemplate: '<div class="toolbar">' +
        //         '<div class="toolbar-inner">' +
        //         '<div class="left">' +
        //         '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
        //         '</div>' +
        //         '<div class="center">活動類別</div>' +
        //         '<div class="right">' +
        //         '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
        //         '</div>' +
        //         '</div>' +
        //         '</div>',
        //     formatValue: function(p, values, displayValues) {
        //         return displayValues[0];
        //     },
        //     cols: [{
        //         textAlign: 'center',
        //         values: [0, 1, 2, 3],
        //         displayValues: ['汽車美容', '汽車維修', '汽車百貨', '汽車零配件']
        //     }]
        // });


        //商品型式
        var scm_producttype_picker = myApp.picker({
            input: '.scm_producttype',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.scm_producttype + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onOpen: function(p) {
                if (commodity_data.scm_producttype) {
                    p.setValue([parseInt(commodity_data.scm_producttype)]);
                }
            },
            onClose: function(p) {
                commodity_data.scm_producttype = p.cols[0].value;
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                if (p.cols[0].value === '1') {
                    $('.branch-region').css('display', 'inherit');
                    if (commodity_data.scm_reservationtag === 1) {
                        $('.shopcoupon-time').css('display', 'inherit');
                        $('.weekend-radio').css('display', 'inherit');
                        $('.require-time').css('display', 'inherit');
                        $('.prepare-time').css('display', 'inherit');
                        $('.reserve-num').css('display', 'inherit');
                    }
                } else {
                    $('.branch-region').css('display', 'none');
                    $('.shopcoupon-time').css('display', 'none');
                    $('.weekend-radio').css('display', 'none');
                    $('.require-time').css('display', 'none');
                    $('.prepare-time').css('display', 'none');
                    $('.reserve-num').css('display', 'none');
                }
            },
            cols: [{
                textAlign: 'center',
                values: [1, 2],
                width: '100%',
                displayValues: stringObj.shop.scm_producttype_array,
                onChange: function(picker, carmodel) {

                }
            }]
        });

        //提供類型
        var providetypeType = myApp.picker({
            input: '.scm_coupon_providetype',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.scm_coupon_providetype + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onClose: function(p) {
                commodity_data.scm_coupon_providetype = p.cols[0].value;
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                if (p.cols[0].value === '1') {
                    $('.scm_bonus_payamount').css('display', 'inherit');
                    $('#price').val(0);
                    $('.price').css('display', 'none');
                } else {
                    $('.scm_bonus_payamount').css('display', 'none');
                    $('#price').val('');
                    $('.price').css('display', 'inherit');
                }
            },
            cols: [{
                textAlign: 'center',
                values: [0, 1],
                width: '100%',
                displayValues: stringObj.shop.scm_coupon_providetype_array
            }]
        });


        //活動每日時間
        var pickerTime = myApp.picker({
            input: '.page:not(.cached) #shopcoupon-time',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">活動每日時間</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + ':' + values[1] + ' ~ ' + values[2] + ':' + values[3];
            },
            cols: [
                // Hours
                {
                    textAlign: 'center',
                    values: (function() {
                        var arr = [];
                        for (var i = 0; i <= 23; i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ':'
                },
                // Minutes
                {
                    values: (function() {
                        var arr = ['00', '30'];
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' ~ '
                },
                // Hours
                {
                    textAlign: 'center',
                    values: (function() {
                        var arr = [];
                        for (var i = 0; i <= 23; i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ':'
                },
                // Minutes
                {
                    textAlign: 'center',
                    values: (function() {
                        var arr = ['00', '30'];
                        return arr;
                    })(),
                }

            ]
        });

        //作業工時
        var pickerRequireTime = myApp.picker({
            input: '.page:not(.cached) #require-time',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">作業工時</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + ' 小時 ' + values[1] + ' 分鐘 ';
            },
            cols: [
                // Hours
                {
                    textAlign: 'center',
                    values: (function() {
                        var arr = [];
                        for (var i = 0; i <= 23; i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' 小時 '
                },
                // Minutes
                {
                    values: (function() {
                        var arr = ['00', '30'];
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' 分鐘 '
                }

            ]
        });

        //準備工時
        var pickerPrepareTime = myApp.picker({
            input: '.page:not(.cached) #prepare-time',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">準備工時</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + ' 小時 ' + values[1] + ' 分鐘 ';
            },
            cols: [
                // Hours
                {
                    textAlign: 'center',
                    values: (function() {
                        var arr = [];
                        for (var i = 0; i <= 23; i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' 小時 '
                },
                // Minutes
                {
                    values: (function() {
                        var arr = ['00', '30'];
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' 分鐘 '
                }

            ]
        });


        if (localStorage.getItem('scrollTop')) {
            $('.add-shopcoupon-content').scrollTop(parseFloat(localStorage.getItem('scrollTop')));
            localStorage.removeItem('scrollTop');
        }

        //向上移動
        $('.move-up').click(function(event) {
            if ($(this).parents('li').index() !== 0) {
                commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
                if (!commodity_data.scm_advancedescribe) {
                    commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                }
                commodity_data.scm_advancedescribe.splice($(this).parents('li').index() - 1, 0, commodity_data.scm_advancedescribe.splice($(this).parents('li').index(), 1)[0]);
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                $(this).parents('li').insertBefore('.commodity-details-block.sortable li:nth-child(' + ($(this).parents('li').index()) + ')');
            }
        });
        //向下移動
        $('.move-down').click(function(event) {
            commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
            if (!commodity_data.scm_advancedescribe) {
                commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                commodity_data.scm_advancedescribe.splice($(this).parents('li').index() + 1, 0, commodity_data.scm_advancedescribe.splice($(this).parents('li').index(), 1)[0]);
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                $(this).parents('li').insertAfter('.commodity-details-block.sortable li:nth-child(' + ($(this).parents('li').index() + 2) + ')');
            } else {
                if ($(this).parents('li').index() < commodity_data.scm_advancedescribe.length - 1) {
                    commodity_data.scm_advancedescribe.splice($(this).parents('li').index() + 1, 0, commodity_data.scm_advancedescribe.splice($(this).parents('li').index(), 1)[0]);
                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                    $(this).parents('li').insertAfter('.commodity-details-block.sortable li:nth-child(' + ($(this).parents('li').index() + 2) + ')');
                }
            }
        });

        $('.details-img').click(function() {
            if (!commodity_data.scm_advancedescribe) {
                commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
            }
            if (Cookies.get('app_version') !== undefined) {
                addImage('shopcoupon', commodity_data.scm_advancedescribe[$(this).parents('li').index()].content_img);
            } else {
                setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=details&position=' + $(this).parents('li').index(), commodity_data.scm_advancedescribe[$(this).parents('li').index()].content_img);
            }
        });
        $('.details-text').parents('.item-inner').click(function() {
            if (!commodity_data.scm_advancedescribe) {
                commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
            }
            var position = $(this).parents('li').index();
            var details_text = $(this).find('.details-text');
            myApp.modal({
                title: '文字內容',
                text: '<textarea class="info resizable" placeholder="內容" rows="8"></textarea>',
                buttons: [{
                    text: stringObj.text.cancel,
                    onClick: function() {

                    }
                }, {
                    text: stringObj.text._clear,
                    onClick: function() {
                        commodity_data.scm_advancedescribe.splice(position, 1);
                        details_text.parents('.commodity-details-item').remove();
                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                    }
                }, {
                    text: stringObj.text.edit,
                    onClick: function() {
                        if (!commodity_data.scm_advancedescribe) {
                            commodity_data.scm_advancedescribe = rObj.scm_advancedescribe;
                            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                        }
                        commodity_data.scm_advancedescribe[position].content_text = $('textarea.info').val();
                        if ($('textarea.info').val()) {
                            details_text.text($('textarea.info').val());
                        } else {
                            commodity_data.scm_advancedescribe.splice(position, 1);
                            details_text.parents('.commodity-details-item').remove();
                        }
                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                    }
                }]
            });

            $('textarea.info').val(details_text.text());

            $('textarea.info').focus();

        });


        $('.add-details-image').unbind('click');
        $('.add-details-text').unbind('click');
        $('.add-details-image').click(function() {
            if (!commodity_data.scm_advancedescribe) {
                commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
            }
            if (Cookies.get('app_version') !== undefined) {
                addImage('shopcoupon', '');
            } else {
                setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=details&position=add', '');
            }
        });
        $('.add-details-text').click(function() {
            myApp.modal({
                title: '文字內容',
                text: '<textarea class="info resizable" placeholder="內容" rows="8"></textarea>',
                buttons: [{
                    text: stringObj.text.cancel,
                    onClick: function() {}
                }, {
                    text: stringObj.text.add,
                    onClick: function() {
                        // if (!commodity_data.scm_advancedescribe) {
                        //     commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                        //     indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                        // }
                        if ($.trim($('textarea.info').val()) !== '') {
                            commodity_data.scm_advancedescribe.push({
                                content_text: $('textarea.info').val(),
                                content_img: ''
                            });
                            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                            localStorage.setItem('scrollTop', $('.add-shopcoupon-content').scrollTop() + 70);
                            saveData();
                            mainView.router.load({
                                url: window.location.href.substring(window.location.href.indexOf("#!/") + 3),
                                reload: true
                            });
                        }
                    }
                }]
            });

            $('textarea.info').focus();

        });

        //新增
        $('.add').click(function() {

            branchData = indexObj._dataStorage(branchObj.storage.branchData);
            commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data);

            $('.shopcoupon-name').removeClass('lengthError');
            $('.scm_fulldescript').removeClass('lengthError');
            $('.scm_balanceno').removeClass('lengthError');
            $('.scm_bonus_payamount').removeClass('lengthError');
            $('.scm_bonus_giveamount').removeClass('lengthError');

            $('.price').removeClass('spacesError');
            $('.limit').removeClass('spacesError');
            $('.reserve-num').removeClass('spacesError');
            $('.scm_bonus_payamount').removeClass('spacesError');
            $('.scm_bonus_giveamount').removeClass('spacesError');

            $('.shopcoupon-name').removeClass('nullError');
            $('.scm_fulldescript').removeClass('nullError');
            $('.scm_category').removeClass('nullError');
            $('.price').removeClass('nullError');
            $('.scm_date').removeClass('nullError');
            $('.limit').removeClass('nullError');
            $('.scm_producttype-block').removeClass('nullError');
            $('.shopcoupon-time').removeClass('nullError');
            $('.require-time').removeClass('nullError');
            $('.prepare-time').removeClass('nullError');
            $('.reserve-num').removeClass('nullError');
            $('.scm_coupon_providetype-block').removeClass('nullError');
            $('.scm_bonus_payamount').removeClass('nullError');
            $('.scm_bonus_giveamount').removeClass('nullError');

            $('.scm_date').removeClass('formatError');
            $('.noSetMainImg').css('display', 'none');

            var isError = false;


            //長度判斷
            if ($('#shopcoupon-name').val().length > 40) {
                $('.shopcoupon-name').addClass('lengthError');
                isError = true;
            }

            if ($('#scm_fulldescript').val().length > 500) {
                $('.scm_fulldescript').addClass('lengthError');
                isError = true;
            }

            if ($('#scm_balanceno').val().length > 50) {
                $('.scm_balanceno').addClass('lengthError');
                isError = true;
            }

            if ($('#scm_bonus_payamount').val().length > 4) {
                $('.scm_bonus_payamount').addClass('lengthError');
                isError = true;
            }

            if ($('#scm_bonus_giveamount').val().length > 4) {
                $('.scm_bonus_giveamount').addClass('lengthError');
                isError = true;
            }


            //空白字元判斷
            if ($('#price').val().indexOf(" ") !== -1) {
                $('.price').addClass('spacesError');
                isError = true;
            }
            if ($('#limit').val().indexOf(" ") !== -1) {
                $('.limit').addClass('spacesError');
                isError = true;
            }
            if ($('#scm_bonus_payamount').val().indexOf(" ") !== -1) {
                $('.scm_bonus_payamount').addClass('spacesError');
                isError = true;
            }
            if ($('#scm_bonus_giveamount').val().indexOf(" ") !== -1) {
                $('.scm_bonus_giveamount').addClass('spacesError');
                isError = true;
            }


            //填寫判斷
            if (branchData.shopcoupon_imgs.main === '') {
                $('.noSetMainImg').css('display', 'inherit');
                isError = true;
            }
            if ($.trim($('#shopcoupon-name').val()) === "") {
                $('.shopcoupon-name').addClass('nullError');
                isError = true;
            }
            if ($.trim($('#scm_fulldescript').val()) === "") {
                $('.scm_fulldescript').addClass('nullError');
                isError = true;
            }
            // if ($.trim($('.scm_producttype').val()) === "") {
            //     $('.scm_producttype-block').addClass('nullError');
            //     isError = true;
            // }
            if ($.trim($('#calendar-range').val()) === "") {
                $('.scm_date').addClass('nullError');
                isError = true;
            }
            if ($.trim($('#limit').val()) === "") {
                $('.limit').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scm_coupon_providetype').val()) === "") {
                $('.scm_coupon_providetype-block').addClass('nullError');
                isError = true;
            }
            if (commodity_data.scm_coupon_providetype === '1') {
                if ($.trim($('#scm_bonus_payamount').val()) === "" || parseInt($.trim($('#scm_bonus_payamount').val())) <= 0) {
                    $('.scm_bonus_payamount').addClass('nullError');
                    isError = true;
                }
            } else {
                if ($.trim($('#price').val()) === "" || parseInt($.trim($('#price').val())) <= 0) {
                    $('.price').addClass('nullError');
                    isError = true;
                }
            }
            if (commodity_data.scm_bonus_giveafteruse === 1) {
                if ($.trim($('#scm_bonus_giveamount').val()) === "" || parseInt($.trim($('#scm_bonus_giveamount').val())) <= 0) {
                    $('.scm_bonus_giveamount').addClass('nullError');
                    isError = true;
                }
            }



            //格式判斷
            if ($('#calendar-range').val().length < 23) {
                $('.scm_date').addClass('formatError');
                isError = true;
            }


            if (scm_reservationtag === 1) {
                //空白字元判斷
                if ($('#reserve-num').val().indexOf(" ") !== -1) {
                    $('.branch-address').addClass('spacesError');
                    isError = true;
                }
                //填寫判斷
                if ($('#shopcoupon-time').val() === "") {
                    $('.shopcoupon-time').addClass('nullError');
                    isError = true;
                }
                if ($('#require-time').val() === "") {
                    $('.require-time').addClass('nullError');
                    isError = true;
                }
                if ($('#prepare-time').val() === "") {
                    $('.prepare-time').addClass('nullError');
                    isError = true;
                }
                if ($('#reserve-num').val() === "") {
                    $('.reserve-num').addClass('nullError');
                    isError = true;
                }
            }


            if (isError) {
                myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                if (browser_width < 992) {
                    $('.toast-container').css('width', '40%');
                    $('.toast-container').css('left', '45%');
                } else {
                    $('.toast-container').css('width', '15%');
                    $('.toast-container').css('left', '47.5%');
                }
            }

            if (branchData.shopcoupon_imgs.main.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                branchData.shopcoupon_imgs.main = branchData.shopcoupon_imgs.main.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                indexObj._dataStorage(branchObj.storage.branchData, branchData);
            }

            for (var i in branchData.shopcoupon_imgs.imgs) {
                if (branchData.shopcoupon_imgs.imgs[i].match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                    branchData.shopcoupon_imgs.imgs.splice(i, 1, branchData.shopcoupon_imgs.imgs[i].substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length));
                    indexObj._dataStorage(branchObj.storage.branchData, branchData);
                }
            }

            if (commodity_data.scm_advancedescribe.length > 0) {
                for (var j in commodity_data.scm_advancedescribe) {
                    if (commodity_data.scm_advancedescribe[j].content_img.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                        commodity_data.scm_advancedescribe[j].content_img = commodity_data.scm_advancedescribe[j].content_img.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                    }
                }
            }

            var mainSg = indexObj._dataCookies(indexObj._storage.main);
            branchData = indexObj._dataStorage(branchObj.storage.branchData);
            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                scm_id: '',
                managetype: 0,
                scm_title: $('#shopcoupon-name').val(),
                scm_fulldescript: $('#scm_fulldescript').val(),
                scm_producttype: '1', //commodity_data.scm_producttype,
                scm_category: 0, //pickerType.value[0],
                scm_mainpic: branchData.shopcoupon_imgs.main,
                scm_activepics: JSON.stringify(branchData.shopcoupon_imgs.imgs),
                scm_price: $('#price').val(),
                scm_startdate: $('#calendar-range').val().substring(0, 10),
                scm_enddate: $('#calendar-range').val().substring(13),
                scm_reservationtag: scm_reservationtag,
                scm_dailystart: $('#shopcoupon-time').val().substring(0, 5),
                scm_dailyend: $('#shopcoupon-time').val().substring(8),
                scm_workhour: ((parseInt($('#require-time').val().substring(0, 2)) * 60) + parseInt($('#require-time').val().substring(6, 8))) / 30,
                scm_preparehour: ((parseInt($('#prepare-time').val().substring(0, 2)) * 60) + parseInt($('#prepare-time').val().substring(6, 8))) / 30,
                scm_includeweekend: $("input[name='weekend-radio']:checked").val(),
                scm_reservationavailable: $('#reserve-num').val(),
                scm_poststatus: '',
                scm_member_limit: $('#limit').val(),
                scm_balanceno: $('#scm_balanceno').val(),
                scm_coupon_providetype: commodity_data.scm_coupon_providetype,
                scm_bonus_payamount: $('#scm_bonus_payamount').val(),
                scm_bonus_giveafteruse: commodity_data.scm_bonus_giveafteruse,
                scm_bonus_giveamount: $('#scm_bonus_giveamount').val(),
                scm_advancedescribe: JSON.stringify(commodity_data.scm_advancedescribe),
                md_securitycode: ''
            };
            if ($('#scm_bonus_payamount').val() === '') {
                data.scm_bonus_payamount = 0;
            }
            if ($('#scm_bonus_giveamount').val() === '') {
                data.scm_bonus_giveamount = 0;
            }
            //console.log(JSON.stringify(data));
            if (!isError) {
                branchObj.shopcouponmanager(data);
            }


        });


        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 2000);

    },
    //商家活動內容
    shopCouponContentGet: function(scm_id, type, scg_id, scm_title, scm_enddate) {
        myApp.showIndicator();
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: encodeURIComponent(btoa(localStorage.getItem('salt_no') + '_' + CryptoJS.SHA256(stringObj.shop.moduleaccount + stringObj.shop.modulepassword + localStorage.getItem('salt')))), //Cookies.get('modvrf'),
            scm_id: scm_id
        };

        //console.log(JSON.stringify(data));

        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponcontentquery,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.shopcouponcontentqueryresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponcontentqueryresult));
                    if (rObj.message_no === "000000000") {

                        rObj.scm_startdate = rObj.scm_startdate.replace(/-/ig, '/');
                        rObj.scm_enddate = rObj.scm_enddate.replace(/-/ig, '/');

                        if (type != 'edit') {

                            if (nowPage === 'shopcoupon-info') {
                                indexObj._dataStorage('logistics_data', null);
                                indexObj._dataStorage('shop_buy_data', null);
                                indexObj._dataStorage('shop_item', rObj);
                                if (rObj.scm_advancedescribe) {
                                    rObj.scm_advancedescribe = JSON.parse(rObj.scm_advancedescribe);
                                    for (var i in rObj.scm_advancedescribe) {
                                        if (rObj.scm_advancedescribe[i].content_img) {
                                            rObj.scm_advancedescribe[i].content_img = stringObj.text.branch_img_path + rObj.scm_advancedescribe[i].content_img;
                                        }
                                    }
                                }
                                var temp = indexObj.template('templateShopCouponInfo');
                                var item = temp(rObj);
                                $$('.shopcoupon-info-block').html(item);

                                var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

                                if (type === 'scan') {
                                    $('.serving').css('display', 'inherit');
                                    $('.favorite').css('display', 'none');
                                    $('.shopcoupon-subTitle').css('display', 'none');
                                    $('.branch-info').css('display', 'none');
                                    $('#shopcoupon-map').css('display', 'none');
                                    $('.shopcoupon-info-block').css('height', 'auto')
                                    $$('.shopcoupon-info-left a').attr('href', 'shop/branch-main');
                                } else if (type === 'shop_available' || type == 'shop_finish' || type == 'shop_invalid' || type == 'reserved' || type == 'favorite') {
                                    if (type === 'shop_available') {
                                        $('.showQR').css('display', 'inherit');
                                        $$('.shopcoupon-info-left a').attr('href', 'coupon-record?tab=shop-coupon');
                                    } else if (type == 'reserved') {
                                        $('.reserved').css('display', 'inherit');
                                        $$('.shopcoupon-info-left a').attr('href', 'coupon-record?tab=shop-coupon');
                                    } else if (type === 'favorite') {
                                        $('.get').css('display', 'inherit');
                                        $$('.shopcoupon-info-left a').attr('href', '#');
                                        $$('.shopcoupon-info-left a').click(function() {
                                            window.history.back();
                                        });
                                    } else {
                                        $$('.shopcoupon-info-left').html('<a href="branch-info?sd_id=' + rObj.sd_id + '&tab=branch-preferential-content" class="link icon-only"><span class="icon-chevron-left"></span></a>');
                                    }
                                } else if (type === 'management') {
                                    $$('.shopcoupon-info-left').html('<a href="shop/shopcoupon-management" class="link icon-only"><span class="icon-chevron-left"></span></a>');
                                } else {
                                    // var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
                                    // if (nowSd_id != branchData.sd_id) {
                                    //     $('.get').css('display', 'inherit');
                                    // }
                                    $('.get').css('display', 'inherit');
                                    $$('.shopcoupon-info-left').html('<a href="branch-info?sd_id=' + rObj.sd_id + '&tab=branch-preferential-content" class="link icon-only"><span class="icon-chevron-left"></span></a>');

                                }


                                if (rObj.scm_reservationtag === '1') {
                                    $('.reservationtag').css('display', 'inherit');
                                    $('.showQR .toolbar-inner a').html('預約');
                                } else if (rObj.scm_producttype === '1') {
                                    $('.coupontag').css('display', 'inherit');
                                } else if (rObj.scm_producttype === '2') {
                                    $('.commoditytag').css('display', 'inherit');
                                }

                                var shopSwiper = new Swiper('.shopcoupon-imgs', {
                                    pagination: '.swiper-pagination',
                                    paginationClickable: true,
                                    centeredSlides: true,
                                    autoplay: 3000,
                                    autoplayDisableOnInteraction: false,
                                    loop: true,
                                    effect: 'fade'
                                });

                                //顯示主圖
                                shopSwiper.appendSlide('<div class="swiper-slide shop-item" id="shop-main"><img src="' + stringObj.text.branch_img_path + rObj.scm_mainpic + '" onerror=\'this.src="../app/image/imgDefault.png"\'/></div>');

                                //顯示子圖
                                var scm_activepics = JSON.parse(rObj.scm_activepics);
                                for (var i in scm_activepics) {
                                    shopSwiper.appendSlide('<div class="swiper-slide shop-item" id="shop-img' + i + '"><img src="' + stringObj.text.branch_img_path + scm_activepics[i] + '" onerror=\'this.src="../app/image/imgDefault.png"\'/></div>');
                                }
                                //預設先顯示第一張主圖
                                shopSwiper.slideTo(1, 0, true);

                                //定義經緯度位置
                                var latlng = new google.maps.LatLng(parseFloat(rObj.sd_lat), parseFloat(rObj.sd_lng));

                                //設定地圖參數
                                var mapOptions = {
                                    zoom: 15, //初始放大倍數
                                    center: latlng, //預設中心經緯度
                                    mapTypeId: google.maps.MapTypeId.ROADMAP, //正常2D道路模式
                                    mapTypeControl: false, //切換地圖檢視類型的面板
                                    streetViewControl: false //街景服務的面板
                                };

                                //在指定DOM元素中嵌入地圖
                                var shopcoupon_map = new google.maps.Map(document.getElementById("shopcoupon-map"), mapOptions);

                                //加入標示點(Marker)
                                branchObj.addMarker(latlng, rObj.sd_shopname, shopcoupon_map);

                                myApp.initImagesLazyLoad('.page-content');

                                var favoriteList = indexObj._dataStorage(indexObj._storage.favorite);

                                if (favoriteList) {
                                    for (var i in favoriteList.shopcouponList) {
                                        $$('.favorite-' + favoriteList.shopcouponList[i].ubm_objectid).html('<i class="fa fa-star"></i>');
                                    }
                                }

                                //索取/立即購買
                                $('.get').click(function() {
                                    var mainSg = indexObj._dataCookies(indexObj._storage.main);
                                    if (mainSg.sat) {
                                        if (parseInt(rObj.inventory) > 0) {
                                            localStorage.setItem('scm_id', scm_id);
                                            if (rObj.scm_reservationtag === '1') {
                                                //預約
                                                mainView.router.load({
                                                    url: 'shop-buy-data?scm_id=' + scm_id + '&from=reservation'
                                                });
                                                localStorage.setItem('scm_enddate', rObj.scm_enddate);
                                            } else if (rObj.scm_producttype === '1') {
                                                //服務券
                                                mainView.router.load({
                                                    url: 'shop-buy-data?scm_id=' + scm_id + '&from=coupon'
                                                });
                                            } else if (rObj.scm_producttype === '2') {
                                                //商品
                                                mainView.router.load({
                                                    url: 'shop-buy-data?scm_id=' + scm_id + '&from=commodity'
                                                });
                                            }
                                        } else {
                                            myApp.toast(stringObj.shop.no_inventory, '', {}).show();
                                        }
                                    } else {
                                        myApp.modal({
                                            title: stringObj.text.warn,
                                            text: stringObj.text.notLogin,
                                            buttons: [{
                                                text: stringObj.text.cancel,
                                                onClick: function() {}
                                            }, {
                                                text: stringObj.text.login,
                                                onClick: function() {
                                                    webview.loginPage();
                                                }
                                            }, ]
                                        });
                                    }

                                });
                                //顯示QR碼
                                $('.showQR').click(function() {
                                    var shopCouponRecord = indexObj._dataStorage(branchObj.storage.shopCouponRecord);
                                    findArrayItem(shopCouponRecord.availableList, 'scg_id', scg_id);
                                    if (rObj.scm_reservationtag == '0') {

                                        var Today = new Date();
                                        var nowDate = Today.getFullYear() + "/" + (Today.getMonth() + 1) + "/" + Today.getDate() + ' ' + Today.getHours() + ':' + Today.getMinutes() + ':' + Today.getSeconds();
                                        var qrCode = '{"scm_id":"' + shopCouponRecord.availableList[nowIndex].scm_id + '","scg_id":"' + scg_id + '","nowDate":"' + nowDate + '"}';

                                        myApp.modal({
                                            title: '',
                                            text: '<div class="qr-content">' +
                                                '<div class="qr-title">' + stringObj.text.qr_title + '</div>' +
                                                '<div class="qr-code"></div>' +
                                                '<p class="qr-use-title"><b style="color:#F26531;">' + stringObj.text.qr_subtitle + '：</b></p>' +
                                                '<p class="qr-use-content">' + stringObj.text.qr_context + '</p>' +
                                                '</div>',
                                            buttons: [{
                                                text: stringObj.text.confirm,
                                                bold: true,
                                                onClick: function() {

                                                }
                                            }]
                                        });

                                        $(".qr-code").qrcode({
                                            "render": "div",
                                            "size": 235,
                                            "background": "#fff",
                                            "text": qrCode
                                        });

                                        $('.modal').css("top", "30%");
                                        $('.modal').css("width", "270px");

                                    } else {
                                        //預約時間
                                        mainView.router.load({
                                            url: 'shop/shopcoupon-reservation?scm_id=' + shopCouponRecord.availableList[nowIndex].scm_id + '&scm_title=' + shopCouponRecord.availableList[nowIndex].scm_title + '&scm_enddate=' + shopCouponRecord.availableList[nowIndex].scm_enddate + '&scg_id=' + shopCouponRecord.availableList[nowIndex].scg_id + '&booktype=0',
                                            reload: true
                                        });
                                    }

                                });

                                //顯示QR碼(已預約)
                                $('.qrCode').click(function() {

                                    var shopCouponRecord = indexObj._dataStorage(branchObj.storage.shopCouponRecord);
                                    findArrayItem(shopCouponRecord.availableList, 'scg_id', scg_id);

                                    var Today = new Date();
                                    var nowDate = Today.getFullYear() + "/" + (Today.getMonth() + 1) + "/" + Today.getDate() + ' ' + Today.getHours() + ':' + Today.getMinutes() + ':' + Today.getSeconds();
                                    var qrCode = '{"scm_id":"' + shopCouponRecord.availableList[nowIndex].scm_id + '","scg_id":"' + scg_id + '","nowDate":"' + nowDate + '"}';

                                    myApp.modal({
                                        title: '',
                                        text: '<div class="qr-content">' +
                                            '<div class="qr-title">' + stringObj.text.qr_title + '</div>' +
                                            '<div class="qr-code"></div>' +
                                            '<p class="qr-use-title"><b style="color:#F26531;">' + stringObj.text.qr_subtitle + '：</b></p>' +
                                            '<p class="qr-use-content">' + stringObj.text.qr_context + '</p>' +
                                            '</div>',
                                        buttons: [{
                                            text: stringObj.text.confirm,
                                            bold: true,
                                            onClick: function() {

                                            }
                                        }]
                                    });

                                    $(".qr-code").qrcode({
                                        "render": "div",
                                        "size": 235,
                                        "background": "#fff",
                                        "text": qrCode
                                    });

                                    $('.modal').css("top", "30%");
                                    $('.modal').css("width", "270px");

                                });

                                //更改預約時間
                                $('.editDate').click(function() {
                                    var shopCouponRecord = indexObj._dataStorage(branchObj.storage.shopCouponRecord);
                                    findArrayItem(shopCouponRecord.availableList, 'scg_id', scg_id);
                                    mainView.router.load({
                                        url: 'shop/shopcoupon-reservation?scm_id=' + scm_id + '&scm_title=' + shopCouponRecord.availableList[nowIndex].scm_title + '&scm_enddate=' + shopCouponRecord.availableList[nowIndex].scm_enddate + '&scg_id=' + scg_id + '&booktype=1',
                                        reload: true
                                    });
                                });

                                //開始服務
                                $('.serving').click(function() {
                                    branchObj.shopcouponexec(scm_id, scg_id, scm_title, scm_enddate);
                                });

                            } else if (nowPage === 'branch-main') {
                                indexObj._dataStorage('scm_item', rObj);
                                var reservationinfo = indexObj._dataStorage('reservationinfo');
                                findArrayItem(reservationinfo.reservelist, 'scg_id', scg_id);
                                if (reservationinfo.reservelist[nowIndex].moc_id) {
                                    branchObj.query_member_car_detail(reservationinfo.reservelist[nowIndex].moc_id);
                                } else {

                                    var popupHTML = '<div class="popup popup-reserve">' +
                                        '<div class="page-content">' +
                                        '<div class="title">' + rObj.scm_title + '</div>' +
                                        '<div class="image-blcok">' +
                                        '<img src="' + stringObj.text.branch_img_path + rObj.scm_mainpic + '" class="main-img" onerror=\'this.src="app/image/imgDefault.png"\'/></div>' +
                                        '<div class="reserve-info-content">' +

                                        '<div class="subtitle">' + stringObj.text.description_context + '</div>' +
                                        '<div class="context">' + rObj.scm_fulldescript + '</div>' +

                                        '<div class="subtitle">' + stringObj.text.user_info + '</div>' +
                                        '<div class="context" style="display: inline-flex;"><div class="item-title">' + stringObj.text.reservationTime + '：</div><div class="reserve-time">' + reservationinfo.reservationdate + " " + reservationinfo.reservelist[nowIndex].scr_rvtime + '</div></div>' +
                                        '<br><div class="context" style="display: inline-flex;"><div class="item-title">備註留言：</div><div class="reserve-time">' + reservationinfo.reservelist[nowIndex].scg_buyermessage + '</div></div>' +

                                        '</div>' +
                                        '</div>' +

                                        '<div class="toolbar toolbar-bottom tabbar animated fadeInUp">' +
                                        '<div class="toolbar-inner">' +
                                        '<a href="#" class="confirm">' + stringObj.text.confirm + '</a>' +
                                        '</div>' +
                                        '</div>' +

                                        '</div>';
                                    myApp.popup(popupHTML);
                                    $('.popup-reserve').css('z-index', '91000');
                                    $('.toolbar .confirm').click(function() {
                                        myApp.closeModal('.popup-reserve');
                                    });

                                }
                            }

                        } else {
                            if (nowPage == 'shopcoupon-edit') {

                                var branchData = indexObj._dataStorage(branchObj.storage.branchData);

                                if (localStorage.getItem(branchObj.storage.imagePath) != 'ShopCoupon') {
                                    branchData.shopcoupon_imgs = {
                                        main: rObj.scm_mainpic,
                                        imgs: JSON.parse(rObj.scm_activepics)
                                    };
                                }

                                branchData.delete_imgs = [];
                                indexObj._dataStorage(branchObj.storage.branchData, branchData);

                                $('.shopcoupon-edit-left').click(function() {
                                    branchData.shopcoupon_imgs = {
                                        main: '',
                                        imgs: []
                                    };
                                    indexObj._dataStorage(branchObj.storage.branchData, branchData);
                                    indexObj._dataStorage(branchObj.storage.commodity_data, null);
                                });

                                if (branchData.shopcoupon_imgs.main !== '') {
                                    //$$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '" onclick="addImage(\'main-img\',\'' + branchData.shopcoupon_imgs.main + '\')"/><div class="main-lable">封面</div></div>');
                                    $$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '"/><div class="main-lable">封面</div></div>');
                                    $('.main-image-block').click(function() {
                                        if (isMobile.Android() || isMobile.iOS()) {
                                            addImage('main-img', branchData.shopcoupon_imgs.main);
                                        } else {
                                            setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=main', '');
                                        }
                                    });
                                } else {
                                    //$$('.image-block .container').html('<div class="main-image-block"><div class="image-item main" onclick="addImage(\'main-img\',\'\')">+</div><div class="main-lable">封面</div></div>');
                                    $$('.image-block .container').html('<div class="main-image-block"><div class="image-item main">+</div><div class="main-lable">封面</div></div>');
                                    $('.main-image-block').click(function() {
                                        if (isMobile.Android() || isMobile.iOS()) {
                                            addImage('main-img', '');
                                        } else {
                                            if (!commodity_data.scm_advancedescribe) {
                                                commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                            }
                                            setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=main', '');
                                        }
                                    });
                                }
                                if (branchData.shopcoupon_imgs.imgs.length > 0) {
                                    for (var i in branchData.shopcoupon_imgs.imgs) {
                                        //$$('.image-block .container').append('<div class="sub-image-block"><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" onclick="addImage(\'sub-img\',\'' + branchData.shopcoupon_imgs.imgs[i] + '\')"/></div>');
                                        $$('.image-block .container').append('<div class="sub-image-block" position=' + i + '><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" /></div>');
                                    }
                                    $('.sub-image-block').click(function() {
                                        if (isMobile.Android() || isMobile.iOS()) {
                                            addImage('sub-img', branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                                        } else {
                                            if (!commodity_data.scm_advancedescribe) {
                                                commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                            }
                                            setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=' + $(this).attr('position'), branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                                        }
                                    });
                                }
                                if (branchData.shopcoupon_imgs.main !== '' && branchData.shopcoupon_imgs.imgs.length < 5) {
                                    //$$('.image-block .container').append('<div class="image-item" onclick="addImage(\'sub-img\',\'\')">+</div>');
                                    $$('.image-block .container').append('<div class="image-item">+</div>');
                                    $('.image-item').click(function() {
                                        if (isMobile.Android() || isMobile.iOS()) {
                                            addImage('sub-img', '');
                                        } else {
                                            if (!commodity_data.scm_advancedescribe) {
                                                commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                            }
                                            setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=add', '');
                                        }
                                    });
                                }
                                if (branchData.shopcoupon_imgs.main == '' && branchData.shopcoupon_imgs.imgs.length == 0) {
                                    $('.image-item').css('padding', '0');
                                }

                                myApp.initImagesLazyLoad('.page-content');


                                if (!isMobile.Android() && !isMobile.iOS()) {
                                    //美化scroll bar
                                    $(".page-content .image-block").niceScroll({
                                        cursorcolor: "rgba(100,100,100,.9)",
                                        cursoropacitymin: 0,
                                        cursorborder: "1px solid #000"
                                    });
                                }

                                var temp = indexObj.template('templateShopCouponEdit');
                                var item;
                                var commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};

                                var scm_reservationtag, scm_bonus_giveafteruse, scm_coupon_providetype;

                                if (commodity_data.scm_title) {
                                    for (var i in commodity_data.scm_advancedescribe) {
                                        if (commodity_data.scm_advancedescribe[i].content_img) {
                                            commodity_data.scm_advancedescribe[i].img_path = stringObj.text.branch_img_path;
                                        }
                                    }
                                    commodity_data.scm_producttype = stringObj.shop.scm_producttype_array[parseInt(commodity_data.scm_producttype) - 1];
                                    commodity_data.scm_date = commodity_data.scm_startdate.replace(/-/ig, '/') + ' - ' + commodity_data.scm_enddate.replace(/-/ig, '/');
                                    scm_reservationtag = commodity_data.scm_reservationtag;
                                    scm_coupon_providetype = commodity_data.scm_coupon_providetype;
                                    scm_bonus_giveafteruse = commodity_data.scm_bonus_giveafteruse;
                                    commodity_data.scm_coupon_providetype = stringObj.shop.scm_coupon_providetype_array[parseInt(commodity_data.scm_coupon_providetype)];
                                    if (scm_reservationtag === '1') {
                                        commodity_data.scm_daily = commodity_data.scm_dailystart.substring(0, 5) + ' ~ ' + commodity_data.scm_dailyend.substring(0, 5);
                                        var scm_workhour_h = parseInt(parseFloat(commodity_data.scm_workhour) * 30 / 60);
                                        var scm_workhour_m = parseInt(parseFloat(commodity_data.scm_workhour) * 30 % 60);
                                        var scm_preparehour_h = parseInt(parseFloat(commodity_data.scm_preparehour) * 30 / 60);
                                        var scm_preparehour_m = parseInt(parseFloat(commodity_data.scm_preparehour) * 30 % 60);
                                        if (scm_workhour_h < 10) {
                                            scm_workhour_h = '0' + scm_workhour_h;
                                        }
                                        if (scm_workhour_m < 10) {
                                            scm_workhour_m = '0' + scm_workhour_m;
                                        }
                                        if (scm_preparehour_h < 10) {
                                            scm_preparehour_h = '0' + scm_preparehour_h;
                                        }
                                        if (scm_preparehour_m < 10) {
                                            scm_preparehour_m = '0' + scm_preparehour_m;
                                        }
                                        commodity_data.scm_workhour = scm_workhour_h + ' 小時 ' + scm_workhour_m + ' 分鐘';
                                        commodity_data.scm_preparehour = scm_preparehour_h + ' 小時 ' + scm_preparehour_m + ' 分鐘';
                                    }
                                    item = temp(commodity_data);
                                } else {
                                    if (rObj.scm_advancedescribe) {
                                        rObj.scm_advancedescribe = JSON.parse(rObj.scm_advancedescribe);
                                        for (var i in rObj.scm_advancedescribe) {
                                            if (rObj.scm_advancedescribe[i].content_img) {
                                                rObj.scm_advancedescribe[i].img_path = stringObj.text.branch_img_path;
                                            }
                                        }
                                    }
                                    commodity_data.scm_reservationtag = rObj.scm_reservationtag;
                                    commodity_data.scm_producttype = rObj.scm_producttype;
                                    commodity_data.scm_coupon_providetype = rObj.scm_coupon_providetype;
                                    commodity_data.scm_bonus_giveafteruse = rObj.scm_bonus_giveafteruse;
                                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);

                                    rObj.scm_producttype = stringObj.shop.scm_producttype_array[parseInt(rObj.scm_producttype) - 1];
                                    rObj.scm_date = rObj.scm_startdate.replace(/-/ig, '/') + ' - ' + rObj.scm_enddate.replace(/-/ig, '/');

                                    scm_coupon_providetype = rObj.scm_coupon_providetype;
                                    rObj.scm_coupon_providetype = stringObj.shop.scm_coupon_providetype_array[parseInt(rObj.scm_coupon_providetype)];

                                    scm_bonus_giveafteruse = rObj.scm_bonus_giveafteruse;
                                    scm_reservationtag = rObj.scm_reservationtag;
                                    if (scm_reservationtag === '1') {
                                        rObj.scm_daily = rObj.scm_dailystart.substring(0, 5) + ' ~ ' + rObj.scm_dailyend.substring(0, 5);
                                        var scm_workhour_h = parseInt(parseFloat(rObj.scm_workhour) * 30 / 60);
                                        var scm_workhour_m = parseInt(parseFloat(rObj.scm_workhour) * 30 % 60);
                                        var scm_preparehour_h = parseInt(parseFloat(rObj.scm_preparehour) * 30 / 60);
                                        var scm_preparehour_m = parseInt(parseFloat(rObj.scm_preparehour) * 30 % 60);
                                        if (scm_workhour_h < 10) {
                                            scm_workhour_h = '0' + scm_workhour_h;
                                        }
                                        if (scm_workhour_m < 10) {
                                            scm_workhour_m = '0' + scm_workhour_m;
                                        }
                                        if (scm_preparehour_h < 10) {
                                            scm_preparehour_h = '0' + scm_preparehour_h;
                                        }
                                        if (scm_preparehour_m < 10) {
                                            scm_preparehour_m = '0' + scm_preparehour_m;
                                        }
                                        rObj.scm_workhour = scm_workhour_h + ' 小時 ' + scm_workhour_m + ' 分鐘';
                                        rObj.scm_preparehour = scm_preparehour_h + ' 小時 ' + scm_preparehour_m + ' 分鐘';
                                    }
                                    item = temp(rObj);
                                }

                                $$('.shopcoupon-edit-block').html(item);
                                myApp.initImagesLazyLoad('.page-content');

                                $('#calendar-range').css('color', '#aaa');

                                //提供類型
                                var providetypeType = myApp.picker({
                                    input: '.scm_coupon_providetype',
                                    rotateEffect: false,
                                    toolbarTemplate: '<div class="toolbar">' +
                                        '<div class="toolbar-inner">' +
                                        '<div class="left">' +
                                        '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                        '</div>' +
                                        '<div class="center">' + stringObj.shop.scm_coupon_providetype + '</div>' +
                                        '<div class="right">' +
                                        '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>',
                                    formatValue: function(p, values, displayValues) {
                                        return displayValues[0];
                                    },
                                    onOpen: function(p) {
                                        if (commodity_data.scm_coupon_providetype) {
                                            p.setValue([stringObj.shop.scm_coupon_providetype_array.indexOf(commodity_data.scm_coupon_providetype)]);
                                        }
                                    },
                                    onClose: function(p) {
                                        commodity_data.scm_coupon_providetype = p.cols[0].value;
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                        if (p.cols[0].value === '1') {
                                            $('.scm_bonus_payamount').css('display', 'inherit');
                                            $('#price').val(0);
                                            $('.price').css('display', 'none');
                                        } else {
                                            $('.scm_bonus_payamount').css('display', 'none');
                                            $('#price').val('');
                                            $('.price').css('display', 'inherit');
                                        }
                                    },
                                    cols: [{
                                        textAlign: 'center',
                                        values: [0, 1],
                                        width: '100%',
                                        displayValues: stringObj.shop.scm_coupon_providetype_array
                                    }]
                                });

                                //可預約
                                if (scm_reservationtag == '1') {
                                    $('.reservation-checkbox').prop('checked', true);

                                    $('#calendar-range').css('color', '#fff');

                                    $('.shopcoupon-time').css('display', 'inherit');
                                    $('.weekend-radio').css('display', 'inherit');
                                    $('.require-time').css('display', 'inherit');
                                    $('.prepare-time').css('display', 'inherit');
                                    $('.reserve-num').css('display', 'inherit');

                                    if (rObj.scm_includeweekend == '1') {
                                        $('.includ').prop('checked', true);
                                    } else if (rObj.scm_includeweekend == '0') {
                                        $('.not_included').prop('checked', true);
                                    }


                                    //活動期間
                                    var calendarRange = myApp.calendar({
                                        input: '#calendar-range',
                                        dateFormat: 'yyyy/mm/dd',
                                        rangePicker: true,
                                        monthNames: stringObj.text.monthNames
                                    });

                                    $('#calendar-range').change(function() {
                                        if ($(this).val().length == 23) {
                                            calendarRange.close();
                                        }
                                    });

                                    //活動每日時間
                                    var pickerTime = myApp.picker({
                                        input: '.page:not(.cached) #shopcoupon-time',
                                        rotateEffect: false,
                                        toolbarTemplate: '<div class="toolbar">' +
                                            '<div class="toolbar-inner">' +
                                            '<div class="left">' +
                                            '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                            '</div>' +
                                            '<div class="center">活動每日時間</div>' +
                                            '<div class="right">' +
                                            '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                            '</div>' +
                                            '</div>' +
                                            '</div>',
                                        formatValue: function(p, values, displayValues) {
                                            return values[0] + ':' + values[1] + ' ~ ' + values[2] + ':' + values[3];
                                        },
                                        cols: [
                                            // Hours
                                            {
                                                textAlign: 'center',
                                                values: (function() {
                                                    var arr = [];
                                                    for (var i = 0; i <= 23; i++) {
                                                        arr.push(i < 10 ? '0' + i : i);
                                                    }
                                                    return arr;
                                                })(),
                                            },
                                            // Divider
                                            {
                                                textAlign: 'center',
                                                divider: true,
                                                content: ':'
                                            },
                                            // Minutes
                                            {
                                                values: (function() {
                                                    var arr = ['00', '30'];
                                                    return arr;
                                                })(),
                                            },
                                            // Divider
                                            {
                                                textAlign: 'center',
                                                divider: true,
                                                content: ' ~ '
                                            },
                                            // Hours
                                            {
                                                textAlign: 'center',
                                                values: (function() {
                                                    var arr = [];
                                                    for (var i = 0; i <= 23; i++) {
                                                        arr.push(i < 10 ? '0' + i : i);
                                                    }
                                                    return arr;
                                                })(),
                                            },
                                            // Divider
                                            {
                                                textAlign: 'center',
                                                divider: true,
                                                content: ':'
                                            },
                                            // Minutes
                                            {
                                                textAlign: 'center',
                                                values: (function() {
                                                    var arr = ['00', '30'];
                                                    return arr;
                                                })(),
                                            }

                                        ]
                                    });

                                    //作業工時
                                    var pickerRequireTime = myApp.picker({
                                        input: '.page:not(.cached) #require-time',
                                        rotateEffect: false,
                                        toolbarTemplate: '<div class="toolbar">' +
                                            '<div class="toolbar-inner">' +
                                            '<div class="left">' +
                                            '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                            '</div>' +
                                            '<div class="center">作業工時</div>' +
                                            '<div class="right">' +
                                            '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                            '</div>' +
                                            '</div>' +
                                            '</div>',
                                        formatValue: function(p, values, displayValues) {
                                            return values[0] + ' 小時 ' + values[1] + ' 分鐘 ';
                                        },
                                        cols: [
                                            // Hours
                                            {
                                                textAlign: 'center',
                                                values: (function() {
                                                    var arr = [];
                                                    for (var i = 0; i <= 23; i++) {
                                                        arr.push(i < 10 ? '0' + i : i);
                                                    }
                                                    return arr;
                                                })(),
                                            },
                                            // Divider
                                            {
                                                textAlign: 'center',
                                                divider: true,
                                                content: ' 小時 '
                                            },
                                            // Minutes
                                            {
                                                values: (function() {
                                                    var arr = ['00', '30'];
                                                    return arr;
                                                })(),
                                            },
                                            // Divider
                                            {
                                                textAlign: 'center',
                                                divider: true,
                                                content: ' 分鐘 '
                                            }

                                        ]
                                    });


                                    //準備工時
                                    var pickerPrepareTime = myApp.picker({
                                        input: '.page:not(.cached) #prepare-time',
                                        rotateEffect: false,
                                        toolbarTemplate: '<div class="toolbar">' +
                                            '<div class="toolbar-inner">' +
                                            '<div class="left">' +
                                            '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                            '</div>' +
                                            '<div class="center">準備工時</div>' +
                                            '<div class="right">' +
                                            '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                            '</div>' +
                                            '</div>' +
                                            '</div>',
                                        formatValue: function(p, values, displayValues) {
                                            return values[0] + ' 小時 ' + values[1] + ' 分鐘 ';
                                        },
                                        cols: [
                                            // Hours
                                            {
                                                textAlign: 'center',
                                                values: (function() {
                                                    var arr = [];
                                                    for (var i = 0; i <= 23; i++) {
                                                        arr.push(i < 10 ? '0' + i : i);
                                                    }
                                                    return arr;
                                                })(),
                                            },
                                            // Divider
                                            {
                                                textAlign: 'center',
                                                divider: true,
                                                content: ' 小時 '
                                            },
                                            // Minutes
                                            {
                                                values: (function() {
                                                    var arr = ['00', '30'];
                                                    return arr;
                                                })(),
                                            },
                                            // Divider
                                            {
                                                textAlign: 'center',
                                                divider: true,
                                                content: ' 分鐘 '
                                            }

                                        ]
                                    });


                                    //同時段允許預約數
                                    $$('.reserve-num').on('click', function() {
                                        myApp.alert('<input class="input-value" type="number" placeholder="數目">', '同時段允許預約數');

                                        $('.input-value').val($('#reserve-num').val());

                                        $('.input-value').focus();

                                        $('.modal-button').click(function() {
                                            $('#reserve-num').val($('.input-value').val());
                                        });

                                        if ($('#limit').val() != '') {
                                            //監聽人數輸入事件
                                            $(".input-value").on("input", function(e) {
                                                //Max
                                                if ($(this).val() > parseInt($('#limit').val())) {
                                                    $(this).val(parseInt($('#limit').val()));
                                                }
                                                //Min
                                                if ($(this).val() < 0) {
                                                    $(this).val(1);
                                                }
                                                if ($(this).val() == 0) {
                                                    $(this).val('');
                                                }
                                            });
                                        }
                                    });

                                }

                                if (commodity_data.scm_bonus_giveafteruse === '1') {
                                    $('.scm_bonus_giveamount').css('display', 'inherit');
                                    $('.giveafteruse-checkbox').prop('checked', true);
                                } else {
                                    $('#scm_bonus_giveamount').val('');
                                }

                                if (scm_coupon_providetype === '1') {
                                    $('.scm_bonus_payamount').css('display', 'inherit');
                                    $('#price').val(0);
                                    $('.price').css('display', 'none');
                                }


                                $('.giveafteruse-checkbox').change(function() {
                                    if ($(this).is(':checked')) {
                                        scm_bonus_giveafteruse = '1';
                                        commodity_data.scm_bonus_giveafteruse = '1';
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                        $('.scm_bonus_giveamount').css('display', 'inherit');
                                    } else {
                                        scm_bonus_giveafteruse = '0';
                                        commodity_data.scm_bonus_giveafteruse = '0';
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                        $('.scm_bonus_giveamount').css('display', 'none');
                                    }
                                });

                                //商品名稱
                                $$('.shopcoupon-name').on('click', function() {
                                    myApp.alert('<input class="input-value" type="text" placeholder="名稱">', '商品名稱');

                                    $('.input-value').val($('#shopcoupon-name').val());

                                    $('.input-value').focus();

                                    $('.modal-button').click(function() {
                                        $('#shopcoupon-name').val($('.input-value').val());
                                    });
                                });

                                //活動說明
                                $$('.scm_fulldescript').on('click', function() {
                                    myApp.alert('<textarea class="info resizable" placeholder="內容" rows="9"></textarea>', '活動說明');

                                    $('.info').val($('#scm_fulldescript').val());

                                    $('textarea.info').focus();

                                    $('.modal-button').click(function() {
                                        $('#scm_fulldescript').val($('.info').val());
                                    });
                                });

                                //特點扣除
                                $$('.scm_bonus_payamount').on('click', function() {
                                    myApp.alert('<input class="input-value" type="number" min="1" placeholder="數額（1~9999）" onkeydown="input_limit(this, 4);" onkeyup="input_limit(this, 4);">', '特點扣除');

                                    $('.input-value').val($('#scm_bonus_payamount').val());

                                    $('.input-value').focus();

                                    $('.modal-button').click(function() {
                                        $('#scm_bonus_payamount').val($('.input-value').val());
                                    });
                                });

                                //特點贈與
                                $$('.scm_bonus_giveamount').on('click', function() {
                                    myApp.alert('<input class="input-value" type="number" min="1" placeholder="數額（1~9999）" onkeydown="input_limit(this, 4);" onkeyup="input_limit(this, 4);">', '特點贈與');

                                    $('.input-value').val($('#scm_bonus_giveamount').val());

                                    $('.input-value').focus();

                                    $('.modal-button').click(function() {
                                        $('#scm_bonus_giveamount').val($('.input-value').val());
                                    });
                                });

                                //活動費用
                                $$('.price').on('click', function() {
                                    myApp.alert('<input class="input-value" type="number" min="0" placeholder="金額" onkeydown="input_limit(this, 9);" onkeyup="input_limit(this, 9);">', '費用');

                                    $('.input-value').val($('#price').val());

                                    $('.input-value').focus();

                                    $('.modal-button').click(function() {
                                        $('#price').val($('.input-value').val());
                                    });
                                });

                                //索取張數限制
                                $$('.limit').on('click', function() {
                                    myApp.alert('<input class="input-value" type="number" placeholder="張數" onkeydown="input_limit(this, 9);" onkeyup="input_limit(this, 9);">', '索取張數限制');

                                    $('.input-value').val($('#limit').val());

                                    $('.input-value').focus();

                                    $('.modal-button').click(function() {
                                        $('#limit').val($('.input-value').val());
                                    });
                                });

                                //銷帳單號
                                $$('.scm_balanceno').on('click', function() {
                                    myApp.alert('<input class="input-value" type="text" placeholder="單號">', '銷帳單號');

                                    $('.input-value').val($('#scm_balanceno').val());

                                    $('.input-value').focus();

                                    $('.modal-button').click(function() {
                                        $('#scm_balanceno').val($('.input-value').val());
                                    });
                                });

                                var scm_producttype;

                                //商品型式
                                var scm_producttype_picker = myApp.picker({
                                    input: '.scm_producttype',
                                    rotateEffect: false,
                                    toolbarTemplate: '<div class="toolbar">' +
                                        '<div class="toolbar-inner">' +
                                        '<div class="left">' +
                                        '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                        '</div>' +
                                        '<div class="center">' + stringObj.shop.scm_producttype + '</div>' +
                                        '<div class="right">' +
                                        '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>',
                                    formatValue: function(p, values, displayValues) {
                                        return displayValues[0];
                                    },
                                    onOpen: function(p) {
                                        if (rObj.scm_producttype) {
                                            p.setValue([stringObj.shop.scm_producttype_array.indexOf(rObj.scm_producttype) + 1]);
                                        }
                                    },
                                    cols: [{
                                        textAlign: 'center',
                                        values: [1, 2],
                                        displayValues: stringObj.shop.scm_producttype_array,
                                        onChange: function(picker, carmodel) {
                                            commodity_data.scm_producttype = picker.cols[0].value;
                                            scm_producttype = picker.cols[0].value;
                                        }
                                    }]
                                });


                                if (localStorage.getItem('scrollTop')) {
                                    $('.shopcoupon-edit-content').scrollTop(parseFloat(localStorage.getItem('scrollTop')));
                                    localStorage.removeItem('scrollTop');
                                }

                                //向上移動
                                $('.move-up').click(function(event) {
                                    if ($(this).parents('li').index() !== 0) {
                                        commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
                                        if (!commodity_data.scm_advancedescribe) {
                                            commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                        }
                                        commodity_data.scm_advancedescribe.splice($(this).parents('li').index() - 1, 0, commodity_data.scm_advancedescribe.splice($(this).parents('li').index(), 1)[0]);
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                        $(this).parents('li').insertBefore('.commodity-details-block.sortable li:nth-child(' + ($(this).parents('li').index()) + ')');
                                    }
                                });
                                //向下移動
                                $('.move-down').click(function(event) {
                                    commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
                                    if (!commodity_data.scm_advancedescribe) {
                                        commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                        commodity_data.scm_advancedescribe.splice($(this).parents('li').index() + 1, 0, commodity_data.scm_advancedescribe.splice($(this).parents('li').index(), 1)[0]);
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                        $(this).parents('li').insertAfter('.commodity-details-block.sortable li:nth-child(' + ($(this).parents('li').index() + 2) + ')');
                                    } else {
                                        if ($(this).parents('li').index() < commodity_data.scm_advancedescribe.length - 1) {
                                            commodity_data.scm_advancedescribe.splice($(this).parents('li').index() + 1, 0, commodity_data.scm_advancedescribe.splice($(this).parents('li').index(), 1)[0]);
                                            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                            $(this).parents('li').insertAfter('.commodity-details-block.sortable li:nth-child(' + ($(this).parents('li').index() + 2) + ')');
                                        }
                                    }
                                });

                                commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
                                $('.details-img').click(function() {
                                    if (!commodity_data.scm_advancedescribe) {
                                        commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                    }
                                    if (Cookies.get('app_version') !== undefined) {
                                        addImage('shopcoupon', commodity_data.scm_advancedescribe[$(this).parents('li').index()].content_img);
                                    } else {
                                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=details&position=' + $(this).parents('li').index(), commodity_data.scm_advancedescribe[$(this).parents('li').index()].content_img);
                                    }
                                });
                                $('.details-text').parents('.item-inner').click(function() {
                                    if (!commodity_data.scm_advancedescribe) {
                                        commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                    }
                                    var position = $(this).parents('li').index();
                                    var details_text = $(this).find('.details-text');
                                    myApp.modal({
                                        title: '文字內容',
                                        text: '<textarea class="info resizable" placeholder="內容" rows="8"></textarea>',
                                        buttons: [{
                                            text: stringObj.text.cancel,
                                            onClick: function() {

                                            }
                                        }, {
                                            text: stringObj.text._clear,
                                            onClick: function() {
                                                commodity_data.scm_advancedescribe.splice(position, 1);
                                                details_text.parents('.commodity-details-item').remove();
                                                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                            }
                                        }, {
                                            text: stringObj.text.edit,
                                            onClick: function() {
                                                if (!commodity_data.scm_advancedescribe) {
                                                    commodity_data.scm_advancedescribe = rObj.scm_advancedescribe;
                                                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                                }
                                                commodity_data.scm_advancedescribe[position].content_text = $('textarea.info').val();
                                                if ($('textarea.info').val()) {
                                                    details_text.text($('textarea.info').val());
                                                } else {
                                                    commodity_data.scm_advancedescribe.splice(position, 1);
                                                    details_text.parents('.commodity-details-item').remove();
                                                }
                                                indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                            }
                                        }]
                                    });

                                    $('textarea.info').val(details_text.text());

                                    $('textarea.info').focus();

                                });


                                $('.add-details-image').unbind('click');
                                $('.add-details-text').unbind('click');
                                $('.add-details-image').click(function() {
                                    if (!commodity_data.scm_advancedescribe) {
                                        commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                    }
                                    if (Cookies.get('app_version') !== undefined) {
                                        addImage('shopcoupon', '');
                                    } else {
                                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=details&position=add', '');
                                    }
                                });
                                $('.add-details-text').click(function() {
                                    myApp.modal({
                                        title: '文字內容',
                                        text: '<textarea class="info resizable" placeholder="內容" rows="8"></textarea>',
                                        buttons: [{
                                            text: stringObj.text.cancel,
                                            onClick: function() {}
                                        }, {
                                            text: stringObj.text.add,
                                            onClick: function() {
                                                if (!commodity_data.scm_advancedescribe) {
                                                    commodity_data.scm_advancedescribe = rObj.scm_advancedescribe || [];
                                                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                                }
                                                if ($.trim($('textarea.info').val()) !== '') {
                                                    commodity_data.scm_advancedescribe.push({
                                                        content_text: $('textarea.info').val(),
                                                        content_img: ''
                                                    });
                                                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                                                    localStorage.setItem('scrollTop', $('.shopcoupon-edit-content').scrollTop() + 70);
                                                    saveData();
                                                    mainView.router.load({
                                                        url: window.location.href.substring(window.location.href.indexOf("#!/") + 3),
                                                        reload: true
                                                    });
                                                }
                                            }
                                        }]
                                    });

                                    $('textarea.info').focus();

                                });



                                //不能修改預約狀態checkbox
                                $('.reservation-checkbox').attr('disabled', 'disabled');

                                $('.edit').unbind('click');
                                $('.edit').click(function() {

                                    if (scm_producttype_picker.value) {
                                        scm_producttype = scm_producttype_picker.value[0];
                                    } else if (commodity_data.scm_producttype) {
                                        scm_producttype = commodity_data.scm_producttype;
                                    } else {
                                        scm_producttype = stringObj.shop.scm_producttype_array.indexOf(rObj.scm_producttype) + 1;
                                    }

                                    if (commodity_data.scm_advancedescribe) {
                                        rObj.scm_advancedescribe = commodity_data.scm_advancedescribe;
                                    }

                                    $('.shopcoupon-name').removeClass('lengthError');
                                    $('.scm_fulldescript').removeClass('lengthError');
                                    $('.scm_balanceno').removeClass('lengthError');
                                    $('.scm_bonus_payamount').removeClass('lengthError');
                                    $('.scm_bonus_giveamount').removeClass('lengthError');

                                    $('.price').removeClass('spacesError');
                                    $('.limit').removeClass('spacesError');
                                    $('.reserve-num').removeClass('spacesError');
                                    $('.scm_bonus_payamount').removeClass('spacesError');
                                    $('.scm_bonus_giveamount').removeClass('spacesError');

                                    $('.shopcoupon-name').removeClass('nullError');
                                    $('.scm_producttype-block').removeClass('nullError');
                                    $('.scm_fulldescript').removeClass('nullError');
                                    $('.scm_category').removeClass('nullError');
                                    $('.price').removeClass('nullError');
                                    $('.scm_date').removeClass('nullError');
                                    $('.limit').removeClass('nullError');
                                    $('.shopcoupon-time').removeClass('nullError');
                                    $('.require-time').removeClass('nullError');
                                    $('.prepare-time').removeClass('nullError');
                                    $('.reserve-num').removeClass('nullError');
                                    $('.scm_coupon_providetype-block').removeClass('nullError');
                                    $('.scm_bonus_payamount').removeClass('nullError');
                                    $('.scm_bonus_giveamount').removeClass('nullError');

                                    $('.scm_date').removeClass('formatError');
                                    $('.noSetMainImg').css('display', 'none');

                                    var isError = false;


                                    //長度判斷
                                    if ($('#shopcoupon-name').val().length > 40) {
                                        $('.shopcoupon-name').addClass('lengthError');
                                        isError = true;
                                    }

                                    if ($('#scm_fulldescript').val().length > 500) {
                                        $('.scm_fulldescript').addClass('lengthError');
                                        isError = true;
                                    }

                                    if ($('#scm_balanceno').val().length > 50) {
                                        $('.scm_balanceno').addClass('lengthError');
                                        isError = true;
                                    }

                                    if ($('#scm_bonus_payamount').val().length > 4) {
                                        $('.scm_bonus_payamount').addClass('lengthError');
                                        isError = true;
                                    }

                                    if ($('#scm_bonus_giveamount').val().length > 4) {
                                        $('.scm_bonus_giveamount').addClass('lengthError');
                                        isError = true;
                                    }

                                    //空白字元判斷
                                    if ($('#price').val().indexOf(" ") !== -1) {
                                        $('.branch-name').addClass('spacesError');
                                        isError = true;
                                    }
                                    if ($('#limit').val().indexOf(" ") !== -1) {
                                        $('.branch-tel').addClass('spacesError');
                                        isError = true;
                                    }
                                    if ($('#scm_bonus_payamount').val().indexOf(" ") !== -1) {
                                        $('.scm_bonus_payamount').addClass('spacesError');
                                        isError = true;
                                    }
                                    if ($('#scm_bonus_giveamount').val().indexOf(" ") !== -1) {
                                        $('.scm_bonus_giveamount').addClass('spacesError');
                                        isError = true;
                                    }


                                    //填寫判斷
                                    if (branchData.shopcoupon_imgs.main === '') {
                                        $('.noSetMainImg').css('display', 'inherit');
                                        isError = true;
                                    }
                                    if ($.trim($('#shopcoupon-name').val()) === "") {
                                        $('.shopcoupon-name').addClass('nullError');
                                        isError = true;
                                    }
                                    // if ($.trim($('.scm_producttype').val()) === "") {
                                    //     $('.scm_producttype-block').addClass('nullError');
                                    //     isError = true;
                                    // }
                                    if ($.trim($('#scm_fulldescript').val()) === "") {
                                        $('.scm_fulldescript').addClass('nullError');
                                        isError = true;
                                    }
                                    // if ($.trim($('#shopcoupon-type').val()) === "") {
                                    //     $('.scm_category').addClass('nullError');
                                    //     isError = true;
                                    // }
                                    if ($.trim($('#price').val()) === "") {
                                        $('.price').addClass('nullError');
                                        isError = true;
                                    }
                                    if ($.trim($('#calendar-range').val()) === "") {
                                        $('.scm_date').addClass('nullError');
                                        isError = true;
                                    }
                                    if ($.trim($('#limit').val()) === "") {
                                        $('.limit').addClass('nullError');
                                        isError = true;
                                    }
                                    if (commodity_data.scm_coupon_providetype === '1') {
                                        if ($.trim($('#scm_bonus_payamount').val()) === "" || parseInt($.trim($('#scm_bonus_payamount').val())) <= 0) {
                                            $('.scm_bonus_payamount').addClass('nullError');
                                            isError = true;
                                        }
                                    } else {
                                        if ($.trim($('#price').val()) === "" || parseInt($.trim($('#price').val())) <= 0) {
                                            $('.price').addClass('nullError');
                                            isError = true;
                                        }
                                    }
                                    if (commodity_data.scm_bonus_giveafteruse === '1') {
                                        if ($.trim($('#scm_bonus_giveamount').val()) === "" || parseInt($.trim($('#scm_bonus_giveamount').val())) <= 0) {
                                            $('.scm_bonus_giveamount').addClass('nullError');
                                            isError = true;
                                        }
                                    }


                                    if (scm_reservationtag == '1') {
                                        //空白字元判斷
                                        if ($('#reserve-num').val().indexOf(" ") !== -1) {
                                            $('.branch-address').addClass('spacesError');
                                            isError = true;
                                        }
                                        //填寫判斷
                                        if ($.trim($('#shopcoupon-time').val()) === "") {
                                            $('.shopcoupon-time').addClass('nullError');
                                            isError = true;
                                        }
                                        if ($.trim($('#require-time').val()) === "") {
                                            $('.require-time').addClass('nullError');
                                            isError = true;
                                        }
                                        if ($.trim($('#prepare-time').val()) === "") {
                                            $('.prepare-time').addClass('nullError');
                                            isError = true;
                                        }
                                        if ($.trim($('#reserve-num').val()) === "") {
                                            $('.reserve-num').addClass('nullError');
                                            isError = true;
                                        }
                                    }

                                    //格式判斷
                                    if ($('#calendar-range').val().length < 23) {
                                        $('.scm_date').addClass('formatError');
                                        isError = true;
                                    }


                                    if (isError) {
                                        myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                                        if (browser_width < 992) {
                                            $('.toast-container').css('width', '40%');
                                            $('.toast-container').css('left', '45%');
                                        } else {
                                            $('.toast-container').css('width', '15%');
                                            $('.toast-container').css('left', '47.5%');
                                        }
                                    }

                                    branchData = indexObj._dataStorage(branchObj.storage.branchData);


                                    //將主圖路徑改為正式資料夾路徑
                                    if (branchData.shopcoupon_imgs.main.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                                        branchData.shopcoupon_imgs.main = branchData.shopcoupon_imgs.main.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                                        indexObj._dataStorage(branchObj.storage.branchData, branchData);
                                    }

                                    //將子圖路徑改為正式資料夾路徑
                                    for (var i in branchData.shopcoupon_imgs.imgs) {
                                        if (branchData.shopcoupon_imgs.imgs[i].match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                                            branchData.shopcoupon_imgs.imgs.splice(i, 1, branchData.shopcoupon_imgs.imgs[i].substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length));
                                            indexObj._dataStorage(branchObj.storage.branchData, branchData);
                                        }
                                    }


                                    var mainSg = indexObj._dataCookies(indexObj._storage.main);
                                    branchData = indexObj._dataStorage(branchObj.storage.branchData);
                                    var data = {
                                        modacc: stringObj.shop.moduleaccount,
                                        modvrf: Cookies.get('modvrf'),
                                        sat: mainSg.sat,
                                        sd_id: rObj.sd_id,
                                        scm_id: rObj.scm_id,
                                        managetype: '2',
                                        scm_title: $('#shopcoupon-name').val(),
                                        scm_producttype: scm_producttype,
                                        scm_fulldescript: $('#scm_fulldescript').val(),
                                        scm_category: 0,
                                        scm_mainpic: branchData.shopcoupon_imgs.main,
                                        scm_activepics: JSON.stringify(branchData.shopcoupon_imgs.imgs),
                                        scm_price: $('#price').val(),
                                        scm_startdate: $('#calendar-range').val().substring(0, 10),
                                        scm_enddate: $('#calendar-range').val().substring(13),
                                        scm_reservationtag: scm_reservationtag,
                                        scm_dailystart: $('#shopcoupon-time').val().substring(0, 5),
                                        scm_dailyend: $('#shopcoupon-time').val().substring(8),
                                        scm_workhour: ((parseInt($('#require-time').val().substring(0, 2)) * 60) + parseInt($('#require-time').val().substring(6, 8))) / 30,
                                        scm_preparehour: ((parseInt($('#prepare-time').val().substring(0, 2)) * 60) + parseInt($('#prepare-time').val().substring(6, 8))) / 30,
                                        scm_includeweekend: $("input[name='weekend-radio']:checked").val(),
                                        scm_reservationavailable: $('#reserve-num').val(),
                                        scm_poststatus: rObj.scm_poststatus,
                                        scm_member_limit: $('#limit').val(),
                                        scm_balanceno: $('#scm_balanceno').val(),
                                        scm_coupon_providetype: stringObj.shop.scm_coupon_providetype_array.indexOf($('.scm_coupon_providetype').val()),
                                        scm_bonus_payamount: $('#scm_bonus_payamount').val(),
                                        scm_bonus_giveafteruse: scm_bonus_giveafteruse,
                                        scm_bonus_giveamount: $('#scm_bonus_giveamount').val(),
                                        scm_advancedescribe: JSON.stringify(rObj.scm_advancedescribe),
                                        md_securitycode: ''
                                    };
                                    if ($('#scm_bonus_payamount').val() === '') {
                                        data.scm_bonus_payamount = 0;
                                    }
                                    if ($('#scm_bonus_giveamount').val() === '') {
                                        data.scm_bonus_giveamount = 0;
                                    }

                                    if (!isError) {
                                        var managetype = 0;
                                        if (scm_reservationtag == '1') {
                                            if ($('#shopcoupon-name').val() !== rObj.scm_title) {
                                                managetype += 2;
                                            } else if ($('#scm_fulldescript').val() !== rObj.scm_fulldescript) {
                                                managetype += 2;
                                            } else if ($('#price').val() !== rObj.scm_price) {
                                                managetype += 2;
                                            } else if ($('#limit').val() !== rObj.scm_member_limit) {
                                                managetype += 2;
                                            } else if ($('#scm_balanceno').val() !== rObj.scm_balanceno) {
                                                managetype += 2;
                                            } else if ($('#scm_fulldescript').val() !== rObj.scm_fulldescript) {
                                                managetype += 2;
                                            } else if (scm_producttype !== stringObj.shop.scm_producttype_array.indexOf(rObj.scm_producttype) + 1) {
                                                managetype += 2;
                                            } else if (branchData.shopcoupon_imgs.main !== rObj.scm_mainpic) {
                                                managetype += 2;
                                            } else if (JSON.stringify(branchData.shopcoupon_imgs.imgs) !== rObj.scm_activepics) {
                                                managetype += 2;
                                            } else {
                                                managetype += 2;
                                            }

                                            if ($('#calendar-range').val().substring(0, 10) != rObj.scm_startdate.replace(/-/ig, '/')) {
                                                managetype += 3;
                                            } else if ($('#calendar-range').val().substring(13) != rObj.scm_enddate.replace(/-/ig, '/')) {
                                                managetype += 3;
                                            } else if ($('#shopcoupon-time').val().substring(0, 5) != rObj.sd_dailystart.substring(0, 5)) {
                                                managetype += 3;
                                            } else if ($('#shopcoupon-time').val().substring(8) != rObj.sd_dailyend.substring(0, 5)) {
                                                managetype += 3;
                                            } else if ($('#scm_fulldescript').val() != rObj.scm_fulldescript) {
                                                managetype += 3;
                                            } else if ((((parseInt($('#require-time').val().substring(0, 2)) * 60) + parseInt($('#require-time').val().substring(6, 8))) / 30) != rObj.scm_workhour) {
                                                managetype += 3;
                                            } else if ((((parseInt($('#prepare-time').val().substring(0, 2)) * 60) + parseInt($('#prepare-time').val().substring(6, 8))) / 30) != rObj.scm_preparehour) {
                                                managetype += 3;
                                            } else if ($('#reserve-num').val() != rObj.scm_reservationavailable) {
                                                managetype += 3;
                                            } else if ($("input[name='weekend-radio']:checked").val() != rObj.scm_includeweekend) {
                                                managetype += 3;
                                            }


                                            if (managetype === 2) {
                                                branchObj.shopcouponmanager(data);
                                            } else if (managetype === 3) {
                                                data.managetype = '3';
                                                branchObj.shopcouponmanager(data);
                                            } else if (managetype === 5) {
                                                data.managetype = '2';
                                                data.scm_coupon_usetype = 0;
                                                //data.scm_bonus_modify_type = 0;
                                                //data.scm_bonus_amount = 0;
                                                indexObj._wcfget({
                                                    url: branchObj.dataUrl.shopcouponmanager,
                                                    para: data,
                                                    success: function(r) {
                                                        //console.log(JSON.stringify(r));
                                                        if (r.shopcouponmanagerresult) {
                                                            var rObj = JSON.parse(JSON.stringify(r.shopcouponmanagerresult));
                                                            if (rObj.message_no === "010907002") {

                                                            } else {
                                                                stringObj.return_header(rObj.message_no);
                                                                if (_tip) {
                                                                    myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                                                    _tip = null;
                                                                }
                                                            }
                                                        }
                                                    },
                                                    error: function(r) {
                                                        noNetwork();
                                                    }
                                                });
                                                data.managetype = '3';
                                                branchObj.shopcouponmanager(data);
                                            } else {
                                                myApp.toast('無任何修改', '', {}).show();
                                            }
                                            //console.log(managetype);

                                        } else {
                                            if ($('#shopcoupon-name').val() !== rObj.scm_title) {
                                                managetype = 2;
                                            } else if ($('#scm_fulldescript').val() !== rObj.scm_fulldescript) {
                                                managetype = 2;
                                            } else if ($('#price').val() !== rObj.scm_price) {
                                                managetype = 2;
                                            } else if ($('#limit').val() !== rObj.scm_member_limit) {
                                                managetype = 2;
                                            } else if ($('#scm_balanceno').val() !== rObj.scm_balanceno) {
                                                managetype = 2;
                                            } else if ($('#scm_fulldescript').val() !== rObj.scm_fulldescript) {
                                                managetype = 2;
                                            } else if (scm_producttype !== stringObj.shop.scm_producttype_array.indexOf(rObj.scm_producttype) + 1) {
                                                managetype = 2;
                                            } else if (branchData.shopcoupon_imgs.main !== rObj.scm_mainpic) {
                                                managetype = 2;
                                            } else if (JSON.stringify(branchData.shopcoupon_imgs.imgs) !== rObj.scm_activepics) {
                                                managetype = 2;
                                            } else {
                                                managetype = 2;
                                            }

                                            if (managetype == 2) {
                                                branchObj.shopcouponmanager(data);
                                            } else {
                                                branchObj.shopcouponmanager(data);
                                                //myApp.toast('無任何修改', '', {}).show();
                                            }
                                            //console.log(managetype);
                                        }

                                    }


                                });



                            }
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });


    },
    //商家活動資訊初始化
    shopCouponInfoInit: function(page) {

        var q = page.query;

        if (q.scm_title) {
            branchObj.shopCouponContentGet(q.scm_id, q.type, q.scg_id, q.scm_title, q.scm_enddate);
        } else if (q.type) {
            branchObj.shopCouponContentGet(q.scm_id, q.type, q.scg_id, '', '');
        } else {
            branchObj.shopCouponContentGet(q.scm_id, '0', '', '', '');
        }


    },
    //加入標示點(Marker)
    addMarker: function(location, title, shopcoupon_map) {

        var marker = new google.maps.Marker({
            position: location,
            title: title,
            map: shopcoupon_map
        });

        var infowindow = new google.maps.InfoWindow(); //地圖上的訊息視窗
        infowindow.setContent('<b style="color:#000;">' + title + '</b>'); //設定訊息內容

        infowindow.open(shopcoupon_map, marker); //顯示訊息視窗

        google.maps.event.addListener(marker, 'click', function() { //監聽地圖點擊,此為標示點點擊事件
            infowindow.open(shopcoupon_map, marker); //顯示訊息視窗
        });
    },
    //商家活動修改初始化
    shopCouponEditInit: function(page) {

        var q = page.query;

        branchObj.shopCouponContentGet(q.scm_id, 'edit', '', '', '');

        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 2000);

    },
    //商家活動索取
    shopCouponGet: function(scm_id, from, md_securitycode) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        var shop_buy_data = indexObj._dataStorage('shop_buy_data') || {};
        var shop_item = indexObj._dataStorage('shop_item') || {};
        if (shop_item.coupon_md_id === undefined) {
            shop_item.coupon_md_id = '';
        }
        if (shop_buy_data.moc_id === undefined || shop_buy_data.moc_id === '' || shop_buy_data.moc_id === null) {
            shop_buy_data.moc_id = '';
        }
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponget,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                scm_id: scm_id,
                moc_id: shop_buy_data.moc_id,
                scg_paymentstatus: shop_buy_data.scg_paymentstatus,
                scg_buyername: shop_buy_data.scg_buyername,
                scg_buyermessage: shop_buy_data.scg_buyermessage,
                scg_buyamount: shop_buy_data.scg_buyamount,
                scg_totalamount: parseFloat(shop_buy_data.scl_sum) * parseFloat(shop_buy_data.scg_buyamount),
                sharer_id: shop_item.coupon_md_id,
                scg_gp_subtract_amount: shop_buy_data.scg_gp_subtract_amount,
                scg_subtract_price: shop_buy_data.scg_subtract_price,
                md_securitycode: md_securitycode,
                scg_identifier: shop_buy_data.identifier,
                scg_addr: shop_buy_data.send_addr,
                scg_contact_phone: shop_buy_data.scg_buyermobile,
                scg_contact_email: shop_buy_data.scg_buyeremail,
                scg_tax_title: shop_buy_data.tax_title
            },
            success: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopcoupongetresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcoupongetresult));
                    if (rObj.message_no === "000000000") {

                        Cookies.remove('coupon_scm_id');
                        Cookies.remove('coupon_md_id');

                        localStorage.setItem('scg_id', rObj.scg_id);

                        var shop_item = indexObj._dataStorage('shop_item') || {};

                        switch (from) {
                            case 'coupon':
                                if (shop_item.scm_coupon_providetype === '1') {
                                    shop_item.errcode = '00';
                                    paySuccess(JSON.stringify(shop_item));
                                } else {
                                    branchObj.createpaymentflow(rObj.scg_id);
                                }
                                //                                mainView.router.load({
                                //                                    url: 'pay-info?scm_id=' + scm_id + '&scg_id=' + rObj.scg_id + '&from=coupon'
                                //                                });
                                break;
                            case 'reservation':
                                var reservationbook = indexObj._dataStorage(indexObj._storage.reservationbook) || {};
                                branchObj.shopcouponreservationbook(scm_id, rObj.scg_id, reservationbook.scr_serno, reservationbook.booktype);

                                //                                mainView.router.load({
                                //                                    url: 'shop/shopcoupon-reservation?scm_id=' + scm_id + '&scm_title=' + shop_item.scm_title + '&scm_enddate=' + localStorage.getItem('scm_enddate') + '&scg_id=' + rObj.scg_id + '&booktype=0'
                                //                                });
                                //                                localStorage.removeItem('scm_enddate');
                                break;
                                //                            case 'commodity':
                                //                                mainView.router.load({
                                //                                    url: 'shop-logistics?scm_id=' + scm_id + '&scg_id=' + rObj.scg_id
                                //                                });
                                //                                break;
                            default:
                                if (Cookies.get('app_version') !== undefined) {
                                    branchObj.createlogisticsdata(2);
                                } else {
                                    branchObj.createlogisticsdata(1);
                                }
                                break;
                        }

                        // if (rObj.scm_reservationtag == '0') {

                        //     var Today = new Date();
                        //     var nowDate = Today.getFullYear() + "/" + (Today.getMonth() + 1) + "/" + Today.getDate() + ' ' + Today.getHours() + ':' + Today.getMinutes() + ':' + Today.getSeconds();
                        //     var qrCode = '{"scm_id":"' + scm_id + '","scg_id":"' + rObj.scg_id + '","nowDate":"' + nowDate + '"}';

                        //     myApp.modal({
                        //         title: '',
                        //         text: '<div class="qr-content">' +
                        //             '<div class="qr-title">' + stringObj.text.qr_title + '</div>' +
                        //             '<div class="qr-code"></div>' +
                        //             '<p class="qr-use-title"><b style="color:#F26531;">' + stringObj.text.qr_subtitle + '：</b></p>' +
                        //             '<p class="qr-use-content">' + stringObj.text.qr_context + '</p>' +
                        //             '</div>',
                        //         buttons: [{
                        //             text: stringObj.text.confirm,
                        //             bold: true,
                        //             onClick: function() {

                        //                 /*mainView.router.load({
                        //                     url: 'branch-info?sd_id=' + nowSd_id + '&tab=branch-preferential-content'
                        //                 });*/
                        //                 window.history.back();


                        //             }
                        //         }]
                        //     });

                        //     $(".qr-code").qrcode({
                        //         "render": "div",
                        //         "size": 235,
                        //         "background": "#fff",
                        //         "text": qrCode
                        //     });

                        //     $('.modal').css("top", "30%");
                        //     $('.modal').css("width", "270px");

                        // } else {
                        //     myApp.toast('索取完成', '', {}).show();
                        // }

                    } else if (rObj.message_no === "010905002") {
                        var shop_item = indexObj._dataStorage('shop_item') || {};
                        mainView.router.load({
                            url: 'shop/shopcoupon-reservation?scm_id=' + scm_id + '&scm_title=' + shop_item.scm_title + '&scm_enddate=' + localStorage.getItem('scm_enddate') + '&scg_id=' + rObj.scg_id + '&booktype=0',
                            reload: true
                        });
                        localStorage.removeItem('scm_enddate');
                        // myApp.modal({
                        //     title: stringObj.text.warn,
                        //     text: '<div class="alert-text">索取完成，請先預約後使用</div>',
                        //     buttons: [{
                        //         text: stringObj.text.confirm,
                        //         bold: true,
                        //         onClick: function() {

                        //             /*mainView.router.load({
                        //                 url: 'branch-info?sd_id=' + nowSd_id + '&tab=branch-preferential-content'
                        //             });*/
                        //             window.history.back();


                        //         }
                        //     }]
                        // });
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });

    },
    //商家活動使用紀錄
    shopcouponrecorver: function() {
        var shopCouponRecord = indexObj._dataStorage(branchObj.storage.shopCouponRecord) || {
            last_update_date: '',
            availableList: [],
            finishList: [],
            invalidList: []
        };

        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var alarmCheckObj = JSON.parse(localStorage.getItem('alarmCheck')) || {
            alarmCheckArray: []
        };

        // console.log(JSON.stringify({
        //     modacc: stringObj.shop.moduleaccount,
        //     modvrf: Cookies.get('modvrf'),
        //     sat: mainSg.sat,
        //     last_update_date: shopCouponRecord.last_update_date
        // }));


        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponrecorver,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                last_update_date: shopCouponRecord.last_update_date
            },
            success: function(r) {
                if (r.shopcouponrecorverresult) {
                    indexObj.jsonUrlDecode(r);
                    //console.log(JSON.stringify(r));
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponrecorverresult));
                    switch (rObj.message_no) {

                        case '000000000':
                            for (var i in rObj.scg_list) {
                                findAndRemove(shopCouponRecord.availableList, 'scg_id', rObj.scg_list[i].scg_id);
                                findAndRemove(shopCouponRecord.finishList, 'scg_id', rObj.scg_list[i].scg_id);
                                findAndRemove(shopCouponRecord.invalidList, 'scg_id', rObj.scg_list[i].scg_id);
                                var couponItem = {};
                                couponItem.scg_id = rObj.scg_list[i].scg_id;
                                couponItem.scm_id = rObj.scg_list[i].scm_id;
                                if (rObj.scg_list[i].reservationdatetime === '') {
                                    couponItem.reservationdatetime = false;
                                } else {
                                    couponItem.reservationdatetime = rObj.scg_list[i].reservationdatetime;
                                }
                                couponItem.scg_getdate = rObj.scg_list[i].scg_getdate;
                                couponItem.scg_usedate = rObj.scg_list[i].scg_usedate;
                                couponItem.scg_usestatus = rObj.scg_list[i].scg_usestatus;
                                couponItem.scg_reservationstatus = rObj.scg_list[i].scg_reservationstatus;

                                findArrayItem(rObj.scm_list, 'scm_id', rObj.scg_list[i].scm_id);

                                couponItem.sd_id = rObj.scm_list[nowIndex].sd_id;
                                couponItem.scm_title = rObj.scm_list[nowIndex].scm_title;
                                couponItem.scm_fulldescript = rObj.scm_list[nowIndex].scm_fulldescript;
                                couponItem.scm_category = rObj.scm_list[nowIndex].scm_category;
                                couponItem.scm_mainpic = stringObj.text.branch_img_path + rObj.scm_list[nowIndex].scm_mainpic;
                                couponItem.scm_activepics = stringObj.text.branch_img_path + rObj.scm_list[nowIndex].scm_activepics;
                                couponItem.scm_price = rObj.scm_list[nowIndex].scm_price;
                                couponItem.scm_startdate = rObj.scm_list[nowIndex].scm_startdate;
                                couponItem.scm_enddate = rObj.scm_list[nowIndex].scm_enddate;
                                couponItem.scm_reservationtag = rObj.scm_list[nowIndex].scm_reservationtag;
                                couponItem.scm_producttype = rObj.scm_list[nowIndex].scm_producttype;
                                if (rObj.scm_list[nowIndex].scm_reservationtag === '1') {
                                    couponItem.reservationCheck = true;
                                }
                                if (rObj.scm_list[nowIndex].scm_producttype === '2') {
                                    couponItem.is_product = true;
                                }
                                couponItem.date = new Date(rObj.scg_list[i].scg_getdate) / (1000 * 60 * 60 * 24);

                                findArrayItem(rObj.sd_list, 'sd_id', rObj.scm_list[nowIndex].sd_id);

                                couponItem.sd_shopname = rObj.sd_list[nowIndex].sd_shopname;
                                couponItem.sd_shopaddress = rObj.sd_list[nowIndex].sd_shopaddress;
                                couponItem.sd_shoptel = rObj.sd_list[nowIndex].sd_shoptel;
                                couponItem.sd_lat = rObj.sd_list[nowIndex].sd_lat;
                                couponItem.sd_lng = rObj.sd_list[nowIndex].sd_lng;
                                couponItem.sd_weeklystart = rObj.sd_list[nowIndex].sd_weeklystart;
                                couponItem.sd_weeklyend = rObj.sd_list[nowIndex].sd_weeklyend;
                                couponItem.sd_dailystart = rObj.sd_list[nowIndex].sd_dailystart;
                                couponItem.sd_dailyend = rObj.sd_list[nowIndex].sd_dailyend;


                                //判斷是否有設定過提醒
                                if (JSON.stringify(alarmCheckObj.alarmCheckArray).match(rObj.scg_list[i].scg_id)) {
                                    couponItem.alarmCheck = false;
                                } else if (rObj.scg_list[i].reservationdatetime != '') {
                                    couponItem.alarmCheck = true;
                                }

                                if (!couponItem.is_product) {
                                    switch (rObj.scg_list[i].scg_usestatus) {
                                        case '5':
                                            shopCouponRecord.availableList.push(couponItem);
                                            break;
                                        case '2':
                                            shopCouponRecord.finishList.push(couponItem);
                                            break;
                                        case '3':
                                            shopCouponRecord.invalidList.push(couponItem);
                                            break;
                                        case '4':
                                            shopCouponRecord.invalidList.push(couponItem);
                                            break;
                                    }
                                }
                            }

                            shopCouponRecord.last_update_date = rObj.last_update_date;


                            //排序
                            shopCouponRecord.availableList.sort(sortByProperty('date', -1));
                            shopCouponRecord.finishList.sort(sortByProperty('date', -1));
                            shopCouponRecord.invalidList.sort(sortByProperty('date', -1));


                            indexObj._dataStorage(branchObj.storage.shopCouponRecord, shopCouponRecord);


                            if (nowPage === 'coupon-record') {
                                var temp;
                                var item;

                                //可用
                                if (JSON.stringify(shopCouponRecord.availableList) === "[]") {
                                    temp = indexObj.template('templateCouponListNull');
                                    item = temp('');
                                    $$('#shop-coupon .available-content').html(item);
                                } else {
                                    temp = indexObj.template('templateShopCouponAvailableList');
                                    item = temp(shopCouponRecord);
                                    $$('#shop-coupon .couponAvailableList').append(item);

                                    myApp.initImagesLazyLoad('.page-content');
                                }

                                //用畢
                                if (JSON.stringify(shopCouponRecord.finishList) === "[]") {
                                    var couponTemp = indexObj.template('templateCouponListNull');
                                    var couponItem = couponTemp('');
                                    $$('#shop-coupon .finish-content').html(couponItem);
                                } else {
                                    temp = indexObj.template('templateShopCouponFinishList');
                                    item = temp(shopCouponRecord);
                                    $$('#shop-coupon .couponFinishList').append(item);

                                    myApp.initImagesLazyLoad('.page-content');
                                }

                                //失效
                                if (JSON.stringify(shopCouponRecord.invalidList) === "[]") {
                                    var couponTemp = indexObj.template('templateCouponListNull');
                                    var couponItem = couponTemp('');
                                    $$('#shop-coupon .invalid-content').html(couponItem);
                                } else {
                                    temp = indexObj.template('templateShopCouponInvalidList');
                                    item = temp(shopCouponRecord);
                                    $$('#shop-coupon .couponInvalidList').append(item);

                                    myApp.initImagesLazyLoad('.page-content');
                                }

                                $('.title').ellipsis({
                                    row: 2
                                });
                            }
                            break;
                        default:
                            stringObj.return_header(rObj.message_no);
                            break;
                    }
                    if (_tip) {
                        myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                        _tip = null;
                    }
                }
            },
            error: function(r) {
                noNetwork();

                if (nowPage === 'coupon-record') {
                    var temp;
                    var item;

                    //可用
                    if (JSON.stringify(shopCouponRecord.availableList) === "[]") {
                        temp = indexObj.template('templateCouponListNull');
                        item = temp('');
                        $$('.tab-available').html(item);
                    } else {
                        temp = indexObj.template('templateShopCouponAvailableList');
                        item = temp(shopCouponRecord);
                        $$('.couponAvailableList').append(item);

                        myApp.initImagesLazyLoad('.page-content');
                    }

                    //用畢
                    if (JSON.stringify(shopCouponRecord.finishList) === "[]") {
                        var couponTemp = indexObj.template('templateCouponListNull');
                        var couponItem = couponTemp('');
                        $$('.tab-finish').html(couponItem);
                    } else {
                        temp = indexObj.template('templateShopCouponFinishList');
                        item = temp(shopCouponRecord);
                        $$('.couponFinishList').append(item);

                        myApp.initImagesLazyLoad('.page-content');
                    }

                    //失效
                    if (JSON.stringify(shopCouponRecord.invalidList) === "[]") {
                        var couponTemp = indexObj.template('templateCouponListNull');
                        var couponItem = couponTemp('');
                        $$('.tab-invalid').html(couponItem);
                    } else {
                        temp = indexObj.template('templateShopCouponInvalidList');
                        item = temp(shopCouponRecord);
                        $$('.couponInvalidList').append(item);

                        myApp.initImagesLazyLoad('.page-content');
                    }

                    $('.title').ellipsis({
                        row: 2
                    });
                }


            }
        });
    },
    //商家活動預約初始化
    shopCouponReservationInit: function(page) {

        var q = page.query;

        if (q.from) {
            $('.reservation-left a').attr('href', 'coupon-record?tab=shop-coupon');
        } else if (q.booktype === '1') {
            //$('.reservation-left a').attr('href', 'shop/shopcoupon-info?scm_id=' + q.scm_id + '&type=reserved&scg_id=' + q.scg_id);
            $('.reservation-left a').unbind('click');
            $('.reservation-left a').click(function() {
                //localStorage.setItem('pageInit', 'shop/shopcoupon-reservation');
                //window.location.replace('pm/shopcoupon-info?scm_id=' + q.scm_id + '&type=reserved&scg_id=' + q.scg_id);
                window.history.back();
            });
        } else if (q.booktype === '0') {
            //$('.reservation-left a').attr('href', 'shop-buy-data?scm_id=' + q.scm_id + '&from=reservation');
            $('.reservation-left a').unbind('click');
            $('.reservation-left a').click(function() {
                //localStorage.setItem('pageInit', 'shop/shopcoupon-reservation');
                //window.location.replace('Shop#!/shop-buy-data?scm_id=' + q.scm_id + '&from=reservation');
                window.history.back();
            });
            //$('.reservation-left a').attr('href', 'shop/shopcoupon-info?scm_id=' + q.scm_id + '&type=shop_available&scg_id=' + q.scg_id);
        } else {
            //$('.reservation-left a').attr('href', 'shop/shopcoupon-info?scm_id=' + q.scm_id + '&scg_id=' + q.scg_id);
            $('.reservation-left a').unbind('click');
            $('.reservation-left a').click(function() {
                //                localStorage.setItem('pageInit', 'shop/shopcoupon-reservation');
                //                window.location.replace('pm/shopcoupon-info?scm_id=' + q.scm_id + '&type=reserved&scg_id=' + q.scg_id);
                window.history.back();
            });
        }

        var mainSg = indexObj._dataCookies(indexObj._storage.main);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponreservationinfo,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                scm_id: q.scm_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopcouponreservationinforesult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponreservationinforesult));
                    if (rObj.message_no === "000000000") {

                        var shop_item = indexObj._dataStorage('shop_item') || {};

                        var dataAdj = {
                            scm_title: shop_item.scm_title,
                            scm_enddate: shop_item.scm_enddate
                        };

                        var temp = indexObj.template('templateShopCouponReservation');
                        var item = temp(dataAdj);
                        $$('.text-block').html(item);

                        var today = new Date();

                        //可預約日期陣列
                        var eventDate = [];
                        var scr_rvdate;
                        for (var i in rObj.reservationarray) {
                            scr_rvdate = rObj.reservationarray[i].scr_rvdate;
                            scr_rvdate = scr_rvdate.replace(/-/ig, "/");
                            var reservationDate = new Date(scr_rvdate);
                            var nowDate = new Date(today.getFullYear() + "/" + (today.getMonth() + 1) + "/" + today.getDate());
                            if ((reservationDate - nowDate) >= 0) {
                                eventDate.push(scr_rvdate);
                            }
                        }

                        var monthNames = stringObj.text.monthNames;

                        calendarInline = myApp.calendar({
                            container: '.page:not(.cached) #calendar-inline-container',
                            //value: [new Date()],<i class="icon icon-back"></i>
                            //weekHeader: false,<i class="icon icon-forward">
                            toolbarTemplate: '<div class="toolbar calendar-custom-toolbar">' +
                                '<div class="toolbar-inner">' +
                                '<div class="left">' +
                                '<a href="#" class="link icon-only"><i class="fa fa-angle-left"></i></a>' +
                                '</div>' +
                                '<div class="center"></div>' +
                                '<div class="right">' +
                                '<a href="#" class="link icon-only"><i class="fa fa-angle-right"></i></a>' +
                                '</div>' +
                                '</div>' +
                                '</div>',
                            onOpen: function(p) {
                                $$('.calendar-custom-toolbar .center').text(monthNames[p.currentMonth] + ', ' + p.currentYear);
                                $$('.calendar-custom-toolbar .left .link').on('click', function() {
                                    calendarInline.prevMonth();
                                });
                                $$('.calendar-custom-toolbar .right .link').on('click', function() {
                                    calendarInline.nextMonth();
                                });
                            },
                            onMonthYearChangeStart: function(p) {
                                $$('.calendar-custom-toolbar .center').text(monthNames[p.currentMonth] + ', ' + p.currentYear);
                            },
                            firstDay: 0,
                            events: eventDate,
                            onDayClick: function(p, dayContainer, year, month, day) {

                                //可預約日期陣列
                                var eventDate = [];
                                var scr_rvdate;
                                for (var i in rObj.reservationarray) {
                                    scr_rvdate = rObj.reservationarray[i].scr_rvdate;
                                    scr_rvdate = scr_rvdate.replace(/-/ig, "/");
                                    eventDate.push(scr_rvdate);
                                }

                                var event = JSON.stringify(eventDate);

                                if ((parseInt(month) + 1) < 10) {
                                    var theMonth = '0' + (parseInt(month) + 1);
                                } else {
                                    var theMonth = '' + (parseInt(month) + 1);
                                }

                                if ((parseInt(day)) < 10) {
                                    var theDay = '0' + (parseInt(day));
                                } else {
                                    var theDay = '' + (parseInt(day));
                                }

                                if (event.match(year + "/" + theMonth + "/" + theDay)) {

                                    findArrayItem(rObj.reservationarray, 'scr_rvdate', year + "-" + theMonth + "-" + theDay);
                                    var scr_rvtime = '';
                                    for (var j in rObj.reservationarray[nowIndex].dailytime) {
                                        scr_rvtime += '<option value="' + rObj.reservationarray[nowIndex].dailytime[j].scr_serno + '">' + rObj.reservationarray[nowIndex].dailytime[j].scr_rvtime.substring(0, 5) + '</option>';
                                    }

                                    myApp.modal({
                                        title: stringObj.text.reservationTime,
                                        text: '<select class="styled-select">' + scr_rvtime + '</select>',
                                        buttons: [{
                                            text: stringObj.text.cancel,
                                            onClick: function() {
                                                calendarInline.setValue('2016/01/01');
                                            }
                                        }, {
                                            text: stringObj.text.confirm,
                                            onClick: function() {
                                                //console.log($(".styled-select").val());
                                                //branchObj.shopcouponreservationbook(q.scm_id, q.scg_id, $(".styled-select").val(), q.booktype);
                                                var reservationbook = {};
                                                reservationbook.scr_serno = $(".styled-select").val();
                                                reservationbook.booktype = q.booktype;
                                                indexObj._dataStorage(indexObj._storage.reservationbook, reservationbook);
                                                mainView.router.load({
                                                    url: 'pay-info?scm_id=' + q.scm_id + '&from=reservation'
                                                });

                                            }
                                        }]
                                    });

                                }



                            }

                        });

                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                            if ($$(el).text() == 'Sat') {
                                $$(el).addClass('sat');
                            }
                        });

                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                            if ($$(el).text() == 'Sun') {
                                $$(el).addClass('sun');
                            }
                        });



                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                            $('.modal-button').click(function() {
                                window.history.back();
                            });
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });

    },
    //商家活動預約
    shopcouponreservationbook: function(scm_id, scg_id, scr_serno, booktype) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponreservationbook,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                scm_id: scm_id,
                scg_id: scg_id,
                scr_serno: scr_serno,
                booktype: booktype
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopcouponreservationbookresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponreservationbookresult));
                    if (rObj.message_no === "010906000") {

                        var alarmInfo = indexObj._dataStorage(branchObj.storage.alarmInfo) || {
                            alarmInfoArray: []
                        };
                        var alarmCheckObj = JSON.parse(localStorage.getItem('alarmCheck')) || {
                            alarmCheckArray: []
                        };

                        if (booktype === '1') {
                            if (alarmInfo.alarmInfoArray.length > 0) {
                                nowIndex = -1;
                                findArrayItem(alarmInfo.alarmInfoArray, 'id', scg_id);
                                if (nowIndex >= 0) {
                                    //console.log(JSON.stringify(alarmInfo.alarmInfoArray));
                                    //console.log(scg_id);
                                    //console.log(alarmInfo.alarmInfoArray[nowIndex].alarmIndex);
                                    webview.closeAlarm(alarmInfo.alarmInfoArray[nowIndex].alarmIndex, scg_id);
                                    findAndRemove(alarmInfo.alarmInfoArray, 'id', scg_id);
                                    indexObj._dataStorage(branchObj.storage.alarmInfo, alarmInfo);
                                    alarmCheckObj.alarmCheckArray.splice(alarmCheckObj.alarmCheckArray.indexOf(scg_id), 1);
                                    indexObj._dataStorage('alarmCheck', alarmCheckObj);
                                    //console.log(JSON.stringify(alarmInfo.alarmInfoArray));
                                    //console.log(JSON.stringify(alarmCheckObj.alarmCheckArray));
                                }
                            }
                            myApp.toast(stringObj.text.edit_success, '', {}).show();
                            // mainView.router.load({
                            //     url: 'shop/shopcoupon-info?scm_id=' + scm_id + '&type=reserved&scg_id=' + scg_id
                            // });
                            mainView.router.load({
                                url: 'pay-info?scm_id=' + scm_id + '&scg_id=' + scg_id + '&from=reservation'
                            });

                        } else {

                            var shop_item = indexObj._dataStorage('shop_item') || {};

                            if (Cookies.get('app_version') !== undefined) {
                                myApp.modal({
                                    title: stringObj.text.set_alarm_time,
                                    text: '<div class="list-block media-list">' +
                                        '<ul id="reasonlist">' +
                                        '<li>' +
                                        '<label class="label-radio item-content">' +
                                        '<input type="radio" name="alarmTime" value="1" checked>' +
                                        '<div class="item-inner">' +
                                        '<div class="item-title-row">' +
                                        '<div class="item-title"><b>' + stringObj.text.hour_ago + '</b></div>' +
                                        '</div>' +
                                        '</div>' +
                                        '</label>' +
                                        '</li>' +
                                        '<li>' +
                                        '<label class="label-radio item-content">' +
                                        '<input type="radio" name="alarmTime" value="2">' +
                                        '<div class="item-inner">' +
                                        '<div class="item-title-row">' +
                                        '<div class="item-title"><b>' + stringObj.text.date_ago + '</b></div>' +
                                        '</div>' +
                                        '</div>' +
                                        '</label>' +
                                        '</li>' +
                                        '</ul>' +
                                        '</div>',
                                    buttons: [{
                                        text: stringObj.text.cancel,
                                        onClick: function() {
                                            // mainView.router.load({
                                            //     url: 'shop/shopcoupon-info?scm_id=' + scm_id + '&type=reserved&scg_id=' + scg_id
                                            // });
                                            //                                            mainView.router.load({
                                            //                                                url: 'pay-info?scm_id=' + scm_id + '&scg_id=' + scg_id + '&from=reservation'
                                            //                                            });
                                            //branchObj.createpaymentflow(scg_id);


                                            if (shop_item.scm_coupon_providetype === '1') {
                                                shop_item.errcode = '00';
                                                paySuccess(JSON.stringify(shop_item));
                                            } else {
                                                branchObj.createpaymentflow(scg_id);
                                            }
                                        }

                                    }, {
                                        text: stringObj.text.confirm,
                                        onClick: function() {
                                            var checkAlarmTime = $('input[name="alarmTime"]:checked').val();
                                            var reservationTime = rObj.reservation_datetime;
                                            var alarmIndex = localStorage.getItem('alarmIndex') || 1;


                                            webview.setAlarm(parseInt(reservationTime.substring(0, 4)), parseInt(reservationTime.substring(5, 7)), parseInt(reservationTime.substring(8, 10)), parseInt(reservationTime.substring(11, 13)), parseInt(reservationTime.substring(14, 16)), parseInt(alarmIndex) + 1, scg_id, rObj.scm_cname, checkAlarmTime);


                                            localStorage.setItem('alarmIndex', parseInt(alarmIndex) + 1);

                                            alarmCheckObj.alarmCheckArray.push(scg_id);
                                            localStorage.setItem('alarmCheck', JSON.stringify(alarmCheckObj));



                                            var alarmInfoItem = {
                                                id: scg_id,
                                                alarmIndex: parseInt(alarmIndex) + 1,
                                                reservationTime: rObj.reservation_datetime
                                            };

                                            alarmInfo.alarmInfoArray.push(alarmInfoItem);

                                            indexObj._dataStorage(branchObj.storage.alarmInfo, alarmInfo);


                                            // mainView.router.load({
                                            //     url: 'shop/shopcoupon-info?scm_id=' + scm_id + '&type=reserved&scg_id=' + scg_id
                                            // });
                                            //                                            mainView.router.load({
                                            //                                                url: 'pay-info?scm_id=' + scm_id + '&scg_id=' + scg_id + '&from=reservation'
                                            //                                            });

                                            //branchObj.createpaymentflow(scg_id);
                                            if (shop_item.scm_coupon_providetype === '1') {
                                                shop_item.errcode = '00';
                                                paySuccess(JSON.stringify(shop_item));
                                            } else {
                                                branchObj.createpaymentflow(scg_id);
                                            }
                                        }

                                    }]
                                });
                            } else {
                                if (shop_item.scm_coupon_providetype === '1') {
                                    shop_item.errcode = '00';
                                    paySuccess(JSON.stringify(shop_item));
                                } else {
                                    branchObj.createpaymentflow(scg_id);
                                }
                            }

                        }



                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家活動掃描
    shopcouponscan: function(scm_id, scg_id) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponscan,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                scm_id: scm_id,
                scg_id: scg_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopcouponscanresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponscanresult));
                    if (rObj.message_no === "010910000" || rObj.message_no === "010910007") {

                        //                        mainView.router.load({
                        //                            url: 'shop/shopcoupon-info?scm_id=' + scm_id + '&type=scan&scg_id=' + scg_id + '&scm_title=' + rObj.scm_title + '&scm_enddate=' + rObj.scm_enddate
                        //                        });

                        localStorage.setItem('pageInit', nowPage);
                        window.location = 'pm/shopcoupon-info?scm_id=' + scm_id + '&type=scan&scg_id=' + scg_id + '&scm_title=' + rObj.scm_title + '&scm_enddate=' + rObj.scm_enddate;

                    } else if (rObj.message_no === "010910006") {
                        myApp.modal({
                            title: stringObj.text.warn,
                            text: stringObj.text.not_reservation_time,
                            buttons: [{
                                text: stringObj.text.cancel,
                                onClick: function() {

                                }
                            }, {
                                text: stringObj.text.confirm,
                                onClick: function() {
                                    //                                        mainView.router.load({
                                    //                                            url: 'shop/shopcoupon-info?scm_id=' + scm_id + '&type=scan&scg_id=' + scg_id + '&scm_title=' + rObj.scm_title + '&scm_enddate=' + rObj.scm_enddate
                                    //                                        });
                                    localStorage.setItem('pageInit', nowPage);
                                    window.location = 'pm/shopcoupon-info?scm_id=' + scm_id + '&type=scan&scg_id=' + scg_id + '&scm_title=' + rObj.scm_title + '&scm_enddate=' + rObj.scm_enddate;
                                }
                            }]
                        });
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家服務
    shopcouponexec: function(scm_id, scg_id, scm_title, scm_enddate) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponexec,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                scm_id: scm_id,
                scg_id: scg_id,
                coupon_operation: '1'
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopcouponexecresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponexecresult));
                    if (rObj.message_no === "010911000") {

                        var date = new Date();
                        var month = (date.getMonth() + 1);
                        var dates = date.getDate();
                        var hours = date.getHours();
                        var min = date.getMinutes();
                        var sec = date.getSeconds();
                        if (month < 10) {
                            month = '0' + month;
                        }
                        if (dates < 10) {
                            dates = '0' + dates;
                        }
                        if (hours < 10) {
                            hours = '0' + hours;
                        }
                        if (min < 10) {
                            min = '0' + min;
                        }
                        if (sec < 10) {
                            sec = '0' + sec;
                        }


                        var branchScanRecord = indexObj._dataStorage(branchObj.storage.branchScanRecord) || {
                            scanArray: []
                        };
                        var scanItem = {};
                        if (JSON.stringify(branchScanRecord).match(scm_id)) {
                            var today = '' + date.getFullYear() + month + dates;
                            findArrayItem(branchScanRecord.scanArray, 'scm_id', scm_id);
                            if (today == branchScanRecord.scanArray[nowIndex].scanDate.substring(0, 8)) {
                                scanItem.scanNum = branchScanRecord.scanArray[nowIndex].scanNum + 1;
                                findAndRemove(branchScanRecord.scanArray, 'scm_id', scm_id);
                            } else {
                                scanItem.scanNum = 1;
                            }
                        } else {
                            scanItem.scanNum = 1;
                        }

                        scanItem.scm_id = scm_id;
                        scanItem.scm_title = scm_title;
                        scanItem.scm_balanceno = rObj.scm_balanceno || ' ';
                        scanItem.scm_enddate = scm_enddate;
                        scanItem.scanDate = '' + date.getFullYear() + month + dates + hours + min + sec;

                        branchScanRecord.scanArray.push(scanItem);

                        //排序
                        branchScanRecord.scanArray.sort(sortByProperty('scanDate', -1));

                        indexObj._dataStorage(branchObj.storage.branchScanRecord, branchScanRecord);


                        if (rObj.scm_balanceno == '') {
                            myApp.toast(stringObj.text.serving_success, '', {}).show();
                            mainView.router.load({
                                url: 'shop/branch-main'
                            });
                        } else {
                            code39(rObj.scm_balanceno);
                            mainView.router.load({
                                url: 'shop/branch-main'
                            });
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家掃描記錄
    branchScanRecordInit: function(page) {

        var branchScanRecord = indexObj._dataStorage(branchObj.storage.branchScanRecord) || {
            scanArray: []
        };

        //console.log(JSON.stringify(branchScanRecord));


        var temp;
        var item;
        if (branchScanRecord.scanArray == '') {
            temp = indexObj.template('templateBranchScanRecordNull');
            item = temp('');
            $$('.page-content').html(item);
        } else {
            $$('.page-content').html('<div class="sever-subTitle date1"></div><div class="record-list date1-block"></div><div class="sever-subTitle date2"></div><div class="record-list date2-block"></div><div class="sever-subTitle date3"></div><div class="record-list date3-block"></div>');
            var date = new Date();
            var month = (date.getMonth() + 1);
            var dates = date.getDate();
            if (month < 10) {
                month = '0' + month;
            }
            if (dates < 10) {
                dates = '0' + dates;
            }
            //var today = parseInt('' + date.getFullYear() + month + dates);
            var today = new Date(date.getFullYear() + '/' + month + '/' + dates) / (1000 * 60 * 60 * 24);
            var scanDate;

            $('.date1').css('display', 'none');
            $('.date2').css('display', 'none');
            $('.date3').css('display', 'none');
            var i = 0;
            while (i < branchScanRecord.scanArray.length) {
                var scanRecordItem = {
                    scm_title: branchScanRecord.scanArray[i].scm_title,
                    scm_balanceno: branchScanRecord.scanArray[i].scm_balanceno,
                    scm_enddate: branchScanRecord.scanArray[i].scm_enddate,
                    scanNum: branchScanRecord.scanArray[i].scanNum
                };
                if (branchScanRecord.scanArray[i].scm_balanceno == ' ') {
                    scanRecordItem.scm_balanceno = false;
                }
                //console.log(JSON.stringify(scanRecordItem));

                //scanDate = parseInt(scanRecordObj.scanArray[i].scanDate.substring(0, 8));
                scanDate = new Date(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8)) / (1000 * 60 * 60 * 24);

                //console.log(today - scanDate);

                if ((today - scanDate) > 2) {
                    findAndRemove(branchScanRecord.scanArray, 'scanDate', branchScanRecord.scanArray[i].scanDate);
                    indexObj._dataStorage(branchObj.storage.branchScanRecord, branchScanRecord);
                    i = 0;
                    if (branchScanRecord.scanArray == '') {
                        temp = indexObj.template('templateBranchScanRecordNull');
                        item = temp('');
                        $$('.page-content').html(item);
                    }
                } else if ((today - scanDate) == 0) {
                    $('.date1').css('display', 'block');
                    $('.date1').html(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8));
                    temp = indexObj.template('templateBranchScanRecordItem');
                    item = temp(scanRecordItem);
                    $$('.date1-block').append(item);
                    i++;
                } else if ((today - scanDate) == 1) {
                    $('.date2').css('display', 'block');
                    $('.date2').html(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8));
                    temp = indexObj.template('templateBranchScanRecordItem');
                    item = temp(scanRecordItem);
                    $$('.date2-block').append(item);
                    i++;
                } else if ((today - scanDate) == 2) {
                    $('.date3').css('display', 'block');
                    $('.date3').html(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8));
                    temp = indexObj.template('templateBranchScanRecordItem');
                    item = temp(scanRecordItem);
                    $$('.date3-block').append(item);
                    i++;
                }

            }

        }


    },
    //取得掃描記錄
    scanRecordGet: function() {
        var branchScanRecord = indexObj._dataStorage(branchObj.storage.branchScanRecord) || {
            scanArray: []
        };

        //console.log(JSON.stringify(branchScanRecord));


        var temp;
        var item;
        if (branchScanRecord.scanArray == '') {
            temp = indexObj.template('templateBranchScanRecordNull');
            item = temp('');
            $$('.scan-record').html(item);
        } else {
            $$('.scan-record').html('<div class="sever-subTitle date1"></div><div class="record-list date1-block"></div><div class="sever-subTitle date2"></div><div class="record-list date2-block"></div><div class="sever-subTitle date3"></div><div class="record-list date3-block"></div>');
            var date = new Date();
            var month = (date.getMonth() + 1);
            var dates = date.getDate();
            if (month < 10) {
                month = '0' + month;
            }
            if (dates < 10) {
                dates = '0' + dates;
            }
            var today = new Date(date.getFullYear() + '/' + month + '/' + dates) / (1000 * 60 * 60 * 24);
            var scanDate;

            $('.date1').css('display', 'none');
            $('.date2').css('display', 'none');
            $('.date3').css('display', 'none');
            var i = 0;
            while (i < branchScanRecord.scanArray.length) {
                var scanRecordItem = {
                    scm_title: branchScanRecord.scanArray[i].scm_title,
                    scm_balanceno: branchScanRecord.scanArray[i].scm_balanceno,
                    scm_enddate: branchScanRecord.scanArray[i].scm_enddate,
                    scanNum: branchScanRecord.scanArray[i].scanNum
                };
                if (branchScanRecord.scanArray[i].scm_balanceno == ' ') {
                    scanRecordItem.scm_balanceno = false;
                }
                //console.log(JSON.stringify(scanRecordItem));

                //scanDate = parseInt(scanRecordObj.scanArray[i].scanDate.substring(0, 8));
                scanDate = new Date(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8)) / (1000 * 60 * 60 * 24);

                //console.log(today - scanDate);

                if ((today - scanDate) > 2) {
                    findAndRemove(branchScanRecord.scanArray, 'scanDate', branchScanRecord.scanArray[i].scanDate);
                    indexObj._dataStorage(branchObj.storage.branchScanRecord, branchScanRecord);
                    i = 0;
                    if (branchScanRecord.scanArray == '') {
                        temp = indexObj.template('templateBranchScanRecordNull');
                        item = temp('');
                        $$('.scan-record').html(item);
                    }
                } else if ((today - scanDate) == 0) {
                    $('.date1').css('display', 'block');
                    $('.date1').html(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8));
                    temp = indexObj.template('templateBranchScanRecordItem');
                    item = temp(scanRecordItem);
                    $$('.date1-block').append(item);
                    i++;
                } else if ((today - scanDate) == 1) {
                    $('.date2').css('display', 'block');
                    $('.date2').html(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8));
                    temp = indexObj.template('templateBranchScanRecordItem');
                    item = temp(scanRecordItem);
                    $$('.date2-block').append(item);
                    i++;
                } else if ((today - scanDate) == 2) {
                    $('.date3').css('display', 'block');
                    $('.date3').html(branchScanRecord.scanArray[i].scanDate.substring(0, 4) + '/' + branchScanRecord.scanArray[i].scanDate.substring(4, 6) + '/' + branchScanRecord.scanArray[i].scanDate.substring(6, 8));
                    temp = indexObj.template('templateBranchScanRecordItem');
                    item = temp(scanRecordItem);
                    $$('.date3-block').append(item);
                    i++;
                }

            }

        }
    },
    //預約紀錄
    shopcouponreservationquery: function(sd_id, query_startdate, query_reply_status) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopcouponreservationquery,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: sd_id,
                query_startdate: query_startdate,
                query_reply_status: query_reply_status
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopcouponreservationqueryresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopcouponreservationqueryresult));
                    if (rObj.message_no === "000000000") {

                        if (nowPage === 'branch-reservation-record') { //branch-reservation-record shop-record
                            if (rObj.reservationinfo === "") {
                                var temp = indexObj.template('templateReservationNull');
                                var item = temp(rObj);
                                $$('.reservation-record .list-block ul').html(item);
                            } else {
                                /*var temp = indexObj.template('templateBranchReservationBlock');
                                var item = temp(rObj);
                                $$('.reservation-record .list-block ul').html(item);*/


                                var ssd_picturepath;
                                for (var i in rObj.reservationinfo) {
                                    for (var j in rObj.reservationinfo[i].reservelist) {
                                        switch (rObj.reservationinfo[i].reservelist[j].scg_usestatus) {
                                            case "1":
                                                switch (rObj.reservationinfo[i].reservelist[j].scg_reservationstatus) {
                                                    case "0":
                                                        rObj.reservationinfo[i].reservelist[j].status = stringObj.text.no_use;
                                                        break;
                                                    case "3":
                                                        rObj.reservationinfo[i].reservelist[j].status = stringObj.text.no_come;
                                                        break;
                                                }
                                                break;
                                            default:
                                                rObj.reservationinfo[i].reservelist[j].status = stringObj.shop.scg_usestatus_array[parseInt(rObj.reservationinfo[i].reservelist[j].scg_usestatus)]
                                                break;
                                        };


                                        if (rObj.reservationinfo[i].reservelist[j].ssd_picturepath == '') {
                                            rObj.reservationinfo[i].reservelist[j].ssd_picturepath = '../app/image/general_user.png';
                                        } else {
                                            if (rObj.reservationinfo[i].reservelist[j].ssd_picturepath.match('square')) {
                                                rObj.reservationinfo[i].reservelist[j].ssd_picturepath = rObj.reservationinfo[i].reservelist[j].ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                                            } else {
                                                rObj.reservationinfo[i].reservelist[j].ssd_picturepath = rObj.reservationinfo[i].reservelist[j].ssd_picturepath;
                                            }
                                        }


                                        var listTemp = indexObj.template('templateReserveList');
                                        var listItem = listTemp(rObj.reservationinfo[i]);
                                        //$$('.block-' + rObj.reservationinfo[i].reservationdate).append(listItem);
                                        $$('.reservation-record .list-block ul').html(listItem);
                                        //每一秒呼叫一次function
                                        window.intervalParam = window.setInterval(function() {
                                            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
                                        }, 1000);
                                    }
                                }

                            }
                        } else if (nowPage == 'branch-main') {


                            if (rObj.reservationinfo !== "") {

                                var date = new Date();
                                var month = (date.getMonth() + 1);
                                var dates = date.getDate();
                                if (month < 10) {
                                    month = '0' + month;
                                }
                                if (dates < 10) {
                                    dates = '0' + dates;
                                }

                                if (rObj.reservationinfo[0].reservationdate.match(date.getFullYear() + '-' + month + '-' + dates)) {

                                    for (var j in rObj.reservationinfo[0].reservelist) {
                                        switch (rObj.reservationinfo[0].reservelist[j].scg_usestatus) {
                                            case "1":
                                                switch (rObj.reservationinfo[0].reservelist[j].scg_reservationstatus) {
                                                    case "0":
                                                        rObj.reservationinfo[0].reservelist[j].status = stringObj.text.no_use;
                                                        break;
                                                    case "3":
                                                        rObj.reservationinfo[0].reservelist[j].status = stringObj.text.no_come;
                                                        break;
                                                }
                                                break;
                                            default:
                                                rObj.reservationinfo[0].reservelist[j].status = stringObj.shop.scg_usestatus_array[parseInt(rObj.reservationinfo[0].reservelist[j].scg_usestatus)]
                                                break;
                                        };

                                        if (rObj.reservationinfo[0].reservelist[j].ssd_picturepath == '') {
                                            rObj.reservationinfo[0].reservelist[j].ssd_picturepath = '../app/image/general_user.png';
                                        } else {
                                            rObj.reservationinfo[0].reservelist[j].ssd_picturepath = rObj.reservationinfo[0].reservelist[j].ssd_picturepath;
                                        }

                                        var listTemp = indexObj.template('templateBranchMainReserveList');
                                        var listItem = listTemp(rObj.reservationinfo[0].reservelist[j]);
                                        $$('.reservation-list ul').append(listItem);
                                        myApp.initImagesLazyLoad('.page-content');
                                    }
                                    $$('.reservation-num span').html(rObj.reservationinfo[0].reservelist.length);

                                    indexObj._dataStorage('reservationinfo', rObj.reservationinfo[0]);

                                    $('.reservation-list .item-content').click(function(event) {
                                        branchObj.shopCouponContentGet($(this).attr('scm_id'), 'reservation', $(this).attr('scg_id'), '', '');
                                    });

                                } else {
                                    var temp = indexObj.template('templateRecordNull');
                                    var item = temp(rObj);
                                    $$('.reservation-list').html(item);
                                }

                            } else {
                                var temp = indexObj.template('templateRecordNull');
                                var item = temp(rObj);
                                $$('.reservation-list').html(item);
                            }

                        }

                    } else if (rObj.message_no === "010908001") {

                        if (nowPage == 'branch-reservation-record') {
                            var temp = indexObj.template('templateReservationNull');
                            var item = temp(rObj);
                            $$('.reservation-record .list-block ul').html(item);
                        } else if (nowPage == 'branch-main') {
                            var temp = indexObj.template('templateRecordNull');
                            var item = temp(rObj);
                            $$('.reservation-list').html(item);
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //更新「預約回覆狀態」
    update_couponreplystatus: function(sd_id, scg_id, scg_reply_status) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.update_couponreplystatus,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: sd_id,
                scg_id: scg_id,
                scg_reply_status: scg_reply_status
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.update_couponreplystatusresult) {
                    var rObj = JSON.parse(JSON.stringify(r.update_couponreplystatusresult));
                    if (rObj.message_no === "000000000") {

                        myApp.toast(stringObj.text.reply_success, '', {}).show();

                        branchObj.query_reservationreplystatus(sd_id);

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //查詢預約未回覆清單
    query_reservationreplystatus: function(sd_id) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_reservationreplystatus,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: sd_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_reservationreplystatusresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_reservationreplystatusresult));
                    if (rObj.message_no === "000000000") {
                        if (rObj.reservationinfo === "") {
                            var temp = indexObj.template('templateNoReplyReservationNull');
                            var item = temp(rObj);
                            $$('.no-reply-content').html(item);
                        } else {
                            var temp = indexObj.template('templateNoReplyReservationBlock');
                            var item = temp(rObj);
                            $$('.no-reply-content').html(item);

                            var ssd_picturepath;
                            for (var i in rObj.reservationinfo) {
                                for (var j in rObj.reservationinfo[i].reservelist) {
                                    switch (rObj.reservationinfo[i].reservelist[j].scg_usestatus) {
                                        case "1":
                                            switch (rObj.reservationinfo[i].reservelist[j].scg_reservationstatus) {
                                                case "0":
                                                    rObj.reservationinfo[i].reservelist[j].status = stringObj.text.no_use;
                                                    break;
                                                case "3":
                                                    rObj.reservationinfo[i].reservelist[j].status = stringObj.text.no_come;
                                                    break;
                                            }
                                            break;
                                        default:
                                            rObj.reservationinfo[i].reservelist[j].status = stringObj.shop.scg_usestatus_array[parseInt(rObj.reservationinfo[i].reservelist[j].scg_usestatus)]
                                            break;
                                    };


                                    if (rObj.reservationinfo[i].reservelist[j].ssd_picturepath == '') {
                                        rObj.reservationinfo[i].reservelist[j].ssd_picturepath = '../app/image/general_user.png';
                                    } else {
                                        if (rObj.reservationinfo[i].reservelist[j].ssd_picturepath.match('square')) {
                                            rObj.reservationinfo[i].reservelist[j].ssd_picturepath = rObj.reservationinfo[i].reservelist[j].ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                                        } else {
                                            rObj.reservationinfo[i].reservelist[j].ssd_picturepath = rObj.reservationinfo[i].reservelist[j].ssd_picturepath;
                                        }
                                    }


                                    var listTemp = indexObj.template('templateNoReplyReservationList');
                                    var listItem = listTemp(rObj.reservationinfo[i].reservelist[j]);
                                    $$('.block-' + rObj.reservationinfo[i].reservationdate).append(listItem);
                                    //$$('.reservation-record .list-block ul').html(listItem);
                                    myApp.initImagesLazyLoad('.page-content');

                                    $('.no-reply-content .reply').unbind('click');
                                    $('.no-reply-content .reply').click(function(event) {
                                        branchObj.update_couponreplystatus(sd_id, $(this).attr('scg_id'), 1);
                                    });
                                }
                            }

                        }

                    } else if (rObj.message_no === "010908001") {

                        if (nowPage == 'no-reply-reservation') {
                            var temp = indexObj.template('templateNoReplyReservationNull');
                            var item = temp(rObj);
                            $$('.no-reply-content').html(item);
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //查詢該年所有的預約資料
    query_couponreservation_year: function(sd_id, year) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_couponreservation_year,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: sd_id,
                query_year: year
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_couponreservation_yearresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_couponreservation_yearresult));
                    if (rObj.message_no === "000000000") {

                        for (var i in rObj.reservationpaused_list_year) {
                            calendarReservation.wrapper.find('.picker-calendar-day[data-date="' + rObj.reservationpaused_list_year[i].substring(0, 4) + '-' + (parseInt(rObj.reservationpaused_list_year[i].substring(5, 7)) - 1) + '-' + parseInt(rObj.reservationpaused_list_year[i].substring(8, 10)) + '"]').addClass('picker-calendar-day-has-events');
                        }
                        indexObj._dataStorage('reservationpaused_list', rObj.reservationpaused_list_year);

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //預約紀錄初始化
    branchReservationRecordInit: function(page) {
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        var today = new Date();
        var month = (today.getMonth() + 1);
        var dates = today.getDate();
        if (month < 10) {
            month = '0' + month;
        }
        if (dates < 10) {
            dates = '0' + dates;
        }
        branchObj.query_couponreservation_year(branchData.sd_id, today.getFullYear());
        branchObj.shopcouponreservationquery(branchData.sd_id, today.getFullYear() + '-' + month + '-' + dates, 9);

        var selectYear = today.getFullYear();
        var reservationpaused_list = indexObj._dataStorage('reservationpaused_list') || '';
        calendarReservation = myApp.calendar({
            container: '.date-block',
            dateFormat: 'yyyy-mm-dd (D)',
            firstDay: 0,
            monthNames: stringObj.text.monthNames,
            dayNamesShort: stringObj.text.dayNames,
            closeOnSelect: true,
            direction: 'vertical',
            toolbarTemplate: '<div class="toolbar calendar-custom-toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="center"><input type="text" class="year" readonly><input type="text" class="month" readonly></div>' +
                '<div class="right pre">' +
                '<a href="#" class="link icon-only"><i class="fa fa-angle-up" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="right next">' +
                '<a href="#" class="link icon-only"><i class="fa fa-angle-down" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            onOpen: function(p) {
                $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                    if ($$(el).text() == '六') {
                        $$(el).addClass('sat');
                    }
                });

                $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                    if ($$(el).text() == '日') {
                        $$(el).addClass('sun');
                    }
                });
                $$('.calendar-custom-toolbar .center .year').val(p.currentYear + '年');
                $$('.calendar-custom-toolbar .center .month').val(stringObj.text.monthNames[p.currentMonth]);
                $$('.calendar-custom-toolbar .pre .link').on('click', function() {
                    p.prevMonth();
                });
                $$('.calendar-custom-toolbar .next .link').on('click', function() {
                    p.nextMonth();
                });

            },
            onMonthYearChangeStart: function(p) {
                $$('.calendar-custom-toolbar .center .year').val(p.currentYear + '年');
                $$('.calendar-custom-toolbar .center .month').val(stringObj.text.monthNames[p.currentMonth]);
                reservationpaused_list = indexObj._dataStorage('reservationpaused_list') || '';
                if (reservationpaused_list) {
                    for (var i in reservationpaused_list) {
                        p.wrapper.find('.picker-calendar-day[data-date="' + reservationpaused_list[i].substring(0, 4) + '-' + (parseInt(reservationpaused_list[i].substring(5, 7)) - 1) + '-' + parseInt(reservationpaused_list[i].substring(8, 10)) + '"]').addClass('picker-calendar-day-has-events');
                    }
                }
                if (selectYear !== p.currentYear) {
                    selectYear = p.currentYear;
                    branchObj.query_couponreservation_year(branchData.sd_id, p.currentYear);
                }
            },
            //events: rObj.reservationpaused_list_year,
            onDayClick: function(p, dayContainer, year, month, day) {

                if ((parseInt(month) + 1) < 10) {
                    var theMonth = '0' + (parseInt(month) + 1);
                } else {
                    var theMonth = '' + (parseInt(month) + 1);
                }

                if ((parseInt(day)) < 10) {
                    var theDay = '0' + (parseInt(day));
                } else {
                    var theDay = '' + (parseInt(day));
                }

                reservationpaused_list = indexObj._dataStorage('reservationpaused_list') || '';

                if (reservationpaused_list.indexOf(year + '-' + theMonth + '-' + theDay) !== -1) {
                    branchObj.shopcouponreservationquery(branchData.sd_id, year + '-' + theMonth + '-' + theDay, 9);
                } else {
                    var temp = indexObj.template('templateReservationNull');
                    var item = temp('');
                    $$('.reservation-record .list-block ul').html(item);
                }


            }
        });



        var years = [];
        for (var i = 2017; i < new Date().getFullYear() + 2; i++) {
            years.push(i);
        }
        //年份
        var year_picker = myApp.picker({
            input: '.calendar-custom-toolbar .center .year',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.text.select_year + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0] + '年';
            },
            onOpen: function(p) {
                p.setValue([calendarReservation.currentYear]);
            },
            onClose: function(p) {
                if (parseInt(p.cols[0].value) !== calendarReservation.currentYear) {
                    calendarReservation.setYearMonth(parseInt(p.cols[0].value), stringObj.text.monthNames.indexOf($('.center .month').val()));
                }
            },
            cols: [{
                textAlign: 'center',
                values: years,
                width: '100%'
            }]
        });


        //月份
        var month_picker = myApp.picker({
            input: '.calendar-custom-toolbar .center .month',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.text.select_month + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onOpen: function(p) {
                //calendarReservation.setYearMonth($('.center .year').val().substring(0,4), calendarReservation.currentMonth);
                p.setValue([stringObj.text.monthNames[calendarReservation.currentMonth]]);
            },
            onClose: function(p) {
                if (p.cols[0].activeIndex !== calendarReservation.currentMonth) {
                    calendarReservation.setYearMonth($('.center .year').val().substring(0, 4), p.cols[0].activeIndex);
                }
            },
            cols: [{
                textAlign: 'center',
                values: stringObj.text.monthNames,
                width: '100%',
                onChange: function(picker, carmodel) {
                    //console.log(picker.cols[0].activeIndex);
                    //calendarReservation.setYearMonth($('.center .year').val().substring(0,4), picker.cols[0].activeIndex);
                }
            }]
        });

        $('.date-search-block .date').val(today.getFullYear() + '-' + month + '-' + dates + ' (' + stringObj.text.dayNames[today.getDay()] + ')');
        var calendarModal = myApp.calendar({
            input: '.date-search-block .date',
            dateFormat: 'yyyy-mm-dd (D)',
            firstDay: 0,
            monthNames: stringObj.text.monthNames,
            dayNamesShort: stringObj.text.dayNames,
            closeOnSelect: true,
            onOpen: function() {
                $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                    if ($$(el).text() == '六') {
                        $$(el).addClass('sat');
                    }
                });

                $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                    if ($$(el).text() == '日') {
                        $$(el).addClass('sun');
                    }
                });

            }
        });


        $('.date-search-block a').unbind('click');
        $('.date-search-block a').click(function(event) {
            branchObj.shopcouponreservationquery(branchData.sd_id, $('.date-search-block .date').val().substring(0, 10), 9);
        });
    },
    //未回覆預約清單
    noReplyReservationInit: function(page) {
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        branchObj.query_reservationreplystatus(branchData.sd_id);
    },
    serviceRecordInit: function(page) {
        branchObj.shopservicequequery(1, '', '');
    },
    //合作社問卷內容讀取
    shopquestionnaire_read: function(event_type, event_id) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);


        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopquestionnaire_read,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                event_type: event_type,
                event_id: event_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopquestionnaire_readresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopquestionnaire_readresult));
                    if (rObj.message_no === "000000000") {

                        $('.shop-coupon-img').attr('src', stringObj.text.branch_img_path + rObj.event_pic);

                        $('.shopcoupon_name').html(rObj.event_title);

                        rObj.questionnaire_content.sort(sortByProperty('sqn_questionorder', 1));

                        var temp = indexObj.template('templateQuestionnaire');
                        var item = temp(rObj);
                        $$('.question-block').html(item);

                        myApp.initImagesLazyLoad('.page-content');


                        //留言
                        $$('.sqna_message').on('click', function() {
                            myApp.alert('<textarea class="sqna_msg resizable" rows="9" placeholder="' + stringObj.text.input_limit70 + '" onkeyup="this.value = this.value.slice(0, 70)"></textarea>', stringObj.text.sqna_message);

                            $('.sqna_msg').val($('.sqna_message').val());

                            $('textarea.sqna_msg').focus();

                            $('.modal-button').click(function() {
                                $('.sqna_message').val($('.sqna_msg').val());
                            });
                        });


                        carModelArray = carModels.Alfa_Romeo[1];


                        var carModelPicker = myApp.picker({
                            input: '.carModels',
                            rotateEffect: false,
                            toolbarTemplate: '<div class="toolbar">' +
                                '<div class="toolbar-inner">' +
                                '<div class="left">' +
                                '<a href="#" class="link close-picker"></a>' +
                                '</div>' +
                                '<div class="right">' +
                                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                '</div>' +
                                '</div>' +
                                '</div>',
                            formatValue: function(p, values, displayValues) {
                                return values[0] + '  ' + values[1];
                            },
                            cols: [{
                                    textAlign: 'left',
                                    width: 180,
                                    values: ["Alfa_Romeo", "Aston_Martin", "Audi", "Bentley", "BMW", "Bugatti", "Buick", "Cadillac", "Chery", "Chrysler", "Citroen", "CMC", "Daihatsu", "DS", "Ferrari", "Fiat", "Ford", "Honda", "Hyundai", "Infiniti", "IVECO", "Jaguar", "Kia", "Lamborghini", "Land Rover", "Lexus", "Lotus", "Luxgen", "Maserati", "Mazda", "McLaren", "Mercedes_Benz", "Mini", "Mitsubishi", "Morgan", "Nissan", "Opel", "Peugeot", "Porsche", "Proton", "Renault", "Rolls_Royce", "Skoda", "Smart", "Ssangyong", "Subaru", "Suzuki", "Tesla", "Tobe", "Toyota", "Volkswagen", "Volvo"],
                                    onChange: function(picker, carbrand) {
                                        if (picker.cols[1].replaceValues) {
                                            picker.cols[1].replaceValues(carModels[carbrand][0]);
                                            carModelArray = carModels[carbrand][1];
                                        }
                                    }
                                },

                                {

                                    values: carModels.Alfa_Romeo[0],
                                    width: 180,
                                    onChange: function(picker, carmodel) {
                                        modelIndex = picker.cols[1].activeIndex;
                                    }
                                },
                            ]
                        });



                        $('.send').click(function() {

                            var answercontent = {
                                questionnaireanswer: []
                            };
                            for (var i in rObj.questionnaire_content) {
                                if ($('input[name=point-' + rObj.questionnaire_content[i].sqn_serno + ']:checked').val() != undefined) {
                                    answercontent.questionnaireanswer.push(JSON.parse($('input[name=point-' + rObj.questionnaire_content[i].sqn_serno + ']:checked').val()));
                                } else {
                                    myApp.alert('<div class="alert-text">' + stringObj.text.data_not_complete + '</div>', stringObj.text.warn);
                                    return;
                                }
                            }

                            var score = 0;

                            for (var i in answercontent.questionnaireanswer) {
                                score += parseInt(answercontent.questionnaireanswer[i].answer);
                            }

                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                event_type: event_type,
                                event_id: event_id,
                                answercontent: JSON.stringify(answercontent),
                                ci_serno: carModelArray[modelIndex],
                                sqna_message: $('.sqna_message').val(),
                                averagescore: score / answercontent.questionnaireanswer.length
                            };

                            branchObj.shopquestionnaire_ans(data);


                        });


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }

                        $('.modal-button').click(function() {
                            mainView.router.load({
                                url: 'mailbox'
                            });
                        });
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //合作社問卷答覆接收
    shopquestionnaire_ans: function(data) {

        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopquestionnaire_ans,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopquestionnaire_ansresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopquestionnaire_ansresult));
                    if (rObj.message_no === "011002000" || rObj.message_no === "011601003" || rObj.message_no === "011601004") {
                        var mainSg = indexObj._dataCookies(indexObj._storage.main);
                        mainSg.giftpoint = rObj.cos_end_giftpoint;
                        indexObj._dataCookies(indexObj._storage.main, mainSg, 'iscarmg.com');

                        if (rObj.message_no === "000000000") {
                            myApp.alert(stringObj.text.nowCoin + '：' + rObj.cos_end_giftpoint, stringObj.text.comment_finish);
                        } else {
                            stringObj.return_header(rObj.message_no);
                            if (_tip) {
                                myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                _tip = null;
                            }
                        }
                        //$$('.user-bonus').html(stringObj.text.coin + '：' + rObj.cos_end_giftpoint);

                        $('.modal-button').click(function() {
                            mainView.router.load({
                                url: 'mailbox'
                            });
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }

                        $('.modal-button').click(function() {
                            mainView.router.load({
                                url: 'mailbox'
                            });
                        });
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家活動用畢後評論
    shopQuestionnaireInit: function(page) {
        var q = page.query;

        var uml_object = JSON.parse(q.uml_object);

        $$('.left a').click(function() {
            window.history.back();
        });

        branchObj.shopquestionnaire_read(uml_object.Event_type, uml_object.Event_id);

    },
    //合作社商家回覆問卷留言
    shopquestionnaire_response: function(data) {
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopquestionnaire_response,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopquestionnaire_responseresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopquestionnaire_responseresult));
                    if (rObj.message_no === "010912000") {

                        myApp.toast(stringObj.text.reply_success, '', {}).show();

                        mainView.router.load({
                            url: 'shop/questionnaire-management',
                            reload: true
                        });


                    } else {
                        mainView.router.load({
                            url: 'shop/questionnaire-management',
                            reload: true
                        });
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //服務排隊管理
    shopServiceManagementInit: function(page) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        //開放排隊狀態
        var data;
        $('.service-checkbox').change(function() {
            branchData = indexObj._dataStorage(branchObj.storage.branchData);
            if ($(this).is(':checked')) {
                data = {
                    modacc: stringObj.shop.moduleaccount,
                    modvrf: Cookies.get('modvrf'),
                    sat: mainSg.sat,
                    sd_id: branchData.sd_id,
                    operation: '0'
                };
                branchObj.shoponoffoperation(data);
            } else {
                if (branchData.ssqm_dailyend) {
                    var nowDate = new Date();
                    var nowHour = nowDate.getHours();
                    var nowMin = nowDate.getMinutes();
                    var nowSec = nowDate.getSeconds();
                    if (nowHour < 10) {
                        nowHour = '0' + nowHour;
                    }
                    if (nowMin < 10) {
                        nowMin = '0' + nowMin;
                    }
                    if (nowSec < 10) {
                        nowSec = '0' + nowSec;
                    }
                    nowDate = parseInt('' + nowHour + nowMin + nowSec);
                    var dailyend = branchData.ssqm_dailyend.substring(0, 2) + branchData.ssqm_dailyend.substring(3, 5) + branchData.ssqm_dailyend.substring(6, 8);
                    dailyend = parseInt(dailyend);
                    if (nowDate > dailyend) {
                        data = {
                            modacc: stringObj.shop.moduleaccount,
                            modvrf: Cookies.get('modvrf'),
                            sat: mainSg.sat,
                            sd_id: branchData.sd_id,
                            operation: '2'
                        };
                    } else {
                        data = {
                            modacc: stringObj.shop.moduleaccount,
                            modvrf: Cookies.get('modvrf'),
                            sat: mainSg.sat,
                            sd_id: branchData.sd_id,
                            operation: '1'
                        };
                    }
                    branchObj.shoponoffoperation(data);
                }
            }
        });

        branchObj.shopservicelistquery(branchData.sd_id);

        branchObj.shopservicequequery(0, '', branchData.sd_id);

    },
    //服務設置
    shopServiceSettingInit: function(page) {

        var q = page.query;

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        $('.left a').attr('href', 'shop/shopservice-management?sd_id=' + branchData.sd_id);

        branchObj.shopservicelistquery(branchData.sd_id);

        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 2000);

        if (q.tab) {
            myApp.showTab('.' + q.tab);

            if (q.tab == 'shopservice-set') {
                $('.shopservice-set').html('');

                var temp = indexObj.template('templateShopServiceEditBtn');
                var item = temp('');
                $$('.toolbar-bottom .toolbar-inner').html(item);

                var mainSg = indexObj._dataCookies(indexObj._storage.main);
                var data = {
                    modacc: stringObj.shop.moduleaccount,
                    modvrf: Cookies.get('modvrf'),
                    sat: mainSg.sat,
                    sd_id: branchData.sd_id,
                    action_type: 2,
                    ssqm_weekstart: '',
                    ssqm_weekend: '',
                    ssqm_dailystart: '',
                    ssqm_dailyend: '',
                    ssqm_dayoffarray: ''
                };
                branchObj.shopservicefunctionadjust(data);
                $('.list').css('background', '#202020');
                $('.set').css('background', '#F26531');
                $('.floating-button').css('display', 'none');
                $('.toolbar-bottom').css('display', 'inherit');
            }

        }


        $$('.shopservice-list').on('show', function() {
            $$('.shopservice-list .shopservice-list-content ul').html('');
            branchObj.shopservicelistquery(branchData.sd_id);
            $('.list').css('background', '#F26531');
            $('.set').css('background', '#202020');
            $('.floating-button').css('display', 'flex');
            $('.toolbar-bottom').css('display', 'none');
        });


        $$('.shopservice-set').on('show', function() {
            $('.shopservice-set').html('');

            var temp = indexObj.template('templateShopServiceEditBtn');
            var item = temp('');
            $$('.toolbar-bottom .toolbar-inner').html(item);

            var mainSg = indexObj._dataCookies(indexObj._storage.main);
            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                action_type: 2,
                ssqm_weekstart: '',
                ssqm_weekend: '',
                ssqm_dailystart: '',
                ssqm_dailyend: '',
                ssqm_dayoffarray: ''
            };
            branchObj.shopservicefunctionadjust(data);
            $('.list').css('background', '#202020');
            $('.set').css('background', '#F26531');
            $('.floating-button').css('display', 'none');
            $('.toolbar-bottom').css('display', 'inherit');
        });
    },
    //服務排隊新增/修改
    shopServiceEditInit: function(page) {

        var q = page.query;

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        if (q.type == 'edit') {
            $('.toolbar.add').css('display', 'none');
            $('.toolbar.edit').css('display', 'inherit');
            branchObj.shopservicecontentquery(q.ssqd_id);
        } else {
            if (localStorage.getItem(branchObj.storage.imagePath)) {
                branchData.ssqd_mainpic = localStorage.getItem(branchObj.storage.imagePath);
                $$('.shopservice-img-block').html('<img data-src="' + stringObj.text.branch_img_path + localStorage.getItem(branchObj.storage.imagePath) + '" class="lazy shopservice-img" onerror=\'this.src = "../app/image/imgDefault.png"\'/><div class="edit-img"><i class="fa fa-pencil" aria-hidden="true"></i></div>');
            } else {
                branchData.ssqd_mainpic = '';
            }
            indexObj._dataStorage(branchObj.storage.branchData, branchData);
        }

        $('.left a').attr('href', 'shop/shopservice-setting?sd_id=' + branchData.sd_id);

        //服務名稱
        $$('.shopservice-name').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="名稱">', '服務名稱');

            $('.input-value').val($('#shopservice-name').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#shopservice-name').val($('.input-value').val());
            });
        });

        //服務費用
        $$('.shopservice-price').on('click', function() {
            myApp.alert('<input class="input-value" type="number" min="0" placeholder="金額" onkeydown="input_limit(this, 10);" onkeyup="input_limit(this, 10);">', '服務費用');

            $('.input-value').val($('#shopservice-price').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#shopservice-price').val($('.input-value').val());
            });
        });

        //最大排隊數
        $$('.shopservice-maxnum').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="人數">', '最大排隊數');

            $('.input-value').val($('#shopservice-maxnum').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#shopservice-maxnum').val($('.input-value').val());
            });
        });

        //簡介內容
        $$('.shopservice-context').on('click', function() {
            myApp.alert('<textarea class="info resizable" placeholder="內容" rows="9"></textarea>', '簡介內容');

            $('.info').val($('#shopservice-context').val());

            $('textarea.info').focus();

            $('.modal-button').click(function() {
                $('#shopservice-context').val($('.info').val());
            });
        });

        //作業工時
        var pickerRequireTime = myApp.picker({
            input: '.page:not(.cached) #shopservice-require-time',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">所需工時</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + ' 小時 ' + values[1] + ' 分鐘 ';
            },
            cols: [
                // Hours
                {
                    textAlign: 'center',
                    values: (function() {
                        var arr = [];
                        for (var i = 0; i <= 23; i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' 小時 '
                },
                // Minutes
                {
                    values: (function() {
                        var arr = ['00', '30'];
                        return arr;
                    })(),
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' 分鐘 '
                }

            ]
        });


        //編輯照片
        $('.edit-img').click(function() {
            if (Cookies.get('app_version') !== undefined) {
                addImage('branch-service', '');
            } else {
                setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopservice', '');
            }
        });

        //新增
        $('.add').click(function() {


            $('.shopservice-name').removeClass('lengthError');
            $('.shopservice-context').removeClass('lengthError');
            $('.shopservice-name').removeClass('spacesError');
            $('.shopservice-price').removeClass('spacesError');
            $('.shopservice-maxnum').removeClass('spacesError');
            $('.shopservice-name').removeClass('nullError');
            $('.shopservice-require-time').removeClass('nullError');
            $('.shopservice-price').removeClass('nullError');
            $('.shopservice-maxnum').removeClass('nullError');
            $('.shopservice-context').removeClass('nullError');

            $('.noSetImg').css('display', 'none');


            var isError = false;


            //長度判斷
            if ($('#shopservice-name').val().length > 20) {
                $('.shopservice-name').addClass('lengthError');
                isError = true;
            }

            if ($('#shopservice-context').val().length > 140) {
                $('.shopservice-context').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('#shopservice-name').val().indexOf(" ") !== -1) {
                $('.shopservice-name').addClass('spacesError');
                isError = true;
            }
            if ($('#shopservice-price').val().indexOf(" ") !== -1) {
                $('.shopservice-price').addClass('spacesError');
                isError = true;
            }
            if ($('#shopservice-maxnum').val().indexOf(" ") !== -1) {
                $('.shopservice-maxnum').addClass('spacesError');
                isError = true;
            }


            branchData = indexObj._dataStorage(branchObj.storage.branchData);


            //填寫判斷
            if (branchData.ssqd_mainpic === '') {
                $('.noSetImg').css('display', 'inherit');
                isError = true;
            }
            if ($('#shopservice-name').val() === "") {
                $('.shopservice-name').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-require-time').val() === "") {
                $('.shopservice-require-time').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-price').val() === "") {
                $('.shopservice-price').addClass('nullError');
                isError = true;
            }
            if ($('#price').val() === "") {
                $('.price').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-maxnum').val() === "") {
                $('.shopservice-maxnum').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-context').val() === "") {
                $('.shopservice-context').addClass('nullError');
                isError = true;
            }


            if (isError) {
                myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                if (browser_width < 992) {
                    $('.toast-container').css('width', '40%');
                    $('.toast-container').css('left', '45%');
                } else {
                    $('.toast-container').css('width', '15%');
                    $('.toast-container').css('left', '47.5%');
                }
            }

            if (branchData.ssqd_mainpic.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                branchData.ssqd_mainpic = branchData.ssqd_mainpic.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                indexObj._dataStorage(branchObj.storage.branchData, branchData);
            }


            var mainSg = indexObj._dataCookies(indexObj._storage.main);

            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                action_type: 0,
                ssqd_id: '',
                ssqd_title: $('#shopservice-name').val(),
                ssqd_content: $('#shopservice-context').val(),
                ssqd_mainpic: branchData.ssqd_mainpic,
                ssqd_workhour: ((parseInt($('#shopservice-require-time').val().substring(0, 2)) * 60) + parseInt($('#shopservice-require-time').val().substring(6, 8))) / 30,
                ssqd_serviceprice: $('#shopservice-price').val(),
                ssqd_effectivity: 0,
                ssqd_maxqueueamount: $('#shopservice-maxnum').val()
            };

            //console.log(JSON.stringify(data));

            if (!isError) {
                branchObj.shopservicemanage(data);
            }
        });

        //修改
        $('.edit').click(function() {


            $('.shopservice-name').removeClass('lengthError');
            $('.shopservice-context').removeClass('lengthError');
            $('.shopservice-name').removeClass('spacesError');
            $('.shopservice-price').removeClass('spacesError');
            $('.shopservice-maxnum').removeClass('spacesError');
            $('.shopservice-name').removeClass('nullError');
            $('.shopservice-require-time').removeClass('nullError');
            $('.shopservice-price').removeClass('nullError');
            $('.shopservice-maxnum').removeClass('nullError');
            $('.shopservice-context').removeClass('nullError');

            $('.noSetImg').css('display', 'none');


            var isError = false;


            //長度判斷
            if ($('#shopservice-name').val().length > 20) {
                $('.shopservice-name').addClass('lengthError');
                isError = true;
            }

            if ($('#shopservice-context').val().length > 140) {
                $('.shopservice-context').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('#shopservice-name').val().indexOf(" ") !== -1) {
                $('.shopservice-name').addClass('spacesError');
                isError = true;
            }
            if ($('#shopservice-price').val().indexOf(" ") !== -1) {
                $('.shopservice-price').addClass('spacesError');
                isError = true;
            }
            if ($('#shopservice-maxnum').val().indexOf(" ") !== -1) {
                $('.shopservice-maxnum').addClass('spacesError');
                isError = true;
            }


            branchData = indexObj._dataStorage(branchObj.storage.branchData);


            //填寫判斷
            if (branchData.ssqd_mainpic === '') {
                $('.noSetImg').css('display', 'inherit');
                isError = true;
            }
            if ($('#shopservice-name').val() === "") {
                $('.shopservice-name').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-require-time').val() === "") {
                $('.shopservice-require-time').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-price').val() === "") {
                $('.shopservice-price').addClass('nullError');
                isError = true;
            }
            if ($('#price').val() === "") {
                $('.price').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-maxnum').val() === "") {
                $('.shopservice-maxnum').addClass('nullError');
                isError = true;
            }
            if ($('#shopservice-context').val() === "") {
                $('.shopservice-context').addClass('nullError');
                isError = true;
            }


            if (isError) {
                myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                if (browser_width < 992) {
                    $('.toast-container').css('width', '40%');
                    $('.toast-container').css('left', '45%');
                } else {
                    $('.toast-container').css('width', '15%');
                    $('.toast-container').css('left', '47.5%');
                }
            }


            if (branchData.ssqd_mainpic.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                branchData.ssqd_mainpic = branchData.ssqd_mainpic.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                indexObj._dataStorage(branchObj.storage.branchData, branchData);
            }


            var mainSg = indexObj._dataCookies(indexObj._storage.main);

            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                action_type: 1,
                ssqd_id: q.ssqd_id,
                ssqd_title: $('#shopservice-name').val(),
                ssqd_content: $('#shopservice-context').val(),
                ssqd_mainpic: branchData.ssqd_mainpic,
                ssqd_workhour: ((parseInt($('#shopservice-require-time').val().substring(0, 2)) * 60) + parseInt($('#shopservice-require-time').val().substring(6, 8))) / 30,
                ssqd_serviceprice: $('#shopservice-price').val(),
                ssqd_effectivity: 0,
                ssqd_maxqueueamount: $('#shopservice-maxnum').val()
            };

            //console.log(JSON.stringify(data));

            if (!isError) {
                branchObj.shopservicemanage(data);
            }
        });



    },
    //商家今日過號
    shopServicePassInit: function(page) {

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        $('.left a').attr('href', 'shop/shopservice-management?sd_id=' + branchData.sd_id);

        branchObj.shopservicequequery(0, '', '');

    },
    //商家記錄查看
    shopRecordInit: function(page) {

        $$('.tab-link').click(function() {
            $$('.tab-link').removeClass('active');
            $$(this).addClass('active');
        });

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        branchObj.shopcouponreservationquery(branchData.sd_id);

        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 2000);

        $$('.reservation-record').on('show', function() {
            $$('.reservation-record').html('');
            branchObj.shopcouponreservationquery(branchData.sd_id);
        });

        $$('.service-record').on('show', function() {
            $$('.service-record').html('');
            branchObj.shopservicequequery(1, '', '');
        });

        $$('.scan-record').on('show', function() {
            branchObj.scanRecordGet();
        });
    },
    //銷售/服務紀錄
    shopRecordsInit: function(page) {
        $('.shop-records-center').html(stringObj.shop.shop_records);
    },
    //商家排隊內容
    shopServiceinfoInit: function(page) {
        var q = page.query;

        if (q.from == 'client') {
            $('.left a').attr('href', 'branch-info?tab=branch-queue-content&sd_id=' + nowSd_id);
            $('.left a').unbind('click');
            $('.left a').click(function() {
                localStorage.setItem('pageInit', 'shop/shopservice-info');
                window.location = 'pm/branch-info?tab=branch-queue-content&sd_id=' + nowSd_id;
            });

        } else if (q.from == 'setting') {
            $('.left a').attr('href', 'shop/shopservice-setting');
            $('.queue').css('display', 'none');
        } else if (q.type) {
            $('.queue').css('display', 'none');
            if (q.type == 'service_available' || q.type == 'service_finish' || q.type == 'service_invalid') {
                $('.left a').attr('href', 'coupon-record?tab=queue');
            } else if (q.type == 'scan') {
                $('.left a').attr('href', 'shop/shopservice-management');
                $('.serving').css('display', 'inherit');
            }
            if (q.type == 'service_available') {
                $('.showQR').css('display', 'inherit');
            }
        }

        if (q.type) {
            branchObj.shopservicecontentquery(q.ssqd_id, q.type, q.ssqq_id);
        } else {
            branchObj.shopservicecontentquery(q.ssqd_id, '', '');
        }



        $('.queue').click(function() {
            queue(q.ssqd_id);
        });

    },
    //商家服務排隊項目列表查詢
    shopservicelistquery: function(sd_id) {
        nowSd_id = sd_id;
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicelistquery,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sd_id: sd_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicelistqueryresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicelistqueryresult));
                    if (rObj.message_no === "000000000") {

                        if (nowPage == 'shopservice-management') {

                            var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                            branchData.ssqm_dailyend = rObj.ssqm_dailyend;
                            indexObj._dataStorage(branchObj.storage.branchData, branchData);

                            if (rObj.ssqm_servicestart == '1') {
                                $('.service-checkbox').prop('checked', true);
                            }


                            if (rObj.servicelist == '') {
                                dataNull('templateShopServiceListNull', stringObj.text.no_service, '.serving-list');
                            } else {
                                var callTimeObj = indexObj._dataStorage(branchObj.storage.callTimeObj) || [];
                                var callTimeObj_str = JSON.stringify(callTimeObj);
                                for (var i in rObj.servicelist) {
                                    rObj.servicelist[i].ssqd_mainpic = stringObj.text.branch_img_path + rObj.servicelist[i].ssqd_mainpic;

                                    if (rObj.servicelist[i].ssqd_effectivity == '0') {
                                        rObj.servicelist[i].effectivity = false;
                                    } else {
                                        rObj.servicelist[i].effectivity = true;
                                    }

                                    if (callTimeObj_str.match(rObj.servicelist[i].ssqd_id)) {
                                        findArrayItem(callTimeObj, 'ssqd_id', rObj.servicelist[i].ssqd_id);
                                        rObj.servicelist[i].call_time = callTimeObj[nowIndex].call_time;
                                    } else {
                                        rObj.servicelist[i].call_time = '';
                                    }
                                }
                                var temp = indexObj.template('templateShopServiceList');
                                var item = temp(rObj);
                                $$('.serving-list ul').html(item);
                                myApp.initImagesLazyLoad('.page-content');
                            }

                        } else if (nowPage == 'shopservice-setting') {
                            if (rObj.servicelist == '') {
                                var temp = indexObj.template('templateShopServiceNull');
                                var item = temp('');
                                $$('.shopservice-list-content').html(item);
                            } else {
                                for (var i in rObj.servicelist) {
                                    rObj.servicelist[i].ssqd_mainpic = stringObj.text.branch_img_path + rObj.servicelist[i].ssqd_mainpic;
                                    if (rObj.servicelist[i].ssqd_effectivity == '0') {
                                        rObj.servicelist[i].ssqd_effectivity = stringObj.text.stop_use;
                                        rObj.servicelist[i].effectivity = false;
                                    } else {
                                        rObj.servicelist[i].ssqd_effectivity = stringObj.text.start_use;
                                        rObj.servicelist[i].effectivity = true;
                                    }
                                }
                                var temp = indexObj.template('templateShopService');
                                var item = temp(rObj);
                                $$('.shopservice-list-content ul').html(item);
                                myApp.initImagesLazyLoad('.page-content');

                                $('.check').click(function() {
                                    myApp.alert(stringObj.text.shopservice_edit_check, stringObj.text.warn);
                                });
                            }
                        } else if (nowPage == 'branch-info') {


                            if (rObj.servicelist == '') {
                                var temp = indexObj.template('templateBranchQueueNull');
                                var item = temp('');
                                $$('.branch-queue-content .serving-list').html(item);
                            } else {
                                var ssqd_ids = [];
                                for (var i in rObj.servicelist) {
                                    rObj.servicelist[i].ssqd_mainpic = stringObj.text.branch_img_path + rObj.servicelist[i].ssqd_mainpic;
                                    if (rObj.servicelist[i].ssqd_effectivity == '0') {
                                        rObj.servicelist[i].effectivity = false;
                                    } else {
                                        rObj.servicelist[i].effectivity = true;
                                        ssqd_ids.push(rObj.servicelist[i].ssqd_id);
                                    }
                                }
                                var temp = indexObj.template('templateBranchQueue');
                                var item = temp(rObj);
                                $$('.branch-queue-content .serving-list ul').html(item);
                                myApp.initImagesLazyLoad('.branch-queue-content');

                                $('.item-' + ssqd_ids[0]).addClass('active');


                                $('.list-item').click(function() {
                                    $('.list-item').removeClass('active');
                                    $(this).addClass('active');
                                });


                                //數字累加特效
                                var options = {
                                    useEasing: true,
                                    useGrouping: true,
                                    separator: ',',
                                    decimal: '.',
                                    prefix: '',
                                    suffix: ''
                                };
                                findArrayItem(rObj.servicelist, 'ssqd_id', ssqd_ids[0]);

                                var now_queue_num = new CountUp(".now-queue-num", 0, parseInt(rObj.servicelist[nowIndex].today_serviced), 0, 1, options);
                                now_queue_num.start();
                                var queue_sum = new CountUp(".queue-sum", 0, parseInt(rObj.today_tatal), 0, 1, options);
                                queue_sum.start();
                                var shopServiceRecord = indexObj._dataStorage(branchObj.storage.shopServiceRecord) || {
                                    last_update_date: '',
                                    availableList: [],
                                    finishList: [],
                                    invalidList: []
                                };
                                if (JSON.stringify(shopServiceRecord.availableList).match(ssqd_ids[0])) {

                                    var date = new Date();
                                    var month = (date.getMonth() + 1);
                                    var dates = date.getDate();
                                    if (month < 10) {
                                        month = '0' + month;
                                    }
                                    if (dates < 10) {
                                        dates = '0' + dates;
                                    }
                                    var today = new Date(date.getFullYear() + '/' + month + '/' + dates) / (1000 * 60 * 60 * 24); //當前時間
                                    var last_update_date = new Date(shopServiceRecord.last_update_date) / (1000 * 60 * 60 * 24); //最後排隊時間


                                    //排隊編號初始化
                                    if (today - last_update_date >= 1) {
                                        var user_num = new CountUp(".user-num", 0, 0, 0, 1, options);
                                    } else {
                                        //findArrayItem(shopServiceRecord.availableList, 'ssqd_id', ssqd_ids[0]);
                                        var user_num = new CountUp(".user-num", 0, parseInt(shopServiceRecord.availableList[0].ssqq_queserno), 0, 1, options);
                                    }

                                    user_num.start();
                                } else {
                                    var user_num = new CountUp(".user-num", 0, 0, 0, 1, options);
                                    user_num.start();
                                }



                            }

                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家管理自有供排隊服務項目
    shopservicemanage: function(data) {

        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicemanage,
            para: data,
            success: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicemanageresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicemanageresult));
                    if (rObj.message_no === "000000000") {

                        if (nowPage == 'shopservice-edit') {

                            indexObj._dataStorage(branchObj.storage.imagePath, null);

                            var branchData = indexObj._dataStorage(branchObj.storage.branchData);

                            if (isMobile.Android()) {
                                webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, branchData.ssqd_mainpic, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                            } else if (isMobile.iOS()) {
                                var sd_shopphotopath = [];
                                sd_shopphotopath.push(branchData.ssqd_mainpic);
                                webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, sd_shopphotopath, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', []);
                            }

                        }

                        if (data.action_type == '1') {
                            myApp.toast(stringObj.text.edit_success, '', {}).show();
                        } else if (data.action_type == '0') {
                            myApp.toast(stringObj.text.add_success, '', {}).show();
                        }

                        mainView.router.load({
                            url: 'shop/shopservice-setting',
                            reload: true
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家服務排隊項目內容查詢
    shopservicecontentquery: function(ssqd_id, type, ssqq_id) {
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicecontentquery,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                ssqd_id: ssqd_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicecontentqueryresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicecontentqueryresult));
                    if (rObj.message_no === "000000000") {
                        var ssqd_workhour_h = parseInt(parseFloat(rObj.ssqd_workhour) * 30 / 60);
                        var ssqd_workhour_m = parseInt(parseFloat(rObj.ssqd_workhour) * 30 % 60);
                        rObj.ssqd_workhour = ssqd_workhour_h + '小時' + ssqd_workhour_m + '分鐘';

                        if (nowPage == 'shopservice-info') {
                            rObj.ssqd_mainpic = stringObj.text.branch_img_path + rObj.ssqd_mainpic;

                            var temp = indexObj.template('templateShopServiceInfo');
                            var item = temp(rObj);
                            $$('.shopservice-info-content').html(item);
                            myApp.initImagesLazyLoad('.page-content');

                            if (type == 'scan') {
                                var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                                $('.subTitle').css('display', 'inherit');
                                $('.client-info').css('display', 'inherit');
                                $('.client-pic').attr('src', branchData.client_pic);
                                $('.client-name').html(branchData.client_name);
                                $('.client-num').html(branchData.client_num);
                                $('.client-date').html(branchData.client_date);
                            }

                            $('.showQR').click(function() {
                                var Today = new Date();
                                var nowDate = Today.getFullYear() + "/" + (Today.getMonth() + 1) + "/" + Today.getDate() + ' ' + Today.getHours() + ':' + Today.getMinutes() + ':' + Today.getSeconds();


                                var shopServiceRecord = indexObj._dataStorage(branchObj.storage.shopServiceRecord);
                                var ssqq_queserno;
                                if (type == 'service_available') {
                                    findArrayItem(shopServiceRecord.availableList, 'ssqq_id', ssqq_id);
                                    ssqq_queserno = shopServiceRecord.availableList[nowIndex].ssqq_queserno;
                                }

                                var qrCode = '{"ssqd_id":"' + ssqd_id + '","ssqq_id":"' + ssqq_id + '","ssqq_queserno":"' + ssqq_queserno + '","nowDate":"' + nowDate + '"}';

                                myApp.modal({
                                    title: '',
                                    text: '<div class="qr-content">' +
                                        '<div class="qr-title">' + stringObj.text.service_qr_title + '</div>' +
                                        '<div class="qr-code"></div>' +
                                        '<p class="qr-use-title"><b style="color:#F26531;">' + stringObj.text.qr_subtitle + '：</b></p>' +
                                        '<p class="qr-use-content">' + stringObj.text.service_qr_context + '</p>' +
                                        '</div>',
                                    buttons: [{
                                        text: stringObj.text.confirm,
                                        bold: true,
                                        onClick: function() {

                                        }
                                    }]
                                });

                                $(".qr-code").qrcode({
                                    "render": "div",
                                    "size": 235,
                                    "background": "#fff",
                                    "text": qrCode
                                });

                                $('.modal').css("top", "30%");
                                $('.modal').css("width", "270px");
                            });


                            $('.serving').click(function() {
                                branchObj.shopserviceexec(ssqd_id, ssqq_id);
                            });

                        } else if (nowPage == 'shopservice-edit') {
                            var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                            branchData.ssqd_mainpic = rObj.ssqd_mainpic;
                            indexObj._dataStorage(branchObj.storage.branchData, branchData);

                            if (localStorage.getItem(branchObj.storage.imagePath)) {
                                rObj.ssqd_mainpic = stringObj.text.branch_img_path + localStorage.getItem(branchObj.storage.imagePath);
                                branchData.ssqd_mainpic = localStorage.getItem(branchObj.storage.imagePath);
                                indexObj._dataStorage(branchObj.storage.branchData, branchData);
                            } else {
                                rObj.ssqd_mainpic = stringObj.text.branch_img_path + rObj.ssqd_mainpic;
                            }

                            $$('.shopservice-img-block').html('<img data-src="' + rObj.ssqd_mainpic + '" class="lazy shopservice-img" onerror=\'this.src = "../app/image/imgDefault.png"\'/><div class="edit-img"><i class="fa fa-pencil" aria-hidden="true"></i></div>');

                            $('#shopservice-name').val(rObj.ssqd_title);
                            $('#shopservice-require-time').val(rObj.ssqd_workhour);
                            $('#shopservice-price').val(rObj.ssqd_serviceprice);
                            $('#shopservice-maxnum').val(rObj.ssqd_maxqueueamount);
                            $('#shopservice-context').val(rObj.ssqd_content);

                            myApp.initImagesLazyLoad('.page-content');

                            //編輯照片
                            $('.edit-img').click(function() {
                                if (isMobile.Android() || isMobile.iOS()) {
                                    addImage('branch-service', '');
                                } else {
                                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopservice', '');
                                }

                            });

                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家通知伺服器當日服務啟動終止操作
    shoponoffoperation: function(data) {
        //console.log(JSON.stringify(data));
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shoponoffoperation,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shoponoffoperationresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shoponoffoperationresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "010917004") {

                        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                        branchData.ssqm_dailyend = rObj.ssqm_dailyend;
                        indexObj._dataStorage(branchObj.storage.branchData, branchData);

                        if (data.operation == '2') {
                            indexObj._dataStorage(branchObj.storage.callTimeObj, null);
                        }

                    } else {
                        if (rObj.message_no != "010920002") {
                            if ($('.service-checkbox').is(':checked')) {
                                $('.service-checkbox').prop('checked', false);
                            } else {
                                $('.service-checkbox').prop('checked', true);
                            }
                        }

                        if (rObj.message_no != "010920003") {
                            if ($('.service-checkbox').is(':checked')) {
                                $('.service-checkbox').prop('checked', false);
                            } else {
                                $('.service-checkbox').prop('checked', true);
                            }
                        }

                        if (rObj.message_no != "010920004") {
                            if ($('.service-checkbox').is(':checked')) {
                                $('.service-checkbox').prop('checked', false);
                            } else {
                                $('.service-checkbox').prop('checked', true);
                            }
                        }


                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家調整服務排隊相關基本數據
    shopservicefunctionadjust: function(data) {
        //console.log(JSON.stringify(data));
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicefunctionadjust,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicefunctionadjustresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicefunctionadjustresult));
                    if (rObj.message_no === "000000000") {

                        var temp = indexObj.template('templateShopServiceSet');
                        var item = temp('');
                        $$('.shopservice-set').html(item);

                        var ssqm_dayoffarray = [];
                        var ssqm_dayoff;
                        if (rObj.ssqm_dayoffarray != '') {
                            rObj.ssqm_dayoffarray = rObj.ssqm_dayoffarray.replace(/-/ig, "/");
                            for (var i in rObj.ssqm_dayoffarray.split(',')) {
                                ssqm_dayoff = new Date(rObj.ssqm_dayoffarray.split(',')[i]).getTime();
                                ssqm_dayoffarray.push(ssqm_dayoff);
                            }
                        }

                        //公休日設置
                        var calendarMultiple = myApp.calendar({
                            container: '#calendar-holidays',
                            multiple: true,
                            firstDay: 0,
                            monthNames: stringObj.text.monthNames,
                            value: ssqm_dayoffarray
                        });

                        if (rObj.ssqm_weekstart != '' && rObj.ssqm_weekend != '') {
                            $('#service-date').val('星期' + rObj.ssqm_weekstart + ' ~ ' + '星期' + rObj.ssqm_weekend);
                        }

                        if (rObj.ssqm_dailystart != '' && rObj.ssqm_dailyend != '') {
                            $('#service-time').val(rObj.ssqm_dailystart.substring(0, 5) + ' ~ ' + rObj.ssqm_dailyend.substring(0, 5));
                        }


                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                            if ($$(el).text() == 'Sat') {
                                $$(el).addClass('sat');
                            }
                        });

                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                            if ($$(el).text() == 'Sun') {
                                $$(el).addClass('sun');
                            }
                        });


                        //每周服務日
                        var pickerDate = myApp.picker({
                            input: '#service-date',
                            rotateEffect: false,
                            toolbarTemplate: '<div class="toolbar">' +
                                '<div class="toolbar-inner">' +
                                '<div class="left">' +
                                '<a href="#" class="link close-picker"></a>' +
                                '</div>' +
                                '<div class="right">' +
                                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                '</div>' +
                                '</div>' +
                                '</div>',
                            formatValue: function(p, values, displayValues) {
                                return values[0] + ' ~ ' + values[1];
                            },
                            cols: [{
                                    values: stringObj.text.week_array,
                                    textAlign: 'center',
                                    width: 120

                                },
                                // Divider
                                {
                                    textAlign: 'center',
                                    divider: true,
                                    content: ' ~ '
                                }, {
                                    values: stringObj.text.week_array,
                                    textAlign: 'center',
                                    width: 120

                                }

                            ]
                        });


                        //每日服務時間
                        var pickerTime = myApp.picker({
                            input: '.page:not(.cached) #service-time',
                            rotateEffect: false,
                            toolbarTemplate: '<div class="toolbar">' +
                                '<div class="toolbar-inner">' +
                                '<div class="left">' +
                                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                '</div>' +
                                '<div class="center">活動每日時間</div>' +
                                '<div class="right">' +
                                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                '</div>' +
                                '</div>' +
                                '</div>',
                            formatValue: function(p, values, displayValues) {
                                return values[0] + ':' + values[1] + ' ~ ' + values[2] + ':' + values[3];
                            },
                            onOpen: function(p) {
                                p.setValue([rObj.ssqm_dailystart.substring(0, 2), rObj.ssqm_dailystart.substring(3, 5), rObj.ssqm_dailyend.substring(0, 2), rObj.ssqm_dailyend.substring(3, 5)]);
                            },
                            cols: [
                                // Hours
                                {
                                    textAlign: 'center',
                                    values: (function() {
                                        var arr = [];
                                        for (var i = 0; i <= 23; i++) {
                                            arr.push(i < 10 ? '0' + i : i);
                                        }
                                        return arr;
                                    })(),
                                },
                                // Divider
                                {
                                    textAlign: 'center',
                                    divider: true,
                                    content: ':'
                                },
                                // Minutes
                                {
                                    values: (function() {
                                        var arr = ['00', '30'];
                                        return arr;
                                    })(),
                                },
                                // Divider
                                {
                                    textAlign: 'center',
                                    divider: true,
                                    content: ' ~ '
                                },
                                // Hours
                                {
                                    textAlign: 'center',
                                    values: (function() {
                                        var arr = [];
                                        for (var i = 0; i <= 23; i++) {
                                            arr.push(i < 10 ? '0' + i : i);
                                        }
                                        return arr;
                                    })(),
                                },
                                // Divider
                                {
                                    textAlign: 'center',
                                    divider: true,
                                    content: ':'
                                },
                                // Minutes
                                {
                                    textAlign: 'center',
                                    values: (function() {
                                        var arr = ['00', '30'];
                                        return arr;
                                    })(),
                                }

                            ]
                        });

                        $('.edit').click(function() {

                            $('.service-date').removeClass('nullError');
                            $('.service-time').removeClass('nullError');

                            var isError = false;

                            if ($('#service-date').val() === "") {
                                $('.service-date').addClass('nullError');
                                isError = true;
                            }
                            if ($('#service-time').val() === "") {
                                $('.service-time').addClass('nullError');
                                isError = true;
                            }

                            if (isError) {
                                myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                                if (browser_width < 992) {
                                    $('.toast-container').css('width', '40%');
                                    $('.toast-container').css('left', '45%');
                                } else {
                                    $('.toast-container').css('width', '15%');
                                    $('.toast-container').css('left', '47.5%');
                                }
                            }

                            ssqm_dayoffarray = [];
                            var month;
                            var dates;
                            for (var i in calendarMultiple.value) {
                                ssqm_dayoff = new Date(calendarMultiple.value[i]);
                                month = ssqm_dayoff.getMonth() + 1;
                                dates = ssqm_dayoff.getDate();
                                if (month < 10) {
                                    month = '0' + month;
                                }
                                if (dates < 10) {
                                    dates = '0' + dates;
                                }
                                ssqm_dayoff = ssqm_dayoff.getFullYear() + '-' + month + '-' + dates;
                                ssqm_dayoffarray.push(ssqm_dayoff);
                            }

                            var mainSg = indexObj._dataCookies(indexObj._storage.main);
                            var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                sd_id: branchData.sd_id,
                                action_type: 1,
                                ssqm_weekstart: $('#service-date').val().substring(2, 3),
                                ssqm_weekend: $('#service-date').val().substring(8, 9),
                                ssqm_dailystart: $('#service-time').val().substring(0, 5) + ':00',
                                ssqm_dailyend: $('#service-time').val().substring(8, 13) + ':00',
                                ssqm_dayoffarray: ssqm_dayoffarray + ''
                            };

                            if (rObj.ssqm_weekstart == '' && rObj.ssqm_dailystart == '') {
                                data.action_type = 0;
                            }


                            if (!isError) {
                                branchObj.shopservicefunctionadjust(data);
                            }
                        });

                        if (data.action_type != 2) {
                            mainView.router.load({
                                url: 'shop/shopservice-setting?tab=shopservice-set',
                                reload: true
                            });
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //用戶選擇服務項目進行排隊
    shopservicequeask: function(data) {
        //console.log(JSON.stringify(data));
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicequeask,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicequeaskresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicequeaskresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "010914000") {

                        //myApp.toast(stringObj.text.queue_success, '', {}).show();

                        var Today = new Date();
                        var nowDate = Today.getFullYear() + "/" + (Today.getMonth() + 1) + "/" + Today.getDate() + ' ' + Today.getHours() + ':' + Today.getMinutes() + ':' + Today.getSeconds();
                        var qrCode = '{"ssqd_id":"' + data.ssqd_id + '","ssqq_id":"' + rObj.ssqq_id + '","ssqq_queserno":"' + rObj.ssqq_queserno + '","nowDate":"' + nowDate + '"}';

                        myApp.modal({
                            title: '',
                            text: '<div class="qr-content">' +
                                '<div class="qr-title">' + stringObj.text.service_qr_title + '</div>' +
                                '<div class="qr-code"></div>' +
                                '<p class="qr-use-title"><b style="color:#F26531;">' + stringObj.text.qr_subtitle + '：</b></p>' +
                                '<p class="qr-use-content">' + stringObj.text.service_qr_context + '</p>' +
                                '</div>',
                            buttons: [{
                                text: stringObj.text.confirm,
                                bold: true,
                                onClick: function() {
                                    branchObj.shopservicequerecorver();
                                }
                            }]
                        });

                        $(".qr-code").qrcode({
                            "render": "div",
                            "size": 235,
                            "background": "#fff",
                            "text": qrCode
                        });

                        $('.modal').css("top", "30%");
                        $('.modal').css("width", "270px");

                        //                        mainView.router.load({
                        //                            url: 'branch-info?tab=branch-queue-content&sd_id=' + nowSd_id,
                        //                            reload: true
                        //                        });
                        localStorage.setItem('pageInit', nowPage);
                        window.location = 'branch-info?tab=branch-queue-content&sd_id=' + nowSd_id;

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //查詢指定商家近日之排隊狀況
    shopservicequequery: function(operation_type, ssqd_id, sd_id) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id,
            operation_type: operation_type
        };
        //console.log(sd_id);
        if (sd_id == '') {
            data.sd_id = branchData.sd_id;
        }
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicequequery,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicequequeryresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicequequeryresult));
                    if (rObj.message_no === "000000000") {

                        if (nowPage == 'branch-main' || nowPage == 'shopservice-pass') {

                            if (rObj.serviceque_array[0].queue_array != "") {

                                var date = new Date();
                                var month = (date.getMonth() + 1);
                                var dates = date.getDate();
                                if (month < 10) {
                                    month = '0' + month;
                                }
                                if (dates < 10) {
                                    dates = '0' + dates;
                                }

                                if (rObj.serviceque_array[0].date.match(date.getFullYear() + '-' + month + '-' + dates)) {
                                    var size = 0;
                                    for (var j in rObj.serviceque_array[0].queue_array) {
                                        if (rObj.serviceque_array[0].queue_array[j].ssqq_usestatus == '1' && nowPage == 'branch-main') {
                                            rObj.serviceque_array[0].queue_array[j].ssqq_usestatus = true;
                                            size++;
                                        } else if (rObj.serviceque_array[0].queue_array[j].ssqq_usestatus == '7' && nowPage == 'shopservice-pass') {
                                            rObj.serviceque_array[0].queue_array[j].ssqq_usestatus = true;
                                            size++;
                                        } else {
                                            rObj.serviceque_array[0].queue_array[j].ssqq_usestatus = false;
                                        }
                                        if (rObj.serviceque_array[0].queue_array[j].ssd_picturepath == '') {
                                            rObj.serviceque_array[0].queue_array[j].ssd_picturepath = '../app/image/general_user.png';
                                        } else {
                                            if (rObj.serviceque_array[0].queue_array[j].ssd_picturepath.match('square')) {
                                                rObj.serviceque_array[0].queue_array[j].ssd_picturepath = rObj.serviceque_array[0].queue_array[j].ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                                            } else {
                                                rObj.serviceque_array[0].queue_array[j].ssd_picturepath = rObj.serviceque_array[0].queue_array[j].ssd_picturepath;
                                            }
                                        }
                                        findArrayItem(carModelArray, 'ci_serno', parseInt(rObj.serviceque_array[0].queue_array[j].ci_serno));
                                        rObj.serviceque_array[0].queue_array[j].car_model = carModelArray[nowIndex].ci_carbrand + '  ' + carModelArray[nowIndex].ci_carmodel;
                                    }
                                    //排序
                                    rObj.serviceque_array[0].queue_array.sort(sortByProperty('ssqq_queserno', 1));
                                    if (size == 0) {
                                        if (nowPage == 'branch-main') {
                                            var temp = indexObj.template('templateRecordNull');
                                            var item = temp('');
                                            $$('.queue-list').html(item);
                                        } else if (nowPage == 'shopservice-pass') {
                                            var temp = indexObj.template('templateQueuePassedNull');
                                            var item = temp('');
                                            $$('.page-content').html(item);
                                        }
                                    } else if (nowPage == 'branch-main') {
                                        var listTemp = indexObj.template('templateBranchMainQueueList');
                                        var listItem = listTemp(rObj.serviceque_array[0]);
                                        $$('.queue-list ul').html(listItem);
                                        myApp.initImagesLazyLoad('.page-content');
                                        //每兩秒呼叫一次function
                                        window.intervalParam = window.setInterval(function() {
                                            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
                                        }, 2000);
                                        $$('.queue-num span').html(rObj.serviceque_array[0].queue_array.length);
                                    } else if (nowPage == 'shopservice-pass') {
                                        var listTemp = indexObj.template('templateQueuePassedList');
                                        var listItem = listTemp(rObj.serviceque_array[0]);
                                        $$('.list-block ul').html(listItem);
                                        myApp.initImagesLazyLoad('.page-content');
                                    }


                                } else {
                                    if (nowPage == 'branch-main') {
                                        var temp = indexObj.template('templateRecordNull');
                                        var item = temp('');
                                        $$('.queue-list').html(item);
                                    } else if (nowPage == 'shopservice-pass') {
                                        var temp = indexObj.template('templateQueuePassedNull');
                                        var item = temp('');
                                        $$('.page-content').html(item);
                                    }
                                }

                            } else {
                                if (nowPage == 'branch-main') {
                                    var temp = indexObj.template('templateRecordNull');
                                    var item = temp('');
                                    $$('.queue-list').html(item);
                                } else if (nowPage == 'shopservice-pass') {
                                    var temp = indexObj.template('templateQueuePassedNull');
                                    var item = temp('');
                                    $$('.page-content').html(item);
                                }
                            }

                        } else if (nowPage == 'service-record') {
                            if (rObj.serviceque_array === "") {
                                var temp = indexObj.template('templateBranchServiceBlock');
                                var item = temp(rObj);
                                $$('.service-record').html(item);
                            } else {

                                var temp = indexObj.template('templateBranchServiceBlock');
                                var item = temp(rObj);
                                $$('.service-record').html(item);

                                for (var i in rObj.serviceque_array) {
                                    for (var j in rObj.serviceque_array[i].queue_array) {
                                        switch (rObj.serviceque_array[i].queue_array[j].ssqq_usestatus) {
                                            case "1":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.queuing;
                                                break;
                                            case "2":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.servicing;
                                                break;
                                            case "3":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.abandoned;
                                                break;
                                            case "4":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.missed;
                                                break;
                                            case "5":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.missed_serviced;
                                                break;
                                            case "6":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.abandoned_serviced;
                                                break;
                                            case "7":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.passed;
                                                break;
                                            case "8":
                                                rObj.serviceque_array[i].queue_array[j].status = stringObj.text.passed_serviced;
                                                break;
                                        };

                                        if (rObj.serviceque_array[i].queue_array[j].ssd_picturepath == '') {
                                            rObj.serviceque_array[i].queue_array[j].ssd_picturepath = '../app/image/general_user.png';
                                        } else {
                                            if (rObj.serviceque_array[i].queue_array[j].ssd_picturepath.match('square')) {
                                                rObj.serviceque_array[i].queue_array[j].ssd_picturepath = rObj.serviceque_array[i].queue_array[j].ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                                            } else {
                                                rObj.serviceque_array[i].queue_array[j].ssd_picturepath = rObj.serviceque_array[i].queue_array[j].ssd_picturepath;
                                            }
                                        }

                                        findArrayItem(carModelArray, 'ci_serno', parseInt(rObj.serviceque_array[i].queue_array[j].ci_serno));
                                        rObj.serviceque_array[i].queue_array[j].car_model = carModelArray[nowIndex].ci_carbrand + '  ' + carModelArray[nowIndex].ci_carmodel;

                                    }

                                    var listTemp = indexObj.template('templateBranchServiceList');
                                    var listItem = listTemp(rObj.serviceque_array[i]);
                                    $$('.block-' + rObj.serviceque_array[i].date).append(listItem);
                                    myApp.initImagesLazyLoad('.page-content');

                                }

                            }
                        } else if (nowPage == 'shopservice-management') {

                            //數字累加特效
                            var options = {
                                useEasing: true,
                                useGrouping: true,
                                separator: ',',
                                decimal: '.',
                                prefix: '',
                                suffix: ''
                            };
                            var queue_sum = new CountUp(".queue-sum", 0, parseInt(rObj.serviceque_array[0].total_queue), 0, 1, options);
                            queue_sum.start();
                            var serving_sum = new CountUp(".serving-sum", 0, parseInt(rObj.serviceque_array[0].total_serviced), 0, 1, options);
                            serving_sum.start();


                            if (rObj.serviceque_array[0].queue_array != "") {

                                //排序
                                rObj.serviceque_array[0].queue_array.sort(sortByProperty('ssqq_queserno', 1));

                                var ssqd_ids = [];
                                var ssqd_ids_str = ssqd_ids + '';
                                for (var i in rObj.serviceque_array[0].queue_array) {
                                    ssqd_ids_str = ssqd_ids + '';
                                    if (ssqd_ids_str.match(rObj.serviceque_array[0].queue_array[i].ssqd_id) == null) {
                                        ssqd_ids.push(rObj.serviceque_array[0].queue_array[i].ssqd_id);
                                    }
                                }

                                //console.log(ssqd_ids);

                                var nextNumObj = [];

                                for (var j in ssqd_ids) {
                                    var next_item = {};
                                    for (var k in rObj.serviceque_array[0].queue_array) {
                                        if (rObj.serviceque_array[0].queue_array[k].ssqq_usestatus == '1' && rObj.serviceque_array[0].queue_array[k].ssqd_id == ssqd_ids[j]) {
                                            $('.swipeout-' + ssqd_ids[j] + ' .next-num').html(rObj.serviceque_array[0].queue_array[k].ssqq_queserno);
                                            next_item.ssqd_id = ssqd_ids[j];
                                            next_item.ssqq_id = rObj.serviceque_array[0].queue_array[k].ssqq_id;
                                            nextNumObj.push(next_item);
                                            break;
                                        }
                                    }
                                }
                                indexObj._dataStorage(branchObj.storage.nextNumObj, nextNumObj);
                                //console.log(JSON.stringify(nextNumObj));


                            }


                        } else if (nowPage == 'branch-info') {
                            if (rObj.serviceque_array[0].queue_array != "") {

                                //排序
                                rObj.serviceque_array[0].queue_array.sort(sortByProperty('ssqq_queserno', 1));

                                var amount = 0;
                                var ssqq_queserno = 0;
                                for (var i in rObj.serviceque_array[0].queue_array) {
                                    if (rObj.serviceque_array[0].queue_array[i].ssqd_id == ssqd_id) {
                                        amount++;
                                        if (rObj.serviceque_array[0].queue_array[i].ssqq_usestatus == '2') {
                                            ssqq_queserno = rObj.serviceque_array[0].queue_array[i].ssqq_queserno;
                                        }
                                    }
                                }

                                var user_ssqq_queserno = 0;
                                for (var i in rObj.serviceque_array[0].queue_array) {
                                    if (rObj.serviceque_array[0].queue_array[i].ssqd_id == ssqd_id && rObj.serviceque_array[0].queue_array[i].md_id == mainSg.mdId && rObj.serviceque_array[0].queue_array[i].ssqq_usestatus == '1') {
                                        user_ssqq_queserno = rObj.serviceque_array[0].queue_array[i].ssqq_queserno;
                                        break;
                                    }
                                }


                                //數字累加特效
                                var options = {
                                    useEasing: true,
                                    useGrouping: true,
                                    separator: ',',
                                    decimal: '.',
                                    prefix: '',
                                    suffix: ''
                                };
                                var now_queue_num = new CountUp(".now-queue-num", 0, parseInt(ssqq_queserno), 0, 1, options);
                                now_queue_num.start();
                                var queue_sum = new CountUp(".queue-sum", 0, parseInt(amount), 0, 1, options);
                                queue_sum.start();
                                var user_num = new CountUp(".user-num", 0, parseInt(user_ssqq_queserno), 0, 1, options);
                                user_num.start();

                            }
                        }


                    } else if (rObj.message_no == '010901002') {
                        if (nowPage == 'branch-main') {
                            var temp = indexObj.template('templateRecordNull');
                            var item = temp('');
                            $$('.queue-list').html(item);
                        } else if (nowPage == 'shopservice-pass') {
                            var temp = indexObj.template('templateQueuePassedNull');
                            var item = temp('');
                            $$('.page-content').html(item);
                        } else if (nowPage == 'service-record') {
                            var temp = indexObj.template('templateBranchServiceNull');
                            var item = temp('');
                            $$('.service-record').html(item);
                        }
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家呼叫到號用戶開始服務
    shopservicecallup: function(ssqd_id) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicecallup,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                ssqd_id: ssqd_id,
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicecallupresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicecallupresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "010919000" || rObj.message_no === "010919007") {

                        if (rObj.message_no != "010919007") {
                            myApp.toast(stringObj.text.call_success, '', {}).show();
                            if (browser_width < 992) {
                                $('.toast-container').css('width', '60%');
                                $('.toast-container').css('left', '35%');
                            } else {
                                $('.toast-container').css('width', '20%');
                                $('.toast-container').css('left', '45%');
                            }
                        } else {
                            myApp.alert(stringObj.text._010919007, stringObj.text.warn);
                        }


                        mainView.router.load({
                            url: 'shop/shopservice-management',
                            reload: true
                        });

                        var nowTime = new Date();
                        var hours = nowTime.getHours();
                        var minutes = nowTime.getMinutes();
                        if (hours < 10) {
                            hours = '0' + hours;
                        }
                        if (minutes < 10) {
                            minutes = '0' + minutes;
                        }
                        var callTimeObj = indexObj._dataStorage(branchObj.storage.callTimeObj) || [];
                        var callTimeObj_str = callTimeObj + '';

                        if (callTimeObj_str.match(ssqd_id)) {
                            findArrayItem(callTimeObj, 'ssqd_id', ssqd_id);
                            callTimeObj[nowIndex].call_time = hours + ':' + minutes;
                        } else {
                            var callTimeItem = {};
                            callTimeItem.ssqd_id = ssqd_id;
                            callTimeItem.call_time = hours + ':' + minutes;
                            callTimeObj.push(callTimeItem);
                        }
                        indexObj._dataStorage(branchObj.storage.callTimeObj, callTimeObj);


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家設置未到用戶為失約用戶
    shopqueuenoshow: function(ssqd_id, ssqq_id) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        /*console.log(JSON.stringify(JSON.stringify({
         modacc: stringObj.shop.moduleaccount,
         modvrf: Cookies.get('modvrf'),
         sat: mainSg.sat,
         sd_id: branchData.sd_id,
         ssqq_id: ssqq_id,
         })));*/
        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopqueuenoshow,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                ssqq_id: ssqq_id,
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopqueuenoshowresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopqueuenoshowresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "010918000") {

                        myApp.toast(stringObj.text.passed_success, '', {}).show();
                        mainView.router.load({
                            url: 'shop/shopservice-management',
                            reload: true
                        });

                        var nowTime = new Date();
                        var hours = nowTime.getHours();
                        var minutes = nowTime.getMinutes();
                        if (hours < 10) {
                            hours = '0' + hours;
                        }
                        if (minutes < 10) {
                            minutes = '0' + minutes;
                        }
                        var callTimeObj = indexObj._dataStorage(branchObj.storage.callTimeObj) || [];
                        var callTimeObj_str = callTimeObj + '';

                        if (callTimeObj_str.match(ssqd_id)) {
                            findArrayItem(callTimeObj, 'ssqd_id', ssqd_id);
                            callTimeObj[nowIndex].call_time = hours + ':' + minutes;
                        } else {
                            var callTimeItem = {};
                            callTimeItem.ssqd_id = ssqd_id;
                            callTimeItem.call_time = hours + ':' + minutes;
                            callTimeObj.push(callTimeItem);
                        }
                        indexObj._dataStorage(branchObj.storage.callTimeObj, callTimeObj);

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家呼叫過號用戶前往接受服務
    shopqueueovercall: function(ssqq_id) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopqueueovercall,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                ssqq_id: ssqq_id,
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopqueueovercallresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopqueueovercallresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "010921000") {


                        myApp.toast(stringObj.text.call_success, '', {}).show();
                        if (browser_width < 992) {
                            $('.toast-container').css('width', '60%');
                            $('.toast-container').css('left', '35%');
                        } else {
                            $('.toast-container').css('width', '20%');
                            $('.toast-container').css('left', '45%');
                        }

                        mainView.router.load({
                            url: 'shop/shopservice-pass',
                            reload: true
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //用戶取得所有排隊記錄
    shopservicequerecorver: function() {

        var shopServiceRecord = indexObj._dataStorage(branchObj.storage.shopServiceRecord) || {
            last_update_date: '',
            availableList: [],
            finishList: [],
            invalidList: []
        };

        var mainSg = indexObj._dataCookies(indexObj._storage.main);

        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicequerecorver,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: encodeURIComponent(btoa(localStorage.getItem('salt_no') + '_' + CryptoJS.SHA256(stringObj.shop.moduleaccount + stringObj.shop.modulepassword + localStorage.getItem('salt')))), //Cookies.get('modvrf'),
                sat: mainSg.sat,
                last_update_date: shopServiceRecord.last_update_date
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.shopservicequerecorverresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicequerecorverresult));
                    if (rObj.message_no === "000000001") {

                        if (nowPage === 'coupon-record') {
                            var temp;
                            var item;

                            //可用
                            if (JSON.stringify(shopServiceRecord.availableList) === "[]") {
                                temp = indexObj.template('templateCouponListNull');
                                item = temp('');
                                $$('#queue .available-content').html(item);
                            } else {
                                temp = indexObj.template('templateShopServiceAvailableList');
                                item = temp(shopServiceRecord);
                                $$('#queue .couponAvailableList').append(item);

                                myApp.initImagesLazyLoad('.page-content');
                            }

                            //用畢
                            if (JSON.stringify(shopServiceRecord.finishList) === "[]") {
                                var couponTemp = indexObj.template('templateCouponListNull');
                                var couponItem = couponTemp('');
                                $$('#queue .finish-content').html(couponItem);
                            } else {
                                temp = indexObj.template('templateShopServiceFinishList');
                                item = temp(shopServiceRecord);
                                $$('#queue .couponFinishList').append(item);

                                myApp.initImagesLazyLoad('.page-content');
                            }

                            //失效
                            if (JSON.stringify(shopServiceRecord.invalidList) === "[]") {
                                var couponTemp = indexObj.template('templateCouponListNull');
                                var couponItem = couponTemp('');
                                $$('#queue .invalid-content').html(couponItem);
                            } else {
                                temp = indexObj.template('templateShopServiceInvalidList');
                                item = temp(shopServiceRecord);
                                $$('#queue .couponInvalidList').append(item);

                                myApp.initImagesLazyLoad('.page-content');
                            }


                            $('.title').ellipsis({
                                row: 2
                            });

                        }

                    } else if (rObj.message_no === "000000009") {

                        for (var i in rObj.ssqq_list) {
                            findAndRemove(shopServiceRecord.availableList, 'ssqq_id', rObj.ssqq_list[i].ssqq_id);
                            findAndRemove(shopServiceRecord.finishList, 'ssqq_id', rObj.ssqq_list[i].ssqq_id);
                            findAndRemove(shopServiceRecord.invalidList, 'ssqq_id', rObj.ssqq_list[i].ssqq_id);
                            var couponItem = {};
                            couponItem.ssqq_id = rObj.ssqq_list[i].ssqq_id;
                            couponItem.ssqd_id = rObj.ssqq_list[i].ssqd_id;
                            couponItem.ssqq_queserno = rObj.ssqq_list[i].ssqq_queserno;
                            couponItem.ssqq_usestatus = rObj.ssqq_list[i].ssqq_usestatus;
                            couponItem.ssqq_questarttime = rObj.ssqq_list[i].ssqq_questarttime;
                            couponItem.last_update_date = rObj.ssqq_list[i].last_update_date;

                            findArrayItem(rObj.ssqd_list, 'ssqd_id', rObj.ssqq_list[i].ssqd_id);

                            couponItem.sd_id = rObj.ssqd_list[nowIndex].sd_id;
                            couponItem.ssqd_title = rObj.ssqd_list[nowIndex].ssqd_title;
                            couponItem.ssqd_content = rObj.ssqd_list[nowIndex].ssqd_content;
                            couponItem.scm_category = rObj.ssqd_list[nowIndex].scm_category;
                            couponItem.ssqd_mainpic = stringObj.text.branch_img_path + rObj.ssqd_list[nowIndex].ssqd_mainpic;
                            couponItem.ssqd_workhour = rObj.ssqd_list[nowIndex].ssqd_workhour;
                            couponItem.ssqd_serviceprice = rObj.ssqd_list[nowIndex].ssqd_serviceprice;
                            couponItem.date = new Date(rObj.ssqq_list[i].last_update_date) / (1000 * 60 * 60 * 24);

                            findArrayItem(rObj.sd_list, 'sd_id', rObj.ssqd_list[nowIndex].sd_id);

                            couponItem.sd_shopname = rObj.sd_list[nowIndex].sd_shopname;
                            couponItem.sd_shopaddress = rObj.sd_list[nowIndex].sd_shopaddress;
                            couponItem.sd_shoptel = rObj.sd_list[nowIndex].sd_shoptel;
                            couponItem.sd_lat = rObj.sd_list[nowIndex].sd_lat;
                            couponItem.sd_lng = rObj.sd_list[nowIndex].sd_lng;
                            couponItem.sd_weeklystart = rObj.sd_list[nowIndex].sd_weeklystart;
                            couponItem.sd_weeklyend = rObj.sd_list[nowIndex].sd_weeklyend;
                            couponItem.sd_dailystart = rObj.sd_list[nowIndex].sd_dailystart;
                            couponItem.sd_dailyend = rObj.sd_list[nowIndex].sd_dailyend;

                            switch (rObj.ssqq_list[i].ssqq_usestatus) {
                                case '1':
                                    shopServiceRecord.availableList.push(couponItem);
                                    break;
                                case '2':
                                    shopServiceRecord.finishList.push(couponItem);
                                    break;
                                case '3':
                                    shopServiceRecord.invalidList.push(couponItem);
                                    break;
                                case '4':
                                    shopServiceRecord.availableList.push(couponItem);
                                    break;
                                case '5':
                                    shopServiceRecord.finishList.push(couponItem);
                                    break;
                                case '6':
                                    shopServiceRecord.finishList.push(couponItem);
                                    break;
                                case '7':
                                    shopServiceRecord.availableList.push(couponItem);
                                    break;
                                case '8':
                                    shopServiceRecord.finishList.push(couponItem);
                                    break;
                            }
                        }

                        shopServiceRecord.last_update_date = rObj.last_update_date;


                        //排序
                        shopServiceRecord.availableList.sort(sortByProperty('date', -1));
                        shopServiceRecord.finishList.sort(sortByProperty('date', -1));
                        shopServiceRecord.invalidList.sort(sortByProperty('date', -1));


                        indexObj._dataStorage(branchObj.storage.shopServiceRecord, shopServiceRecord);


                        if (nowPage === 'coupon-record') {
                            var temp;
                            var item;

                            //可用
                            if (JSON.stringify(shopServiceRecord.availableList) === "[]") {
                                temp = indexObj.template('templateCouponListNull');
                                item = temp('');
                                $$('#queue .available-content').html(item);
                            } else {
                                temp = indexObj.template('templateShopServiceAvailableList');
                                item = temp(shopServiceRecord);
                                $$('#queue .couponAvailableList').append(item);

                                myApp.initImagesLazyLoad('.page-content');
                            }

                            //用畢
                            if (JSON.stringify(shopServiceRecord.finishList) === "[]") {
                                var couponTemp = indexObj.template('templateCouponListNull');
                                var couponItem = couponTemp('');
                                $$('#queue .finish-content').html(couponItem);
                            } else {
                                temp = indexObj.template('templateShopServiceFinishList');
                                item = temp(shopServiceRecord);
                                $$('#queue .couponFinishList').append(item);

                                myApp.initImagesLazyLoad('.page-content');
                            }

                            //失效
                            if (JSON.stringify(shopServiceRecord.invalidList) === "[]") {
                                var couponTemp = indexObj.template('templateCouponListNull');
                                var couponItem = couponTemp('');
                                $$('#queue .invalid-content').html(couponItem);
                            } else {
                                temp = indexObj.template('templateShopServiceInvalidList');
                                item = temp(shopServiceRecord);
                                $$('#queue .couponInvalidList').append(item);

                                myApp.initImagesLazyLoad('.page-content');
                            }

                            $('.title').ellipsis({
                                row: 2
                            });
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });

    },
    //用戶放棄排隊
    shopservicequeabandom: function(ssqd_id, ssqq_id) {

        $$('.swipeout-' + ssqq_id).on('deleted', function() {

            var reason = stringObj.text.service_abandon_reason;
            var reasonItem = "";
            for (var i in reason) {
                if (i == 0) {
                    reasonItem +=
                        '<li>' +
                        '<label class="label-radio item-content">' +
                        '<input type="radio" name="reasonlist" value="' + i + '" checked>' +
                        '<div class="item-inner">' +
                        '<div class="item-title-row">' +
                        '<div class="item-title"><b>' + reason[i] + '</b></div>' +
                        '</div>' +
                        '</div>' +
                        '</label>' +
                        '</li>';
                } else {
                    reasonItem +=
                        '<li>' +
                        '<label class="label-radio item-content">' +
                        '<input type="radio" name="reasonlist" value="' + i + '">' +
                        '<div class="item-inner">' +
                        '<div class="item-title-row">' +
                        '<div class="item-title"><b>' + reason[i] + '</b></div>' +
                        '</div>' +
                        '</div>' +
                        '</label>' +
                        '</li>';
                }

            }

            myApp.modal({
                    title: stringObj.text.reason,
                    text: '<div class="list-block media-list">' +
                        '<ul id="reasonlist">' + reasonItem + '</ul>' +
                        '</div>',
                    buttons: [{
                        text: stringObj.text.confirm,
                        onClick: function() {
                            checkReason = $('input[name="reasonlist"]:checked').val();

                            myApp.showIndicator();

                            var mainSg = indexObj._dataCookies(indexObj._storage.main);

                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                ssqq_id: ssqq_id,
                                ssqd_id: ssqd_id,
                                ssqq_abandomreason: checkReason
                            };

                            //console.log(JSON.stringify(data));

                            indexObj._wcfget({
                                url: branchObj.dataUrl.shopservicequeabandom,
                                para: data,
                                success: function(r) {
                                    if (r.shopservicequeabandomresult) {
                                        indexObj.jsonUrlDecode(r);
                                        //console.log(JSON.stringify(r));
                                        myApp.hideIndicator();
                                        var rObj = JSON.parse(JSON.stringify(r.shopservicequeabandomresult));
                                        switch (rObj.message_no) {
                                            case '010922000':
                                                var shopServiceRecord = indexObj._dataStorage(branchObj.storage.shopServiceRecord);
                                                findAndRemove(shopServiceRecord.availableList, 'ssqq_id', ssqq_id);
                                                indexObj._dataStorage(indexObj._storage.shopServiceRecord, shopServiceRecord);
                                                break;
                                            default:
                                                stringObj.return_header(rObj.message_no);
                                                break;
                                        }
                                        if (_tip) {
                                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                            _tip = null;
                                        }

                                    }
                                    mainView.router.load({
                                        url: 'coupon-record?tab=queue',
                                        reload: true
                                    });

                                },
                                error: function(r) {
                                    //var error = $.evalJSON(r.responseText);
                                    myApp.hideIndicator();
                                    //console.log('Error : ' + JSON.stringify(r.responseText));
                                    noNetwork();
                                }
                            });
                        }
                    }]
                })
                //$('.modal').css("height", "60%");
            $('.modal-title+.modal-text').css("height", "89%");
            $('.modal-title+.modal-text').css("overflow-y", "auto");
            $('.modal .list-block').css("margin", "3% 0");
            $('.modal-inner').css("background", "#FFF");
            $('.modal .item-text').css("text-align", "left");
            $('.media-list li').css("border-bottom", "1px solid #DDD");


        });


    },
    //商家掃描用戶QR憑證
    shopservicescan: function(ssqd_id, ssqq_id, ssqq_queserno) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);


        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopservicescan,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                ssqd_id: ssqd_id,
                ssqq_id: ssqq_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopservicescanresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopservicescanresult));
                    if (rObj.ssqq_questarttime) {
                        rObj.ssd_picturepath = rObj.ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                        branchData.client_pic = rObj.ssd_picturepath;
                        branchData.client_name = rObj.md_cname;
                        branchData.client_num = ssqq_queserno;
                        branchData.client_date = rObj.ssqq_questarttime;
                        indexObj._dataStorage(branchObj.storage.branchData, branchData);
                    }
                    switch (rObj.message_no) {
                        case '000000000':
                            mainView.router.load({
                                url: 'shop/shopservice-info?ssqd_id=' + ssqd_id + '&type=scan&ssqq_id=' + ssqq_id
                            });
                            break;
                        case '010916003':
                            myApp.modal({
                                title: stringObj.text.warn,
                                text: stringObj.text._010916003,
                                buttons: [{
                                    text: stringObj.text.cancel,
                                    onClick: function() {

                                    }
                                }, {
                                    text: stringObj.text.confirm,
                                    onClick: function() {
                                        mainView.router.load({
                                            url: 'shop/shopservice-info?ssqd_id=' + ssqd_id + '&type=scan&ssqq_id=' + ssqq_id
                                        });
                                    }
                                }]
                            });
                            break;
                        case '010916005':
                            myApp.modal({
                                title: stringObj.text.warn,
                                text: stringObj.text._010916005,
                                buttons: [{
                                    text: stringObj.text.cancel,
                                    onClick: function() {

                                    }
                                }, {
                                    text: stringObj.text.confirm,
                                    onClick: function() {
                                        mainView.router.load({
                                            url: 'shop/shopservice-info?ssqd_id=' + ssqd_id + '&type=scan&ssqq_id=' + ssqq_id
                                        });
                                    }
                                }]
                            });
                            break;
                        case '010916007':
                            myApp.modal({
                                title: stringObj.text.warn,
                                text: stringObj.text._010916007,
                                buttons: [{
                                    text: stringObj.text.cancel,
                                    onClick: function() {

                                    }
                                }, {
                                    text: stringObj.text.confirm,
                                    onClick: function() {
                                        mainView.router.load({
                                            url: 'shop/shopservice-info?ssqd_id=' + ssqd_id + '&type=scan&ssqq_id=' + ssqq_id
                                        });
                                    }
                                }]
                            });
                            break;
                        default:
                            stringObj.return_header(rObj.message_no);
                            if (_tip) {
                                myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                _tip = null;
                            }
                            break;
                    }
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //商家掃描QR後開始服務
    shopserviceexec: function(ssqd_id, ssqq_id) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.shopserviceexec,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                ssqd_id: ssqd_id,
                ssqq_id: ssqq_id
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.shopserviceexecresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopserviceexecresult));
                    if (rObj.message_no == "010917000" || rObj.message_no == "010917001" || rObj.message_no == "010917004") {

                        if (rObj.message_no == "010917000") {
                            myApp.toast(stringObj.text.serving_success, '', {}).show();
                            mainView.router.load({
                                url: 'shop/shopservice-management'
                            });
                        } else if (rObj.message_no == "010917001") {
                            myApp.alert(stringObj.text._010917001, stringObj.text.warn);
                            $('.modal-button').click(function() {
                                myApp.toast(stringObj.text.serving_success, '', {}).show();
                                mainView.router.load({
                                    url: 'shop/shopservice-management'
                                });
                            });
                        } else if (rObj.message_no == "010917004") {
                            myApp.alert(stringObj.text._010917004, stringObj.text.warn);
                            $('.modal-button').click(function() {
                                myApp.toast(stringObj.text.serving_success, '', {}).show();
                                mainView.router.load({
                                    url: 'shop/shopservice-management'
                                });
                            });
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //被叫號用戶回覆前往狀況
    shopserviceclientreply: function(ssqq_id, reply_answer) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        indexObj._wcfget({
            url: branchObj.dataUrl.shopserviceclientreply,
            para: {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                ssqq_id: ssqq_id,
                reply_answer: reply_answer
            },
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.shopserviceclientreplyresult) {
                    var rObj = JSON.parse(JSON.stringify(r.shopserviceclientreplyresult));
                    if (rObj.message_no === "010923001" || rObj.message_no === "010923002") {

                        myApp.toast(stringObj.text.reply_branch, '', {}).show();

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                noNetwork();
            }
        });
    },
    //商家註冊選擇頁
    branchSelectInit: function(page) {
        var q = page.query;
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        if (branchData.sd_id) {
            $('.left a').attr('href', 'shop/myBranchs');
        }
        $('.shop-block').click(function() {
            mainView.router.load({
                url: 'application-shop'
            });
        });
        $('.usedcar-block').click(function() {
            mainView.router.load({
                url: 'application-usedcar'
            });
        });
    },
    //一般商家開店
    applicationShopInit: function(page) {
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};

        //        if (mainSg.md_clienttype === '1' && branchData.sd_id) {
        //            $('.left a').attr('href', 'shop/myBranchs');
        //        }

        var applicationData = indexObj._dataStorage(branchObj.storage.applicationData) || '';
        if (applicationData) {
            $$('#shop_name').val(applicationData.sd_shopname);
            $$('#sd_contact_person').val(applicationData.sd_contact_person);
            $$('#shop_tel').val(applicationData.sd_shoptel);
            $$('#shop_address').val(applicationData.sd_shopaddress);
            $$('.shop_region').val(applicationData.sd_zipcode);
            $$('#shop_type').val(stringObj.text.sd_type_array[parseInt(applicationData.sd_type) - 2]);
            $$('#sd_uniformnumbers').val(applicationData.sd_uniformnumbers);
        }
        //商家名稱
        $$('.shop_name').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="' + stringObj.text.branch_name + '" maxlength="50" onkeydown="input_limit(this, 50);" onkeyup="input_limit(this, 50);">', stringObj.text.branch_name);

            $('.input-value').val($('#shop_name').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#shop_name').val($('.input-value').val());
            });
        });

        //聯絡人名稱
        $$('.sd_contact_person').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="' + stringObj.shop.sd_contact_person + '" maxlength="20" onkeydown="input_limit(this, 20);" onkeyup="input_limit(this, 20);">', stringObj.shop.sd_contact_person);

            $('.input-value').val($('#sd_contact_person').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#sd_contact_person').val($('.input-value').val());
            });
        });

        //商家電話
        $$('.shop_tel').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="' + stringObj.text.tel + '" maxlength="10" onkeyup="value=value.replace(/[^-0-9]/g,\'\')">', stringObj.text.tel);

            $('.input-value').val($('#shop_tel').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#shop_tel').val($('.input-value').val());
            });
        });

        //商家地址
        $$('.shop_address').on('click', function() {
            myApp.alert('<textarea class="info resizable" placeholder="' + stringObj.text.address + '" rows="9"></textarea>', stringObj.text.address);

            $('.info').val($('#shop_address').val());

            $('textarea.info').focus();

            $('.modal-button').click(function() {
                $('#shop_address').val($('textarea.info').val());
            });
        });


        //統一編號
        $$('.sd_uniformnumbers').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="' + stringObj.shop.sd_uniformnumbers + '" maxlength="8" onkeydown="input_limit(this, 8);" onkeyup="input_limit(this, 8);">', stringObj.shop.sd_uniformnumbers);

            $('.input-value').val($('#sd_uniformnumbers').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#sd_uniformnumbers').val($('.input-value').val());
            });
        });

        //商家類別
        var sd_type;
        var pickerType = myApp.picker({
            input: '#shop_type',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.text.sd_type + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onOpen: function(p) {
                p.setValue([parseInt(applicationData.sd_type)]);
            },
            cols: [{
                textAlign: 'center',
                values: [2, 3],
                displayValues: stringObj.text.sd_type_array,
                onChange: function(picker, value, displayValue) {
                    sd_type = value;
                }
            }]
        });

        var region = stringObj.region;

        zipArray = region.臺北市[1];

        var branch_region = myApp.picker({
            input: '.shop_region',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"></a>' +
                '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return zipArray[regionIndex];
            },
            onOpen: function(p) {
                p.setValue([applicationData.sd_country, applicationData.sd_district]);
            },
            cols: [{
                    textAlign: 'center',
                    width: 140,
                    values: stringObj.counties,
                    onChange: function(picker, country) {
                        mCounty = country;
                        if (picker.cols[1].replaceValues) {
                            picker.cols[1].replaceValues(region[country][0]);
                            //regionArray = region[country][0];
                            zipArray = region[country][1];
                            $('#shop_address').val(country + region[country][0][0]);
                        }
                    }
                },

                {
                    textAlign: 'center',
                    values: region.臺北市[0],
                    width: 140,
                    onChange: function(picker, district) {
                        mDistrict = district;
                        regionIndex = picker.cols[1].activeIndex;
                        $('#shop_address').val(mCounty + district);
                    }
                },
            ]
        });

        $('.send').click(function() {

            $('.sd_shopname').removeClass('lengthError');
            $('.sd_contact_person').removeClass('lengthError');
            $('.sd_shoptel').removeClass('lengthError');
            $('.sd_shopaddress').removeClass('lengthError');
            $('.sd_uniformnumbers').removeClass('lengthError');
            $('.sd_shopname').removeClass('spacesError');
            $('.sd_contact_person').removeClass('spacesError');
            $('.sd_shoptel').removeClass('spacesError');
            $('.sd_shopaddress').removeClass('spacesError');
            $('.operation_type').removeClass('nullError');
            $('.sd_shopname').removeClass('nullError');
            $('.sd_contact_person').removeClass('nullError');
            $('.sd_shoptel').removeClass('nullError');
            $('.sd_zipcode').removeClass('nullError');
            $('.sd_shopaddress').removeClass('nullError');
            $('.sd_uniformnumbers').removeClass('nullError');
            $('.sd_uniformnumbers').removeClass('formatError');


            var isError = false;

            if ($.trim($('#sd_uniformnumbers').val()) !== "") {
                switch (chkTaxId($.trim($('#sd_uniformnumbers').val()))) {
                    case 'lengthError':
                        $('.sd_uniformnumbers').addClass('lengthError');
                        isError = true;
                        break;
                    case 'formatError':
                        $('.sd_uniformnumbers').addClass('formatError');
                        isError = true;
                        break;
                }
            }


            //長度判斷
            if ($('#shop_name').val().length > 50) {
                $('.sd_shopname').addClass('lengthError');
                isError = true;
            }
            if ($('#sd_contact_person').val().length > 20) {
                $('.sd_shopname').addClass('lengthError');
                isError = true;
            }
            if ($('#shop_tel').val().length > 10) {
                $('.sd_shoptel').addClass('lengthError');
                isError = true;
            }
            if ($('#shop_address').val().length > 100) {
                $('.sd_shopaddress').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('#shop_name').val().indexOf(" ") !== -1) {
                $('.sd_shopname').addClass('spacesError');
                isError = true;
            }
            if ($('#sd_contact_person').val().indexOf(" ") !== -1) {
                $('.sd_contact_person').addClass('spacesError');
                isError = true;
            }
            if ($('#shop_tel').val().indexOf(" ") !== -1) {
                $('.sd_shoptel').addClass('spacesError');
                isError = true;
            }
            if ($('#shop_address').val().indexOf(" ") !== -1) {
                $('.sd_shopaddress').addClass('spacesError');
                isError = true;
            }
            if ($('#sd_uniformnumbers').val().indexOf(" ") !== -1) {
                $('.sd_uniformnumbers').addClass('spacesError');
                isError = true;
            }


            //填寫判斷
            if ($.trim($('#shop_name').val()) === "") {
                $('.sd_shopname').addClass('nullError');
                isError = true;
            }
            if ($.trim($('#sd_contact_person').val()) === "") {
                $('.sd_contact_person').addClass('nullError');
                isError = true;
            }
            if ($.trim($('#shop_tel').val()) === "") {
                $('.sd_shoptel').addClass('nullError');
                isError = true;
            }
            if ($.trim($('#shop_address').val()) === "") {
                $('.sd_shopaddress').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.shop_region').val()) === "") {
                $('.sd_zipcode').addClass('nullError');
                isError = true;
            }
            if ($.trim($('#shop_type').val()) === "") {
                $('.operation_type').addClass('nullError');
                isError = true;
            }
            /*if ($.trim($('#sd_uniformnumbers').val()) === "") {
                $('.sd_uniformnumbers').addClass('nullError');
                isError = true;
            }*/


            if (isError) {
                myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                if (browser_width < 992) {
                    $('.toast-container').css('width', '40%');
                    $('.toast-container').css('left', '45%');
                } else {
                    $('.toast-container').css('width', '15%');
                    $('.toast-container').css('left', '47.5%');
                }
            }

            var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                operation_type: '0',
                sd_type: sd_type,
                sd_shopname: $('#shop_name').val(),
                sd_contact_person: $('#sd_contact_person').val(),
                sd_shoptel: $('#shop_tel').val(),
                rl_city_code: stringObj.counties.indexOf(mCounty) + 1,
                sd_zipcode: zipArray[regionIndex],
                sd_shopaddress: $('#shop_address').val(),
                sd_uniformnumbers: $('#sd_uniformnumbers').val(),
                dcil_id: '',
                sd_country: mCounty,
                sd_district: mDistrict
            };
            if (applicationData && sd_type == undefined) {
                data.sd_type = applicationData.sd_type;
            }
            if (applicationData && zipArray[regionIndex] == undefined) {
                data.sd_zipcode = applicationData.sd_zipcode;
            }
            if (!isError) {
                if (mainSg.md_seccode_created === '1') {
                    data.dcil_id = stringObj.text.dcil_list[0].dcil_id;
                    indexObj._dataCookies('postshopdata', data);
                    memberseccode('verify');
                } else {
                    myApp.modal({
                        title: stringObj.text.warn,
                        text: stringObj.text.no_set_memberseccode,
                        buttons: [{
                            text: stringObj.text.cancel,
                            onClick: function() {}
                        }, {
                            text: stringObj.text.to_set,
                            onClick: function() {
                                memberseccode('set');
                            }
                        }]
                    });
                }
            }
        });
    },
    //二手車商開店
    applicationUsedcarInit: function(page) {

        var applicationData = indexObj._dataStorage(branchObj.storage.applicationData) || '';
        if (applicationData) {
            $$('#usedcar_name').val(applicationData.sd_shopname);
            $$('#usedcar_tel').val(applicationData.sd_shoptel);
            $$('#usedcar_address').val(applicationData.sd_shopaddress);
            $$('.usedcar_region').val(applicationData.sd_zipcode);
        }
        //商家名稱
        $$('.usedcar_name').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="' + stringObj.text.branch_name + '" maxlength="50">', stringObj.text.branch_name);

            $('.input-value').val($('#usedcar_name').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#usedcar_name').val($('.input-value').val());
            });
        });

        //商家電話
        $$('.usedcar_tel').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="' + stringObj.text.tel + '" onkeyup="value=value.replace(/[^-0-9]/g,\'\')">', stringObj.text.tel);

            $('.input-value').val($('#usedcar_tel').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#usedcar_tel').val($('.input-value').val());
            });
        });

        //商家地址
        $$('.usedcar_address').on('click', function() {
            myApp.alert('<textarea class="info resizable" placeholder="' + stringObj.text.address + '" rows="9"></textarea>', stringObj.text.address);

            $('.info').val($('#usedcar_address').val());

            $('textarea.info').focus();

            $('.modal-button').click(function() {
                $('#usedcar_address').val($('.info').val());
            });
        });

        var region = stringObj.region;

        zipArray = region.臺北市[1];

        var branch_region = myApp.picker({
            input: '.usedcar_region',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"></a>' +
                '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return zipArray[regionIndex];
            },
            onOpen: function(p) {
                p.setValue([applicationData.sd_country, applicationData.sd_district]);
            },
            cols: [{
                    textAlign: 'center',
                    width: 140,
                    values: stringObj.counties,
                    onChange: function(picker, country) {
                        mCounty = country;
                        if (picker.cols[1].replaceValues) {
                            picker.cols[1].replaceValues(region[country][0]);
                            //regionArray = region[country][0];
                            zipArray = region[country][1];
                            //$('#branch-address').val(country + region[country][0][0]);
                        }
                    }
                },

                {
                    textAlign: 'center',
                    values: region.臺北市[0],
                    width: 140,
                    onChange: function(picker, district) {
                        mDistrict = district;
                        regionIndex = picker.cols[1].activeIndex;
                        //$('#branch-address').val(mCounty + district);
                    }
                },
            ]
        });



        $('.send').click(function() {

            $('.sd_shopname').removeClass('lengthError');
            $('.sd_shoptel').removeClass('lengthError');
            $('.sd_shopaddress').removeClass('lengthError');
            $('.sd_shopname').removeClass('spacesError');
            $('.sd_shoptel').removeClass('spacesError');
            $('.sd_shopaddress').removeClass('spacesError');
            $('.sd_shopname').removeClass('nullError');
            $('.sd_shoptel').removeClass('nullError');
            $('.sd_zipcode').removeClass('nullError');
            $('.sd_shopaddress').removeClass('nullError');


            var isError = false;


            //長度判斷
            if ($('#usedcar_name').val().length > 50) {
                $('.sd_shopname').addClass('lengthError');
                isError = true;
            }
            if ($('#usedcar_tel').val().length > 20) {
                $('.sd_shoptel').addClass('lengthError');
                isError = true;
            }
            if ($('#usedcar_address').val().length > 100) {
                $('.sd_shopaddress').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('#usedcar_name').val().indexOf(" ") !== -1) {
                $('.sd_shopname').addClass('spacesError');
                isError = true;
            }
            if ($('#usedcar_tel').val().indexOf(" ") !== -1) {
                $('.sd_shoptel').addClass('spacesError');
                isError = true;
            }
            if ($('#usedcar_address').val().indexOf(" ") !== -1) {
                $('.sd_shopaddress').addClass('spacesError');
                isError = true;
            }


            //填寫判斷
            if ($('#usedcar_name').val() === "") {
                $('.sd_shopname').addClass('nullError');
                isError = true;
            }
            if ($('#usedcar_tel').val() === "") {
                $('.sd_shoptel').addClass('nullError');
                isError = true;
            }
            if ($('#usedcar_address').val() === "") {
                $('.sd_shopaddress').addClass('nullError');
                isError = true;
            }
            if ($('.usedcar_region').val() === "") {
                $('.sd_zipcode').addClass('nullError');
                isError = true;
            }


            if (isError) {
                myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                if (browser_width < 992) {
                    $('.toast-container').css('width', '40%');
                    $('.toast-container').css('left', '45%');
                } else {
                    $('.toast-container').css('width', '15%');
                    $('.toast-container').css('left', '47.5%');
                }
            }


            var mainSg = indexObj._dataCookies(indexObj._storage.main);
            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                operation_type: '1',
                sd_type: '1',
                sd_shopname: $('#usedcar_name').val(),
                sd_shoptel: $('#usedcar_tel').val(),
                sd_zipcode: '',
                sd_shopaddress: $('#usedcar_address').val(),
                dcil_id: '',
                sd_country: mCounty,
                sd_district: mDistrict
            };
            if (applicationData) {
                data.sd_zipcode = applicationData.sd_zipcode;
            } else {
                data.sd_zipcode = zipArray[regionIndex];
            }
            if (!isError) {
                pay_list('0', $('#usedcar_name').val(), '', data);
            }
        });
    },

    //紅利管理初始化
    bonusManagementInit: function(page) {

        //標題設置
        $('.navbar .center').html(stringObj.shop.bonus_management);

        var q = page.query;


        branchObj.queryshopbonusitem('');



    },

    //紅利項目新增/修改
    bonusEditInit: function(page) {

        //標題設置
        $('.navbar .center').html(stringObj.shop.bonus_item);

        var temp = indexObj.template('templateBonusEdit');
        var item = temp(stringObj.shop);
        $$('.bonus-edit-block ul').html(item);

        var q = page.query;

        branchObj.queryshopbonusitem(q.sbgi_id);

        $$('.left a').click(function() {

            mainView.router.load({
                url: 'shop/bonus-management',
                reload: true
            });

        });

    },

    //紅利項目查詢
    queryshopbonusitem: function(sbgi_id) {
        myApp.showIndicator();

        sbgi_id = sbgi_id || '';

        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            sbgi_id: sbgi_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryshopbonusitem,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryshopbonusitemresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryshopbonusitemresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "000000003") {

                        switch (nowPage) {
                            case 'bonus-management':
                                if (rObj.bonusitems) {
                                    $$('.bonus-list ul').html('');
                                    for (var i in rObj.bonusitems) {
                                        if (rObj.bonusitems[i].sbgi_effective === '1') {
                                            rObj.bonusitems[i].sbgi_effective = stringObj.shop.status_on;
                                        } else {
                                            rObj.bonusitems[i].sbgi_effective = stringObj.shop.status_off;
                                        }
                                        var temp = indexObj.template('templateBonusList');
                                        var item = temp(rObj.bonusitems[i]);
                                        $$('.bonus-list ul').append(item);
                                    }

                                    $('.bonus-list ul .col-15').click(function() {
                                        mainView.router.load({
                                            url: 'shop/bonus-edit?sbgi_id=' + $(this).attr('sbgi_id'),
                                            reload: true
                                        });
                                    });
                                } else {
                                    dataNull('templateBonusListNull', stringObj.text.no_data, '.bonus-list ul');
                                }
                                break;
                            case 'bonus-edit':

                                var operation_type;

                                //生效狀態
                                var sbgi_effective = 2;
                                $('.bouns-status').change(function() {
                                    if ($(this).is(':checked')) {
                                        sbgi_effective = 1;
                                    } else {
                                        sbgi_effective = 2;
                                    }
                                });


                                if (sbgi_id) {
                                    $$('.bouns_name').val(rObj.bonusitems[0].sbgi_itemname);
                                    $$('.bouns_point').val(rObj.bonusitems[0].sbgi_itemamount);
                                    if (rObj.bonusitems[0].sbgi_effective == '1') {
                                        $('.bouns-status').prop('checked', true);
                                    }
                                    sbgi_effective = rObj.bonusitems[0].sbgi_effective;
                                    $('.toolbar-inner a').html(stringObj.text.edit);
                                    operation_type = 1;
                                } else {
                                    $('.toolbar-inner a').html(stringObj.text.add);
                                    operation_type = 0;
                                }


                                $('.send').click(function() {

                                    $('.bouns-name').removeClass('lengthError');
                                    $('.bouns-point').removeClass('lengthError');
                                    $('.bouns-name').removeClass('spacesError');
                                    $('.bouns-point').removeClass('spacesError');
                                    $('.bouns-name').removeClass('nullError');
                                    $('.bouns-point').removeClass('nullError');


                                    var isError = false;


                                    //長度判斷
                                    if ($('.bouns_name').val().length > 20) {
                                        $('.bouns-name').addClass('lengthError');
                                        isError = true;
                                    }
                                    if ($('.bouns_point').val().length > 7) {
                                        $('.bouns-point').addClass('lengthError');
                                        isError = true;
                                    }

                                    //空白字元判斷
                                    if ($('.bouns_name').val().indexOf(" ") !== -1) {
                                        $('.bouns-name').addClass('spacesError');
                                        isError = true;
                                    }
                                    if ($('.bouns_point').val().indexOf(" ") !== -1) {
                                        $('.bouns-point').addClass('spacesError');
                                        isError = true;
                                    }


                                    //填寫判斷
                                    if ($('.bouns_name').val() === "") {
                                        $('.bouns-name').addClass('nullError');
                                        isError = true;
                                    }
                                    if ($('.bouns_point').val() === "") {
                                        $('.bouns-point').addClass('nullError');
                                        isError = true;
                                    }


                                    if (isError) {
                                        myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                                        if (browser_width < 992) {
                                            $('.toast-container').css('width', '40%');
                                            $('.toast-container').css('left', '45%');
                                        } else {
                                            $('.toast-container').css('width', '15%');
                                            $('.toast-container').css('left', '47.5%');
                                        }
                                    }


                                    var mainSg = indexObj._dataCookies(indexObj._storage.main);
                                    var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};

                                    sbgi_id = sbgi_id || '';

                                    var data = {
                                        modacc: stringObj.shop.moduleaccount,
                                        modvrf: Cookies.get('modvrf'),
                                        sat: mainSg.sat,
                                        sd_id: branchData.sd_id,
                                        md_id: mainSg.mdId,
                                        operation_type: operation_type,
                                        sbgi_id: sbgi_id,
                                        sbgi_fittype: 0,
                                        sbgi_itemname: $('.bouns_name').val(),
                                        sbgi_itemamount: $('.bouns_point').val(),
                                        sbgi_effective: sbgi_effective
                                    };
                                    if (!isError) {
                                        branchObj.postshopbonusmamager(data);
                                    }
                                });
                                break;
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //紅利管理設置
    postshopbonusmamager: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.postshopbonusmamager,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.postshopbonusmamagerresult) {
                    var rObj = JSON.parse(JSON.stringify(r.postshopbonusmamagerresult));
                    if (rObj.message_no === "000000000") {
                        if (data.operation_type == '1') {
                            myApp.toast(stringObj.text.edit_success, '', {}).show();
                        } else if (data.operation_type == '0') {
                            myApp.toast(stringObj.text.add_success, '', {}).show();
                        }
                        mainView.router.load({
                            url: 'shop/bonus-management',
                            reload: true
                        });
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //會員列表
    clientListInit: function(page) {

        //標題設置
        $('.navbar .center').html(stringObj.shop.client_list);

        var q = page.query;

        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};


        branchObj.query_shopmember(branchData.sd_id);

    },

    //查詢商家所有會員資料
    query_shopmember: function(sd_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.query_shopmember,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryshopmemberresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryshopmemberresult));
                    if (rObj.message_no === "000000000") {
                        if (rObj.shop_member_array) {

                            for (var i in rObj.shop_member_array) {
                                if (rObj.shop_member_array[i].ssd_picturepath.match('square')) {
                                    rObj.shop_member_array[i].ssd_picturepath = rObj.shop_member_array[i].ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                                }
                            }

                            if (nowPage === 'client-list') {
                                var temp = indexObj.template('templateClientList');
                                var item = temp(rObj);
                                $$('.client-list-block ul').html(item);
                                myApp.initImagesLazyLoad('.page-content');


                                //PC裝置頭像大小
                                if (browser_width > 992) {
                                    $('.item-media img').attr('width', '80');
                                }
                                //監聽裝置畫面大小
                                $(window).on("resize", function() {
                                    browser_width = $(window).width();
                                    switch (nowPage) {
                                        case 'client-list':
                                            if (browser_width > 992) {
                                                $('.item-media img').css('width', '80px');
                                            } else {
                                                $('.item-media img').css('width', '50px');
                                            }
                                            break;
                                    }

                                });
                            } else if (nowPage === 'select-member') {

                                var temp = indexObj.template('templateSelectMemberList');
                                var item = temp(rObj);
                                $$('.select-member-content ul').html(item);
                                myApp.initImagesLazyLoad('.page-content');

                                $('.total_member span').html(rObj.shop_member_array.length);


                                var all_checked = false;
                                var checkboxs = document.getElementsByName('md-checkbox');
                                var md_id_array;

                                //將所有checkbox新增監聽
                                $("input[name='md-checkbox']").each(function() {
                                    $(this).change(function() {
                                        var j = 0;
                                        for (var i = 0; i < checkboxs.length; i++) {
                                            if (!checkboxs[i].checked) {
                                                //若有未勾選
                                                all_checked = false;
                                                $('.clickAll').removeClass('cancelAll');
                                                $('.clickAll').html(stringObj.shop.select_all);
                                                j++;
                                            }
                                        }
                                        if (j === 0) {
                                            //若無未勾選
                                            all_checked = true;
                                            $('.clickAll').addClass('cancelAll');
                                            $('.clickAll').html(stringObj.text.cancel);
                                        }
                                    });
                                });

                                //全選
                                $('.clickAll').click(function() {
                                    if (all_checked) {
                                        $("input[name='md-checkbox']").prop("checked", false);
                                        all_checked = false;
                                        $('.clickAll').removeClass('cancelAll');
                                        $('.clickAll').html(stringObj.shop.select_all);
                                    } else {
                                        $("input[name='md-checkbox']").prop("checked", true);
                                        all_checked = true;
                                        $('.clickAll').addClass('cancelAll');
                                        $('.clickAll').html(stringObj.text.cancel);

                                    }

                                });

                                //訊息編輯
                                $('.edit').click(function() {
                                    md_id_array = [];
                                    for (var i = 0; i < checkboxs.length; i++) {
                                        if (checkboxs[i].checked) {
                                            md_id_array.push($(checkboxs[i]).val());
                                        }
                                    }
                                    indexObj._dataStorage(branchObj.storage.md_id_array, md_id_array);
                                    if (md_id_array.length > 0) {
                                        mainView.router.load({
                                            url: 'message_push/message-info?from=select&type=edit&ssfi_feename=shopmemberpush',
                                            reload: true
                                        });
                                    } else {
                                        myApp.toast(stringObj.text.no_select, '', {}).show();
                                    }

                                });

                            }

                        } else {
                            if (nowPage === 'client-list') {
                                dataNull('templateClientListNull', stringObj.shop.no_member, '.client-list-block ul');
                            } else if (nowPage === 'select-member') {
                                dataNull('templateSelectMemberNull', stringObj.shop.no_member, '.select-member-content ul');
                            }
                        }

                    } else if (rObj.message_no === "000000003") {
                        //dataNull('templateClientListNull', stringObj.text.no_data, '.client-list-block ul');
                        if (nowPage === 'client-list') {
                            dataNull('templateClientListNull', stringObj.shop.no_member, '.client-list-block ul');
                        } else if (nowPage === 'select-member') {
                            dataNull('templateSelectMemberNull', stringObj.shop.no_member, '.select-member-content ul');
                        }
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //紅利贈送初始化
    bonusGiftInit: function(page) {

        //標題設置
        $('.navbar .center').html(stringObj.shop.bonus_gift);

        var q = page.query;

        branchObj.querymemberidinfo(q.md_id);


        var temp = indexObj.template('templateBonusGift');
        var item = temp(stringObj.shop);
        $$('.bonus-gift-block ul').html(item);


        $$('.left a').click(function() {

            mainView.router.load({
                url: 'shop/branch-main',
                reload: true
            });

        });


        //消費金額
        $$('.cost-block').on('click', function() {
            myApp.alert('<input class="input-value" type="number" min="0" placeholder="' + stringObj.shop.input_cost + '" maxlength="8">', stringObj.shop.cost);

            $('.input-value').val($('.cost').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('.cost').val($('.input-value').val());
            });
        });


        //紅利數額
        $$('.bouns-point').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="' + stringObj.shop.input_bonus_point + '" maxlength="8">', stringObj.shop.bonus_point);

            $('.input-value').val($('.bouns_point').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('.bouns_point').val($('.input-value').val());
            });
        });

        $('.send').click(function() {

            $('.cost-block').removeClass('lengthError');
            $('.bouns-point').removeClass('lengthError');
            $('.cost-block').removeClass('spacesError');
            $('.bouns-point').removeClass('spacesError');
            $('.cost-block').removeClass('nullError');
            $('.bouns-point').removeClass('nullError');


            var isError = false;


            //長度判斷
            if ($('.cost').val().length > 8) {
                $('.cost-block').addClass('lengthError');
                isError = true;
            }
            if ($('.bouns_point').val().length > 8) {
                $('.bouns-point').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('.cost').val().indexOf(" ") !== -1) {
                $('.cost-block').addClass('spacesError');
                isError = true;
            }
            if ($('.bouns_point').val().indexOf(" ") !== -1) {
                $('.bouns-point').addClass('spacesError');
                isError = true;
            }


            //填寫判斷
            if ($('.cost').val() === "") {
                $('.cost-block').addClass('nullError');
                isError = true;
            }
            if ($('.bouns_point').val() === "") {
                $('.bouns-point').addClass('nullError');
                isError = true;
            }


            if (isError) {
                myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                if (browser_width < 992) {
                    $('.toast-container').css('width', '40%');
                    $('.toast-container').css('left', '45%');
                } else {
                    $('.toast-container').css('width', '15%');
                    $('.toast-container').css('left', '47.5%');
                }
            }


            var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
            var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                scbr_md_id: q.md_id,
                scbr_comsumeamount: $('.cost').val(),
                scbr_bonusgive: $('.bouns_point').val()
            };

            if (!isError) {
                branchObj.postshopcomsumebonus(data);
            }
        });

    },

    //會員資料查詢
    querymemberidinfo: function(md_id) {
        myApp.showIndicator();
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            md_id: md_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.querymemberidinfo,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.querymemberidinforesult) {
                    var rObj = JSON.parse(JSON.stringify(r.querymemberidinforesult));
                    if (rObj.message_no === "000000000") {

                        switch (nowPage) {
                            case 'bonus-gift':
                                var temp = indexObj.template('templateShopUseInfo');
                                var item = temp(rObj);
                                $$('.user-info').html(item);
                                break;
                            case 'staff-management':
                                if ($$('.picker-modal.modal-in').length > 0) {
                                    myApp.closeModal('.picker-modal.modal-in');
                                }
                                if (rObj.md_picturepath == '') {
                                    rObj.md_picturepath = 'http://' + stringObj.WEB_URL + '/app/image/general_user.png';
                                }
                                if (rObj.md_picturepath.match('square')) {
                                    rObj.md_picturepath = rObj.md_picturepath.replace('picture?type=square', 'picture?type=large');
                                }
                                myApp.pickerModal(
                                    '<div class="picker-modal picker-add-staff">' +
                                    '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-times" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '<div class="center">' + stringObj.shop.add_employee + '</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>' +
                                    '<div class="picker-modal-inner">' +
                                    '<div class="content-block">' +
                                    '<div class="user-info">' +
                                    '<img src="' + rObj.md_picturepath + '" width=120 class="user-icon" onerror=\'this.src="http://' + stringObj.WEB_URL + '/app/image/general_user.png"\' />' +
                                    '<div class="user-name">' + rObj.md_cname + '</div>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>'
                                )

                                $('.picker-add-staff .right').click(function() {
                                    branchObj.postshopclerkmanager('0', md_id);
                                });
                                break;
                        }


                        myApp.initImagesLazyLoad('.page-content');

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //現場消費紅利贈與
    postshopcomsumebonus: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.postshopcomsumebonus,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.postshopcomsumebonusresult) {
                    var rObj = JSON.parse(JSON.stringify(r.postshopcomsumebonusresult));
                    if (rObj.message_no === "000000000") {

                        myApp.toast(stringObj.shop.gift_success, '', {}).show();

                        mainView.router.load({
                            url: 'shop/branch-main',
                            reload: true
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //店員管理初始化
    staffManagementInit: function(page) {
        //標題設置
        $('.navbar .center').html(stringObj.shop.staff_management);

        var q = page.query;

        branchObj.queryshopclerklist();

        $('.add').click(function() {
            scan('add-staff');
        });

    },

    //查詢商家店員資料
    queryshopclerklist: function() {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            md_id: mainSg.mdId,
            sd_id: branchData.sd_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryshopclerklist,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryshopclerklistresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryshopclerklistresult));
                    if (rObj.message_no === "000000000") {

                        for (var i in rObj.clerk_list) {
                            rObj.clerk_list[i].duties = stringObj.shop.duties;
                            if (rObj.clerk_list[i].smb_bindlevel === '0') {
                                rObj.clerk_list[i].smb_bindlevel = stringObj.shop.manager;
                                rObj.clerk_list[i].isEmployee = false;
                            } else {
                                rObj.clerk_list[i].smb_bindlevel = stringObj.shop.employee;
                                rObj.clerk_list[i].isEmployee = true;
                            }
                            if (rObj.clerk_list[i].smb_activestatus === '1') {
                                rObj.clerk_list[i].smb_activestatus = true;
                            } else {
                                rObj.clerk_list[i].smb_activestatus = false;
                            }
                            if (rObj.clerk_list[i].ssd_picturepath.match('square')) {
                                rObj.clerk_list[i].ssd_picturepath = rObj.clerk_list[i].ssd_picturepath.replace('picture?type=square', 'picture?type=large');
                            }
                        }

                        var temp = indexObj.template('templateStaffList');
                        var item = temp(rObj);
                        $$('.staff-list-block ul').html(item);
                        myApp.initImagesLazyLoad('.page-content');


                        //PC裝置頭像大小
                        if (browser_width > 992) {
                            $('.item-media img').attr('width', '100');
                        }

                        //監聽裝置畫面大小
                        $(window).on("resize", function() {
                            browser_width = $(window).width();
                            switch (nowPage) {
                                case 'staff-management':
                                    if (browser_width > 992) {
                                        $('.item-media img').css('width', '100px');
                                    } else {
                                        $('.item-media img').css('width', '50px');
                                    }
                                    break;
                            }

                        });


                        $('.isLeaving').click(function() {
                            var clerk_md_id = $(this).attr('smb_md_id');
                            myApp.modal({
                                title: stringObj.text.warn,
                                text: stringObj.shop.isLeaving,
                                buttons: [{
                                    text: stringObj.text.cancel,
                                    onClick: function() {

                                    }
                                }, {
                                    text: stringObj.text.confirm,
                                    onClick: function() {
                                        branchObj.postshopclerkmanager('1', clerk_md_id);
                                    }
                                }]
                            });
                        });


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //商家店員管理
    postshopclerkmanager: function(operation_type, clerk_md_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            md_id: mainSg.mdId,
            sd_id: branchData.sd_id,
            operation_type: operation_type,
            clerk_md_id: clerk_md_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.postshopclerkmanager,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.postshopclerkmanagerresult) {
                    var rObj = JSON.parse(JSON.stringify(r.postshopclerkmanagerresult));
                    if (rObj.message_no === "000000000") {

                        if (data.operation_type === '0') {
                            myApp.toast(stringObj.text.add_success, '', {}).show();
                        } else {
                            myApp.toast(stringObj.text.edit_success, '', {}).show();
                        }


                        mainView.router.load({
                            url: 'shop/staff-management',
                            reload: true
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //紅利記錄初始化
    bonusRecordInit: function(page) {
        //標題設置
        $('.navbar .center').html(stringObj.shop.bonus_record);

        var q = page.query;

        branchObj.querymembershopbonus('');

    },

    //用戶當前紅利查詢
    querymembershopbonus: function(sd_id) {
        myApp.showIndicator();
        sd_id = sd_id || '';
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.querymembershopbonus,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.querymembershopbonusresult) {
                    var rObj = JSON.parse(JSON.stringify(r.querymembershopbonusresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "000000003") {

                        if (rObj.shopbonus) {
                            for (var i in rObj.shopbonus) {
                                rObj.shopbonus[i].point = stringObj.shop.point;
                                rObj.shopbonus[i].sd_shopphotopath = stringObj.text.branch_img_path + rObj.shopbonus[i].sd_shopphotopath;
                            }

                            var temp = indexObj.template('templateBonusRecordList');
                            var item = temp(rObj);
                            $$('.bonus-record-list ul').html(item);
                            myApp.initImagesLazyLoad('.page-content');
                        } else {
                            dataNull('templateBonusRecordNull', stringObj.text.no_data, '.bonus-record-list ul');
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //商家書籤初始化
    favoriteInit: function(page) {

        //標題設置
        $('.navbar .center').html(stringObj.shop.shop_bookmarks);

        $('.favorite-left').click(function() {
            window.location = 'pm/branch-cooperative?cate=' + branch_cate + '&listtype=' + nowBranchType;
        });

        var q = page.query;

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};


        if (mainSg.sat !== undefined) {
            myApp.showIndicator();
            branchObj.favoriteUpdate();
        }


        $$('.tab-branch').on('click', function() {
            myApp.showTab('.branch');
            $$('.tab-shopcoupon').removeClass('active');
            $$(this).addClass('active');
        });
        $$('.tab-shopcoupon').on('click', function() {
            myApp.showTab('.shopcoupon');
            $$('.tab-branch').removeClass('active');
            $$(this).addClass('active');
        });


        $('.deleteAll').click(function() {

            var favoriteList = indexObj._dataStorage(indexObj._storage.favorite) || {
                lastupdate: '',
                newsList: [],
                couponList: [],
                branchList: [],
                shopcouponList: []
            };

            var temp;
            var item;

            if (favoriteList.newsList.length !== 0 && fType === 'news') {
                myApp.modal({
                    title: stringObj.text.warn,
                    text: stringObj.text.newsDeleteAll,
                    buttons: [{
                        text: stringObj.text.cancel
                    }, {
                        text: stringObj.text.confirm,
                        onClick: function() {
                            var mainSg = indexObj._dataCookies(indexObj._storage.main);
                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                useroperate: '2',
                                ubm_objecttype: '0',
                                ubm_objectid: 'all'
                            };

                            //console.log(JSON.stringify(data));
                            myApp.showIndicator();
                            indexObj._wcfget({
                                url: indexObj._dataUrl.userbookmarkupdate,
                                para: data,
                                success: function(r) {
                                    indexObj.jsonUrlDecode(r);
                                    //console.log(JSON.stringify(r));
                                    if (r.userbookmarkupdateresult) {
                                        var rObj = JSON.parse(JSON.stringify(r.userbookmarkupdateresult));
                                        if (rObj.message_no === "000000000") {

                                            if (isMobile.Android()) {
                                                webview.nowEvent('Nsdelallmark-And', 'none', md_id);
                                            } else if (isMobile.iOS()) {
                                                webview.nowEvent('Nsdelallmark-iOS', 'none', md_id);
                                            }

                                            favoriteList.newsList = [];
                                            indexObj._dataStorage(indexObj._storage.favorite, favoriteList);
                                            temp = indexObj.template('templateFavoriteListNull');
                                            item = temp('');
                                            $$('.news').html(item);

                                        } else {
                                            stringObj.return_header(rObj.message_no);
                                            if (_tip) {
                                                myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                                _tip = null;
                                            }
                                        }
                                        myApp.hideIndicator();
                                    }
                                },
                                error: function(r) {
                                    myApp.hideIndicator();
                                    noNetwork();
                                }
                            });

                        }
                    }, ]
                });
            } else if (favoriteList.couponList.length !== 0 && fType === 'coupon') {
                myApp.modal({
                    title: stringObj.text.warn,
                    text: stringObj.text.couponDeleteAll,
                    buttons: [{
                        text: stringObj.text.cancel
                    }, {
                        text: stringObj.text.confirm,
                        onClick: function() {

                            var mainSg = indexObj._dataCookies(indexObj._storage.main);
                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                useroperate: '2',
                                ubm_objecttype: '1',
                                ubm_objectid: 'all'
                            };

                            //console.log(JSON.stringify(data));

                            //var data = JSON.stringify(data);
                            myApp.showIndicator();
                            indexObj._wcfget({
                                url: indexObj._dataUrl.userbookmarkupdate,
                                para: data,
                                success: function(r) {
                                    indexObj.jsonUrlDecode(r);
                                    //console.log(JSON.stringify(r));
                                    if (r.userbookmarkupdateresult) {
                                        var rObj = JSON.parse(JSON.stringify(r.userbookmarkupdateresult));
                                        if (rObj.message_no === "000000000") {

                                            if (isMobile.Android()) {
                                                webview.nowEvent('Cpdelallmark-And', 'none', md_id);
                                            } else if (isMobile.iOS()) {
                                                webview.nowEvent('Cpdelallmark-iOS', 'none', md_id);
                                            }

                                            favoriteList.couponList = [];
                                            indexObj._dataStorage(indexObj._storage.favorite, favoriteList);

                                            temp = indexObj.template('templateFavoriteListNull');
                                            item = temp('');
                                            $$('.coupon').html(item);

                                        } else {
                                            stringObj.return_header(rObj.message_no);
                                            if (_tip) {
                                                myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                                _tip = null;
                                            }
                                        }
                                        myApp.hideIndicator();
                                    }
                                },
                                error: function(r) {
                                    myApp.hideIndicator();
                                    noNetwork();
                                }
                            });
                        }
                    }, ]
                });
            } else if (favoriteList.branchList.length !== 0 && fType === 'branch') {
                myApp.modal({
                    title: stringObj.text.warn,
                    text: stringObj.text.branchDeleteAll,
                    buttons: [{
                        text: stringObj.text.cancel
                    }, {
                        text: stringObj.text.confirm,
                        onClick: function() {

                            var mainSg = indexObj._dataCookies(indexObj._storage.main);
                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                useroperate: '2',
                                ubm_objecttype: '2',
                                ubm_objectid: 'all'
                            };

                            //console.log(JSON.stringify(data));

                            //var data = JSON.stringify(data);
                            myApp.showIndicator();
                            indexObj._wcfget({
                                url: indexObj._dataUrl.userbookmarkupdate,
                                para: data,
                                success: function(r) {
                                    indexObj.jsonUrlDecode(r);
                                    //console.log(JSON.stringify(r));
                                    if (r.userbookmarkupdateresult) {
                                        var rObj = JSON.parse(JSON.stringify(r.userbookmarkupdateresult));
                                        if (rObj.message_no === "000000000") {
                                            myApp.alert(stringObj.text.nowCoin + '：' + rObj.gpmr_point, stringObj.text.warn);

                                            favoriteList.branchList = [];
                                            indexObj._dataStorage(indexObj._storage.favorite, favoriteList);

                                            temp = indexObj.template('templateFavoriteListNull');
                                            item = temp('');
                                            $$('.branch').html(item);

                                        } else {
                                            stringObj.return_header(rObj.message_no);
                                            if (_tip) {
                                                myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                                _tip = null;
                                            }
                                        }
                                        myApp.hideIndicator();
                                    }
                                },
                                error: function(r) {
                                    myApp.hideIndicator();
                                    noNetwork();
                                }
                            });
                        }
                    }, ]
                });
            } else if (favoriteList.shopcouponList.length !== 0 && fType === 'shopcoupon') {
                myApp.modal({
                    title: stringObj.text.warn,
                    text: stringObj.text.shopcouponDeleteAll,
                    buttons: [{
                        text: stringObj.text.cancel
                    }, {
                        text: stringObj.text.confirm,
                        onClick: function() {

                            var mainSg = indexObj._dataCookies(indexObj._storage.main);
                            var data = {
                                modacc: stringObj.shop.moduleaccount,
                                modvrf: Cookies.get('modvrf'),
                                sat: mainSg.sat,
                                useroperate: '2',
                                ubm_objecttype: '3',
                                ubm_objectid: 'all'
                            };

                            //console.log(JSON.stringify(data));

                            //var data = JSON.stringify(data);
                            myApp.showIndicator();
                            indexObj._wcfget({
                                url: indexObj._dataUrl.userbookmarkupdate,
                                para: data,
                                success: function(r) {
                                    indexObj.jsonUrlDecode(r);
                                    //console.log(JSON.stringify(r));
                                    if (r.userbookmarkupdateresult) {
                                        var rObj = JSON.parse(JSON.stringify(r.userbookmarkupdateresult));
                                        if (rObj.message_no === "000000000") {

                                            favoriteList.shopcouponList = [];
                                            indexObj._dataStorage(indexObj._storage.favorite, favoriteList);

                                            temp = indexObj.template('templateFavoriteListNull');
                                            item = temp('');
                                            $$('.shopcoupon').html(item);

                                        } else {
                                            stringObj.return_header(rObj.message_no);
                                            if (_tip) {
                                                myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                                _tip = null;
                                            }
                                        }
                                        myApp.hideIndicator();
                                    }
                                },
                                error: function(r) {
                                    myApp.hideIndicator();
                                    noNetwork();
                                }
                            });
                        }
                    }, ]
                });
            }

        });


        var q = page.query;


        //每一秒呼叫一次function
        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 1000);

        //至頂按鈕
        //blogObj.fBtnToTop();


    },

    //書籤更新
    favoriteUpdate: function() {

        // var favoriteList = indexObj._dataStorage(indexObj._storage.favorite) || {
        //     lastupdate: '',
        //     newsList: [],
        //     couponList: [],
        //     branchList: [],
        //     shopcouponList: []
        // };

        var favoriteList = {
            lastupdate: '',
            newsList: [],
            couponList: [],
            branchList: [],
            shopcouponList: []
        };

        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            lastupdate: '' //favoriteList.lastupdate
        };


        //console.log(JSON.stringify(data));
        //userdatacollectresult
        indexObj._wcfget({
            url: indexObj._dataUrl.userbookmarkrecorver,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.userbookmarkrecorverresult) {
                    var rObj = JSON.parse(JSON.stringify(r.userbookmarkrecorverresult));

                    if (rObj.message_no === "000000000") {
                        var favoriteObj = JSON.stringify(favoriteList);

                        //alert(JSON.stringify(rObj));

                        for (var i in rObj.userbookmark) {

                            if (favoriteObj.match(rObj.userbookmark[i].ubm_objectid)) {

                                findAndRemove(favoriteList.newsList, 'ubm_objectid', rObj.userbookmark[i].ubm_objectid);

                                findAndRemove(favoriteList.couponList, 'ubm_objectid', rObj.userbookmark[i].ubm_objectid);

                                findAndRemove(favoriteList.branchList, 'ubm_objectid', rObj.userbookmark[i].ubm_objectid);

                                findAndRemove(favoriteList.shopcouponList, 'ubm_objectid', rObj.userbookmark[i].ubm_objectid);

                                var favoriteItem = {};
                                favoriteItem.ubm_objectid = rObj.userbookmark[i].ubm_objectid;
                                if (rObj.userbookmark[i].ubm_picpath) {
                                    favoriteItem.ubm_picpath = stringObj.text.branch_img_path + rObj.userbookmark[i].ubm_picpath;
                                } else {
                                    favoriteItem.ubm_picpath = '../app/image/imgDefault.png';
                                }
                                favoriteItem.ubm_title = rObj.userbookmark[i].ubm_title;
                                favoriteItem.create_date = rObj.userbookmark[i].create_date.substring(0, 10);
                                favoriteItem.isflag = rObj.userbookmark[i].isflag;
                                favoriteItem.date = new Date(rObj.userbookmark[i].create_date) / (1000 * 60 * 60 * 24);
                                if (rObj.userbookmark[i].ubm_objecttype === '0' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.newsList.push(favoriteItem);
                                } else if (rObj.userbookmark[i].ubm_objecttype === '1' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.couponList.push(favoriteItem);
                                } else if (rObj.userbookmark[i].ubm_objecttype === '2' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.branchList.push(favoriteItem);
                                } else if (rObj.userbookmark[i].ubm_objecttype === '3' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.shopcouponList.push(favoriteItem);
                                }

                            } else {

                                var favoriteItem1 = {};
                                favoriteItem1.ubm_objectid = rObj.userbookmark[i].ubm_objectid;
                                if (rObj.userbookmark[i].ubm_picpath) {
                                    favoriteItem1.ubm_picpath = stringObj.text.branch_img_path + rObj.userbookmark[i].ubm_picpath;
                                } else {
                                    favoriteItem1.ubm_picpath = '../app/image/imgDefault.png';
                                }
                                favoriteItem1.ubm_title = rObj.userbookmark[i].ubm_title;
                                favoriteItem1.create_date = rObj.userbookmark[i].create_date.substring(0, 10);
                                favoriteItem1.isflag = rObj.userbookmark[i].isflag;
                                favoriteItem1.date = new Date(rObj.userbookmark[i].create_date) / (1000 * 60 * 60 * 24);
                                if (rObj.userbookmark[i].ubm_objecttype === '0' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.newsList.push(favoriteItem1);
                                } else if (rObj.userbookmark[i].ubm_objecttype === '1' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.couponList.push(favoriteItem1);
                                } else if (rObj.userbookmark[i].ubm_objecttype === '2' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.branchList.push(favoriteItem1);
                                } else if (rObj.userbookmark[i].ubm_objecttype === '3' && rObj.userbookmark[i].isflag === '1') {
                                    favoriteList.shopcouponList.push(favoriteItem1);
                                }
                            }

                        }


                        favoriteList.lastupdate = rObj.lastupdate;

                        //排序
                        favoriteList.branchList.sort(sortByProperty('date', -1));
                        favoriteList.shopcouponList.sort(sortByProperty('date', -1));

                        indexObj._dataStorage(indexObj._storage.favorite, favoriteList);



                        if (nowPage === 'favorite') {
                            mainView.showNavbar();
                            var temp;
                            var item;
                            if (JSON.stringify(favoriteList.branchList) === "[]") {
                                temp = indexObj.template('templateFavoriteListNull');
                                item = temp('');
                                $$('.branch').html(item);
                            } else {
                                $$('.favorite-preloader').html('');
                                temp = indexObj.template('templateFavoriteBranchList');
                                item = temp(favoriteList);
                                $$('.branchList').html(item);

                                $('.branchList .to_info').unbind('click');
                                $('.branchList .to_info').click(function() {
                                    localStorage.setItem('pageInit', 'shop/favorite');
                                    window.location = 'pm/branch-info?sd_id=' + $(this).attr('sd_id');
                                });


                                //超過2行省略文字並加上省略符號...
                                $('.title').ellipsis({
                                    row: 2
                                });

                                myApp.initImagesLazyLoad('.page-content');
                            }

                            if (JSON.stringify(favoriteList.shopcouponList) === "[]") {
                                temp = indexObj.template('templateFavoriteListNull');
                                item = temp('');
                                $$('.shopcoupon').html(item);
                            } else {
                                $$('.favorite-preloader').html('');
                                temp = indexObj.template('templateFavoriteShopCouponList');
                                item = temp(favoriteList);
                                $$('.shopcouponList').html(item);

                                $('.shopcouponList .to_info').unbind('click');
                                $('.shopcouponList .to_info').click(function() {
                                    localStorage.setItem('pageInit', 'shop/favorite');
                                    window.location = 'pm/shopcoupon-info?scm_id=' + $(this).attr('scm_id');
                                });


                                //超過2行省略文字並加上省略符號...
                                $('.title').ellipsis({
                                    row: 2
                                });

                                myApp.initImagesLazyLoad('.page-content');
                            }

                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                    $$('.favorite-preloader').html('');
                }
            },
            error: function(r) {
                myApp.hideIndicator();
                $$('.favorite-preloader').html('');
                noNetwork();
            }
        });

    },

    //推送紀錄初始化
    pushRecordInit: function(page) {
        //標題設置
        $('.navbar .center').html(stringObj.shop.push_record);

        var q = page.query;

        //var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var temp = indexObj.template('templatePushRecord');
        var item = temp(stringObj.shop);
        $$('.push-record-content').html(item);

        branchObj.querymembercoininfo();

        //當前購點數
        //$('.now_coin span').html(mainSg.coin);

        nowTab = 'member';
        branchObj.firstId = '';
        branchObj.listId = '';
        branchObj.listLoading = false;
        //branchObj.queryshoppushrecord('0');
        myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載

        window.intervalParam = window.setInterval(function() {
            myApp.initImagesLazyLoad('.page-content'); //LazyLoad初始化
        }, 2000);

        $$('#member').on('show', function() {
            nowTab = 'member';
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            $$('#member ul').html('');
            branchObj.queryshoppushrecord('0');
        });

        $$('#not_member').on('show', function() {
            nowTab = 'not_member';
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
            $$('#not_member ul').html('');
            branchObj.queryshoppushrecord('1');
        });

        //下拉刷新
        /*$$('.pull-to-refresh-content').on('refresh', function () {
         branchObj.firstId = '';
         branchObj.listId = '';
         branchObj.listLoading = false;
         myApp.attachInfiniteScroll($$('.infinite-scroll')); //初始化無限加載
         if (nowTab === 'not_member') {
         branchObj.queryshoppushrecord('1');
         } else {
         branchObj.queryshoppushrecord('0');
         }
         });*/
        //無限加載
        $$('.infinite-scroll').on('infinite', function() {
            if (nowTab === 'not_member') {
                branchObj.queryshoppushrecord('1');
            } else {
                branchObj.queryshoppushrecord('0');
            }
        });



        //新增推送
        $('.add').click(function() {

            branchObj.queryshopservicefee('1', 'all');

        });

    },

    //推播記錄列表查詢
    queryshoppushrecord: function(sapm_objecttype) {
        if (branchObj.listLoading)
            return;
        branchObj.listLoading = true;
        $$('.infinite-scroll-preloader').show();

        myApp.showIndicator();
        sapm_objecttype = sapm_objecttype || '';
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            sapm_objecttype: sapm_objecttype,
            create_date: branchObj.listId,
            queryamount: '20'
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryshoppushrecord,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryshoppushrecordresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryshoppushrecordresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "000000003") {

                        if (rObj.pushhistory_array) {
                            $('#' + nowTab + ' .list-block ul').css('border', '1px solid #333');
                            for (var i in rObj.pushhistory_array) {
                                if (rObj.pushhistory_array[i].sapm_pushcontent.length > 20) {
                                    rObj.pushhistory_array[i].sapm_pushcontent = rObj.pushhistory_array[i].sapm_pushcontent.substring(0, 20) + '．．．';
                                }
                                if (rObj.pushhistory_array[i].sapm_pushpic) {
                                    rObj.pushhistory_array[i].sapm_pushpic = stringObj.text.branch_img_path + rObj.pushhistory_array[i].sapm_pushpic;
                                } else {
                                    rObj.pushhistory_array[i].sapm_pushpic = '../app/image/imgDefault.png';
                                }
                            }

                            var temp = indexObj.template('templatePushRecordData');
                            var item = temp(rObj);
                            $$('#' + nowTab + ' .list-block ul').append(item);
                            myApp.initImagesLazyLoad('.page-content');

                            if (!isMobile.Android() && !isMobile.iOS()) {
                                //美化scroll bar
                                $(".page-content .tab").niceScroll({
                                    cursorcolor: "rgba(100,100,100,.9)",
                                    cursoropacitymin: 0,
                                    cursorborder: "1px solid #000",
                                    scrollspeed: 20
                                });
                            }

                            //超過2行省略文字並加上省略符號...
                            $('.item-info .title').ellipsis({
                                row: 1
                            });


                            if (branchObj.firstId === '') {
                                branchObj.firstId = rObj.pushhistory_array[0].create_date;
                            }

                            //推送次數
                            var today_push = indexObj._dataStorage(branchObj.storage.today_push) || [];
                            findArrayItem(today_push, 'sd_id', data.sd_id);

                            var date = new Date();
                            var month = (date.getMonth() + 1);
                            var dates = date.getDate();
                            if (month < 10) {
                                month = '0' + month;
                            }
                            if (dates < 10) {
                                dates = '0' + dates;
                            }
                            var today = new Date(date.getFullYear() + '/' + month + '/' + dates) / (1000 * 60 * 60 * 24); //當前推送時間
                            var last_update_date = new Date(today_push[nowIndex].last_update_date) / (1000 * 60 * 60 * 24); //最後推送時間


                            //推送次數初始化
                            if (today - last_update_date >= 1) {
                                today_push[nowIndex].push_times = 0;
                                indexObj._dataStorage(branchObj.storage.today_push, today_push);
                            }

                            if (today_push[nowIndex].last_update_date === '2000/01/01') {
                                today_push[nowIndex].last_update_date = rObj.pushhistory_array[0].create_date.substring(0, 4) + '/' + rObj.pushhistory_array[0].create_date.substring(5, 7) + '/' + rObj.pushhistory_array[0].create_date.substring(8, 10);
                                indexObj._dataStorage(branchObj.storage.today_push, today_push);
                            }


                            branchObj.listId = rObj.pushhistory_array[(rObj.pushhistory_array.length - 1)].create_date;
                            $$('.infinite-scroll-preloader').hide();


                        } else {
                            myApp.detachInfiniteScroll($$('.infinite-scroll'));
                            $$('.infinite-scroll-preloader').remove();
                            if (!branchObj.listId) {
                                dataNull('templatePushRecordNull', stringObj.text.no_data, '#' + nowTab + ' .list-block ul');
                            }
                        }
                        branchObj.listLoading = false;
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                myApp.detachInfiniteScroll($$('.infinite-scroll'));
                $$('.infinite-scroll-preloader').remove();
                if (!branchObj.listId) {
                    dataNull('templatePushRecordNull', stringObj.text.no_data, '#' + nowTab + ' .list-block ul');
                }
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });

    },

    //汽車特店服務費用項目
    queryshopservicefee: function(ssfi_servicetype, ssfi_feename) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            ssfi_servicetype: ssfi_servicetype
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryshopservicefee,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryshopservicefeeresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryshopservicefeeresult));
                    if (rObj.message_no === "000000000") {

                        if (nowPage === 'push-record') {
                            myApp.modal({
                                title: stringObj.shop.push_type,
                                text: '<div class="push-block">' +
                                    '<div class="type-btn member-push"><a href="message_push/select-member">' + stringObj.shop.member_push + '</a></div>' +
                                    '<div class="note member-note">' + stringObj.shop.push_coin + '</div>' +
                                    '<div class="type-btn not-member-push"><a href="message_push/search-member">' + stringObj.shop.not_member_push + '</a></div>' +
                                    '<div class="note not-member-note">' + stringObj.shop.push_coin + '</div>' +
                                    '</div>',
                                buttons: [{
                                    text: stringObj.text.cancel,
                                    onClick: function() {}
                                }]
                            });

                            $('.modal').addClass('push-type-modal');


                            findArrayItem(rObj.parameterkey, 'ssfi_feename', 'shopmemberpush');
                            $('.member-note span').html(rObj.parameterkey[nowIndex].ssfi_itemprice);
                            findArrayItem(rObj.parameterkey, 'ssfi_feename', 'nonshopmemberpush');
                            $('.not-member-note span').html(rObj.parameterkey[nowIndex].ssfi_itemprice);


                            $('.member-push').click(function() {
                                myApp.closeModal('.push-type-modal');
                            });
                            $('.not-member-push').click(function() {
                                myApp.closeModal('.push-type-modal');
                            });
                        } else if (nowPage === 'message-info') {

                            findArrayItem(rObj.parameterkey, 'ssfi_feename', ssfi_feename);

                            var sapm_pushpic = localStorage.getItem(branchObj.storage.imagePath) || '';

                            var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};


                            switch (ssfi_feename) {
                                case 'shopmemberpush':
                                    var md_id_array = indexObj._dataStorage(branchObj.storage.md_id_array) || [];
                                    $('.push-num input').val(md_id_array.length);
                                    $('.push-coin input').val(parseInt(rObj.parameterkey[nowIndex].ssfi_itemprice) * md_id_array.length);
                                    break;
                                case 'nonshopmemberpush':
                                    var push_objectfillter = indexObj._dataStorage(branchObj.storage.push_objectfillter) || '';
                                    $('.push-num input').val(push_objectfillter.push_num);
                                    $('.push-coin input').val(parseInt(rObj.parameterkey[nowIndex].ssfi_itemprice) * push_objectfillter.push_num);
                                    break;
                            }


                            //推送
                            $('.tabbar .send').unbind('click');
                            $('.tabbar .send').click(function() {
                                var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
                                if (parseFloat(mainSg.coin) > 0) {
                                    myApp.modal({
                                        title: stringObj.text.warn,
                                        text: stringObj.shop._push_check,
                                        buttons: [{
                                            text: stringObj.text.cancel,
                                            onClick: function() {}
                                        }, {
                                            text: stringObj.text.confirm,
                                            onClick: function() {

                                                var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

                                                if (sapm_pushpic.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
                                                    sapm_pushpic = sapm_pushpic.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
                                                }

                                                var scm_id = $('.push-item-block .push-item').attr('scm_id') || '';

                                                switch (ssfi_feename) {
                                                    case 'shopmemberpush':
                                                        var push_content = {
                                                            sd_id: branchData.sd_id,
                                                            sapm_pushpic: sapm_pushpic,
                                                            sapm_pushcontent: $('.push-message textarea').val(),
                                                            sapm_designatefunction: '0',
                                                            sapm_feeitem: rObj.parameterkey[nowIndex].ssfi_serno,
                                                            push_object: md_id_array.toString(),
                                                            title: branchData.sd_shopname,
                                                            target: stringObj.shop.push_type_array.indexOf($('.push-type').val()) + 2,
                                                            scm_id: scm_id
                                                        };
                                                        var data = {
                                                            modacc: stringObj.shop.moduleaccount,
                                                            modvrf: Cookies.get('modvrf'),
                                                            sat: mainSg.sat,
                                                            push_content: push_content,
                                                            psr_no: Cookies.get('salt_no'),
                                                            sign_content: CryptoJS.SHA256(JSON.stringify(push_content) + Cookies.get('salt')).toString()
                                                        };

                                                        branchObj.pushshopad2member(data);
                                                        break;
                                                    case 'nonshopmemberpush':
                                                        var push_num = push_objectfillter.push_num;
                                                        push_objectfillter = {
                                                            fbgender: push_objectfillter.fbgender,
                                                            rl_citys: push_objectfillter.rl_citys,
                                                            age_min: push_objectfillter.age_min,
                                                            age_max: push_objectfillter.age_max,
                                                            rl_citys_id: push_objectfillter.rl_citys_id
                                                        };

                                                        var push_content = {
                                                            sd_id: branchData.sd_id,
                                                            sapm_pushpic: sapm_pushpic,
                                                            sapm_pushcontent: $('.push-message textarea').val(),
                                                            sapm_designatefunction: '0',
                                                            sapm_feeitem: rObj.parameterkey[nowIndex].ssfi_serno,
                                                            sapm_objectamount: push_num,
                                                            push_objectfillter: push_objectfillter,
                                                            title: branchData.sd_shopname,
                                                            target: stringObj.shop.push_type_array.indexOf($('.push-type').val()) + 2,
                                                            scm_id: scm_id
                                                        };
                                                        var data = {
                                                            modacc: stringObj.shop.moduleaccount,
                                                            modvrf: Cookies.get('modvrf'),
                                                            sat: mainSg.sat,
                                                            push_content: push_content,
                                                            psr_no: Cookies.get('salt_no'),
                                                            sign_content: CryptoJS.SHA256(JSON.stringify(push_content) + Cookies.get('salt')).toString()
                                                        };

                                                        branchObj.pushshopad2nonmember(data);
                                                        break;
                                                }

                                                if (localStorage.getItem('save_msg')) {

                                                    branchObj.modifycannedmessage('', '1', localStorage.getItem('save_msg'));

                                                }


                                            }
                                        }]
                                    });
                                } else {
                                    myApp.toast(stringObj.text.no_coin, '', {}).show();
                                }

                            });


                        }



                    } else if (rObj.message_no === "000000003") {
                        //dataNull('templateBonusRecordNull', stringObj.text.no_data, '.bonus-record-list ul');
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //選擇發送對象初始化
    selectMemberInit: function(page) {
        //標題設置
        $('.navbar .center').html(stringObj.shop.select_member);

        var q = page.query;

        var temp = indexObj.template('templateSelectMember');
        var item = temp(stringObj.shop);
        $$('.select-member-content').html(item);


        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        branchObj.query_shopmember(branchData.sd_id);


    },

    //篩選推送對象初始化
    searchMemberInit: function(page) {
        //標題設置
        $('.navbar .center').html(stringObj.shop.seach_member);

        var q = page.query;

        var temp = indexObj.template('templateSearchMember');
        var item = temp(stringObj.text);
        $$('.search-member-content').html(item);

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};


        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            fbgender: '',
            rl_citys: '',
            age_min: '',
            age_max: ''
        };

        var push_objectfillter = indexObj._dataStorage(branchObj.storage.push_objectfillter) || '';

        if (push_objectfillter) {
            $('.gender').val(stringObj.text.gender_array[parseInt(push_objectfillter.fbgender)]);
            if (push_objectfillter.age_max !== '' && push_objectfillter.age_max !== '') {
                $('.age').val(push_objectfillter.age_min + ' ~ ' + push_objectfillter.age_max);
            }
            $('.location').val(push_objectfillter.rl_citys);
            data.fbgender = push_objectfillter.fbgender;
            data.rl_citys = push_objectfillter.rl_citys;
            data.age_min = push_objectfillter.age_min;
            data.age_max = push_objectfillter.age_max;
            data.rl_citys_id = push_objectfillter.rl_citys_id;
        }

        //性別
        var pickerGender = myApp.picker({
            input: '.gender',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-trash-o" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onOpen: function(p) {
                p.setValue([parseInt(data.fbgender)]);
                $('.left').click(function() {
                    $('.gender').val('');
                    p.value = '';
                });
            },
            cols: [{
                    values: [0, 1],
                    displayValues: stringObj.text.gender_array,
                    textAlign: 'center',
                    width: '100%'

                }

            ],
            onClose: function(p) {
                data.fbgender = p.value.toString();
            }
        });


        var age_array = [];
        for (var i = 18; i < 81; i++) {
            age_array.push(i);
        }

        //年齡
        var pickerAge = myApp.picker({
            input: '.age',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-trash-o" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + ' ~ ' + values[1];
            },
            onOpen: function(p) {
                p.setValue([parseInt(data.age_min), parseInt(data.age_max)]);
                $('.left').click(function() {
                    $('.age').val('');
                    p.value = [];
                });
            },
            cols: [{
                    values: age_array,
                    textAlign: 'right',
                    width: '45%',
                    onChange: function(picker, age) {
                        var ages = [];
                        for (var i = parseInt(age); i < 81; i++) {
                            ages.push(i);
                        }
                        if (picker.cols[2].replaceValues) {
                            picker.cols[2].replaceValues(ages);
                        }
                    }

                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' ~ '
                }, {
                    values: age_array,
                    textAlign: 'left',
                    width: '45%'

                }

            ],
            onClose: function(p) {
                data.age_min = p.value[0] || '';
                data.age_max = p.value[1] || '';
            }
        });



        var cities = '';
        for (var i in stringObj.counties) {
            cities += '<div class="checkbox-item col-25">' +
                '<input type="checkbox" id="r' + (parseInt(i) + 1) + '" name="location" value="' + (parseInt(i) + 1) + '" city-name="' + stringObj.counties[i] + '"/>' +
                '<label for="r' + (parseInt(i) + 1) + '"><span></span>' + stringObj.counties[i] + '</label>' +
                '</div>';
        }

        //所在地
        $$('.location').on('click', function() {
            // Check first, if we already have opened picker

            if ($$('.picker-modal.modal-in').length > 0) {
                myApp.closeModal('.picker-modal.modal-in');
            }
            myApp.pickerModal(
                '<div class="picker-modal picker-carlocation">' +
                '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-trash-o" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.used_car.cbi_carlocation + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>' +
                '<div class="picker-modal-inner">' +
                '<div class="content-block">' +
                '<div class="block-list row">' +
                cities +
                '</div>' +
                '</div>' +
                '</div>' +
                '</div>'
            )

            $$('.picker-carlocation .right').click(function() {
                var region = [];
                var mCities = [];
                $("input[name='location']:checked").each(function() {
                    region.push($(this).val());
                    mCities.push($(this).attr('city-name'));
                });

                //console.log(region);
                //console.log(mCities);
                $('.location').val(mCities.toString());
                data.rl_citys = mCities.toString();
                data.rl_citys_id = region.toString();
            });

            $('.picker-carlocation  .left').click(function() {
                $('.location').val('');
                data.rl_citys = '';
                data.rl_citys_id = '';
            });

            if (data.rl_citys_id) {
                for (var i in data.rl_citys_id.split(',')) {
                    $('#r' + data.rl_citys_id.split(',')[i]).prop('checked', true);
                }
            }
        });



        //查詢
        $('.search').click(function() {

            if (data.fbgender === '' && data.rl_citys === '' && data.age_min === '' && data.age_max === '') {
                myApp.alert(stringObj.text.any_condition, stringObj.text.warn);
            } else {
                branchObj.querypushnonmember(data);
            }

        });

    },

    //汽車特店推播非會員對象前查詢可推播總數
    querypushnonmember: function(data) {
        myApp.showIndicator();

        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.querypushnonmember,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.querypushnonmemberresult) {
                    var rObj = JSON.parse(JSON.stringify(r.querypushnonmemberresult));
                    if (rObj.message_no === "000000000") {


                        myApp.modal({
                            title: stringObj.text.search_result,
                            text: '<div class="search-result-block">' +
                                '<div class="push-num">' + stringObj.shop.push_num + '</div>' +
                                '<div class="set-push-num">' + stringObj.shop.set_push_num + '</div>' +
                                //'<div class="note not-member-note">' + stringObj.shop.push_coin + '</div>' +
                                '</div>',
                            buttons: [{
                                text: stringObj.text.cancel,
                                onClick: function() {}
                            }, {
                                text: stringObj.text.confirm,
                                onClick: function() {

                                    if ($(".set-push-num input").val() != '') {
                                        var push_objectfillter = {
                                            fbgender: data.fbgender,
                                            rl_citys_id: data.rl_citys_id,
                                            rl_citys: data.rl_citys,
                                            age_min: data.age_min,
                                            age_max: data.age_max,
                                            push_num: $(".set-push-num input").val()
                                        };

                                        indexObj._dataStorage(branchObj.storage.push_objectfillter, push_objectfillter);

                                        mainView.router.load({
                                            url: 'message_push/message-info?from=search&type=edit&ssfi_feename=nonshopmemberpush',
                                            reload: true
                                        });
                                    } else {
                                        myApp.toast(stringObj.shop.no_push_num, '', {}).show();
                                    }


                                }
                            }]
                        });

                        $('.modal').addClass('search-result-modal');
                        $('.push-num span').html(rObj.objectamount);

                        //監聽人數輸入事件
                        $(".set-push-num input").on("input", function(e) {
                            //Max
                            if ($(this).val() > parseInt(rObj.objectamount)) {
                                $(this).val(parseInt(rObj.objectamount));
                            }
                            //Min
                            if ($(this).val() < 0) {
                                $(this).val(1);
                            }
                            if ($(this).val() == 0) {
                                $(this).val('');
                            }
                        });


                    } else if (rObj.message_no === "000000003") {
                        myApp.toast(stringObj.text.search_null, '', {}).show();
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //推送內容初始化
    messageInfoInit: function(page) {
        var q = page.query;

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        if (localStorage.getItem(branchObj.storage.imagePath)) {
            stringObj.shop.push_image = stringObj.text.branch_img_path + localStorage.getItem(branchObj.storage.imagePath);
        } else {
            stringObj.shop.push_image = '../app/image/imgDefault.png';
        }

        var temp = indexObj.template('templateMessageInfo');
        var item = temp(stringObj.shop);
        $$('.message-info-content').html(item);
        myApp.initImagesLazyLoad('.page-content');

        switch (q.type) {
            case 'edit':
                var type = 'edit';

                $('.save_quick_msg').css('display', 'block');

                var isChecked = false;
                $('.save_quick_msg .item-input input').change(function() {
                    if ($(this).is(':checked')) {
                        isChecked = true;
                    } else {
                        isChecked = false;
                    }
                });

                //推送內容
                $('.push-message').on('click', function() {

                    myApp.modal({
                        title: stringObj.shop.pushed_info,
                        text: '<textarea class="info resizable" placeholder="' + stringObj.text.context + '(' + stringObj.text.max100 + ')" rows="7"></textarea><div class="quick-msg" style="color:orange"><i class="fa fa-bolt" aria-hidden="true"></i>&nbsp;<u>快選訊息</u></div>',
                        buttons: [{
                            text: stringObj.text.cancel,
                            onClick: function() {}
                        }, {
                            text: stringObj.text.confirm,
                            onClick: function() {
                                $('.push-message textarea').val($('.info').val());
                            }
                        }, ]
                    });

                    $('.info').val($('.push-message textarea').val());

                    $('textarea.info').focus();

                    $('.quick-msg').click(function(event) {
                        branchObj.querycannedmessagelist();
                    });

                });

                //推送類型
                var push_type = myApp.picker({
                    input: '.push-type',
                    rotateEffect: false,
                    toolbarTemplate: '<div class="toolbar">' +
                        '<div class="toolbar-inner">' +
                        '<div class="left">' +
                        '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                        '</div>' +
                        '<div class="center">' + stringObj.shop.push_type + '</div>' +
                        '<div class="right">' +
                        '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                        '</div>' +
                        '</div>' +
                        '</div>',
                    formatValue: function(p, values, displayValues) {
                        return values[0];
                    },
                    onOpen: function(p) {},
                    onClose: function(p) {
                        if ((p.cols[0].activeIndex + 2) === 3) {
                            branchObj.getShopCouponList(branchData.sd_id);
                        } else {
                            $('.push-item-block').css('display', 'none');
                        }
                    },
                    cols: [{
                        width: '100%',
                        textAlign: 'center',
                        values: stringObj.shop.push_type_array
                    }]
                });

                //標題設置
                $('.navbar .center').html(stringObj.shop.set_message);
                $('.toolbar.confirm').css('display', 'initial');
                $('.edit-img').css('display', 'initial');
                $('.toolbar.confirm').click(function() {

                    $('.push-message').removeClass('lengthError');
                    $('.push-message').removeClass('nullError');
                    var push_message = $('.push-message textarea').val();
                    var isError = false;
                    //長度判斷
                    if (push_message.length > 100) {
                        $('.push-message').addClass('lengthError');
                        isError = true;
                    }

                    //填寫判斷
                    if (push_message === "") {
                        $('.push-message').addClass('nullError');
                        isError = true;
                    }


                    if (!isError) {
                        type = 'check';
                        $('.navbar .center').html(stringObj.shop.push_check);
                        $('.toolbar.confirm').css('display', 'none');
                        $('.edit-img').css('display', 'none');
                        $('.toolbar.tabbar').css('display', 'initial');
                        $('.push-num').css('display', 'initial');
                        $('.push-coin').css('display', 'initial');
                        $('.push-message').unbind('click');
                        $('.save_quick_msg input').attr('disabled', 'disabled');
                        $('.push-type-block input').attr('disabled', 'disabled');

                        if (isChecked) {
                            localStorage.setItem('save_msg', $('.push-message textarea').val());
                        } else {
                            if (localStorage.getItem('save_msg')) {
                                localStorage.removeItem('save_msg');
                            }
                        }

                        branchObj.queryshopservicefee('1', q.ssfi_feename);
                    }

                });
                $('.left a').unbind('click');
                $('.left a').click(function() {
                    if (type === 'check') {
                        type = 'edit';
                        $('.navbar .center').html(stringObj.shop.set_message);
                        $('.toolbar.confirm').css('display', 'initial');
                        $('.edit-img').css('display', 'initial');
                        $('.toolbar.tabbar').css('display', 'none');
                        $('.push-num').css('display', 'none');
                        $('.push-coin').css('display', 'none');
                        $('.save_quick_msg').css('display', 'block');
                        $('.save_quick_msg input').removeAttr('disabled');
                        $('.push-type-block input').removeAttr('disabled');
                        $('.push-message').unbind('click');
                        //推送內容
                        $('.push-message').on('click', function() {

                            myApp.modal({
                                title: stringObj.shop.pushed_info,
                                text: '<textarea class="info resizable" placeholder="' + stringObj.text.context + '(' + stringObj.text.max100 + ')" rows="7"></textarea><div class="quick-msg" style="color:orange"><i class="fa fa-bolt" aria-hidden="true"></i>&nbsp;<u>快選訊息</u></div>',
                                buttons: [{
                                    text: stringObj.text.cancel,
                                    onClick: function() {}
                                }, {
                                    text: stringObj.text.confirm,
                                    onClick: function() {
                                        $('.push-message textarea').val($('.info').val());
                                    }
                                }, ]
                            });

                            $('.info').val($('.push-message textarea').val());

                            $('textarea.info').focus();

                            $('.quick-msg').click(function(event) {
                                branchObj.querycannedmessagelist();
                            });

                        });
                    } else {
                        mainView.router.load({
                            url: 'message_push/' + q.from + '-member',
                            reload: true
                        });
                    }
                });
                break;
                /*case 'check':
                 //標題設置
                 $('.navbar .center').html(stringObj.shop.push_check);
                 $('.toolbar.tabbar').css('display', 'initial');
                 $('.push-num').css('display', 'initial');
                 $('.push-coin').css('display', 'initial');
                 break;*/
            case 'info':
                //標題設置
                $('.navbar .center').html(stringObj.shop.pushed_info);
                $('.push-num').css('display', 'initial');
                $('.push-coin').css('display', 'initial');
                $('.push-readed').css('display', 'initial');
                $('.left a').attr('href', 'message_push/push-record');
                branchObj.queryshoppushcontent(q.sapm_id);
                break;
        }


        //編輯照片
        $('.edit-img').click(function() {
            if (Cookies.get('app_version') !== undefined) {
                addImage('push-img', '');
            } else {
                setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shoppush', '');
            }
        });

    },

    //推播項目內容查詢
    queryshoppushcontent: function(sapm_id) {
        myApp.showIndicator();
        sapm_id = sapm_id || '';
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            sapm_id: sapm_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryshoppushcontent,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryshoppushcontentresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryshoppushcontentresult));
                    if (rObj.message_no === "000000000") {

                        $('.push-img-block img').attr('src', stringObj.text.branch_img_path + rObj.sapm_pushpic);
                        $('.push-message textarea').val(rObj.sapm_pushcontent);
                        $('.push-num input').val(rObj.sapm_objectamount);
                        $('.push-coin input').val(rObj.sapm_pushfee);
                        $('.push-readed input').val(rObj.readed_count);

                        myApp.initImagesLazyLoad('.page-content');


                    } else if (rObj.message_no === "000000003") {
                        //dataNull('templateBonusRecordNull', stringObj.text.no_data, '.bonus-record-list ul');
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //汽車特店會員優惠訊息推播
    pushshopad2member: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.pushshopad2member,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.pushshopad2memberresult) {
                    var rObj = JSON.parse(JSON.stringify(r.pushshopad2memberresult));
                    if (rObj.message_no === "000000000") {

                        //推送次數
                        var today_push = indexObj._dataStorage(branchObj.storage.today_push) || [];
                        findArrayItem(today_push, 'sd_id', data.push_content.sd_id);

                        var date = new Date();
                        var month = (date.getMonth() + 1);
                        var dates = date.getDate();
                        if (month < 10) {
                            month = '0' + month;
                        }
                        if (dates < 10) {
                            dates = '0' + dates;
                        }
                        var today = new Date(date.getFullYear() + '/' + month + '/' + dates) / (1000 * 60 * 60 * 24); //當前推送時間
                        var pushed_date = new Date(today_push[nowIndex].last_update_date) / (1000 * 60 * 60 * 24); //最後推送時間

                        //console.log(today - pushed_date);

                        if (today - pushed_date < 1) {
                            today_push[nowIndex].push_times = parseInt(today_push[nowIndex].push_times) + 1;
                        } else {
                            today_push[nowIndex].push_times = 1;
                        }
                        today_push[nowIndex].last_update_date = date.getFullYear() + '/' + month + '/' + dates;
                        indexObj._dataStorage(branchObj.storage.today_push, today_push);


                        if (isMobile.Android()) {
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, data.push_content.sapm_pushpic, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                        } else if (isMobile.iOS()) {
                            var sapm_pushpic = [];
                            sapm_pushpic.push(data.push_content.sapm_pushpic);
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, sapm_pushpic, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', []);
                        }

                        myApp.toast(stringObj.shop.push_success, '', {}).show();
                        mainView.router.load({
                            url: 'message_push/push-record',
                            reload: true
                        });


                    } else if (rObj.message_no === "000000003") {
                        //dataNull('templateBonusRecordNull', stringObj.text.no_data, '.bonus-record-list ul');
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },

    //汽車特店非會員優惠訊息推播
    pushshopad2nonmember: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.pushshopad2nonmember,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.pushshopad2nonmemberresult) {
                    var rObj = JSON.parse(JSON.stringify(r.pushshopad2nonmemberresult));
                    if (rObj.message_no === "000000000") {

                        var today_push = indexObj._dataStorage(branchObj.storage.today_push) || [];
                        findArrayItem(today_push, 'sd_id', data.push_content.sd_id);

                        var date = new Date();
                        var month = (date.getMonth() + 1);
                        var dates = date.getDate();
                        if (month < 10) {
                            month = '0' + month;
                        }
                        if (dates < 10) {
                            dates = '0' + dates;
                        }
                        var today = new Date(date.getFullYear() + '/' + month + '/' + dates) / (1000 * 60 * 60 * 24); //當前推送時間
                        var pushed_date = new Date(today_push[nowIndex].last_update_date) / (1000 * 60 * 60 * 24); //最後推送時間

                        if (today - pushed_date <= 1) {
                            today_push[nowIndex].push_times = parseInt(today_push[nowIndex].push_times) + 1;
                        } else {
                            today_push[nowIndex].push_times = 1;
                        }
                        today_push[nowIndex].last_update_date = date.getFullYear() + '/' + month + '/' + dates;
                        indexObj._dataStorage(branchObj.storage.today_push, today_push);

                        if (isMobile.Android()) {
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, data.push_content.sapm_pushpic, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                        } else if (isMobile.iOS()) {
                            var sapm_pushpic = [];
                            sapm_pushpic.push(data.push_content.sapm_pushpic);
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, sapm_pushpic, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', []);
                        }


                        myApp.toast(stringObj.shop.push_success, '', {}).show();
                        mainView.router.load({
                            url: 'message_push/push-record',
                            reload: true
                        });


                    } else if (rObj.message_no === "000000003") {
                        //dataNull('templateBonusRecordNull', stringObj.text.no_data, '.bonus-record-list ul');
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }
                myApp.hideIndicator();
            },
            error: function(r) {
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //禮點,紅利,購點
    // querymembercoininfo: function() {
    //     myApp.showIndicator();
    //     var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
    //     var data = {
    //         modacc: stringObj.shop.moduleaccount,
    //         modvrf: Cookies.get('modvrf'),
    //         sat: mainSg.sat
    //     };
    //     //console.log(JSON.stringify(data));
    //     indexObj._wcfget({
    //         url: branchObj.dataUrl.querymembercoininfo,
    //         para: data,
    //         success: function(r) {
    //             myApp.hideIndicator();
    //             indexObj.jsonUrlDecode(r);
    //             //console.log(JSON.stringify(r));
    //             if (r.querymembercoininforesult) {
    //                 var rObj = JSON.parse(JSON.stringify(r.querymembercoininforesult));
    //                 if (rObj.message_no === "000000000") {
    //                     mainSg.coin = rObj.cos_end_coin || "0";
    //                     mainSg.giftpoint = rObj.cos_end_giftpoint || "0";
    //                     mainSg.exp = rObj.cos_end_exp || "0";
    //                     indexObj._dataStorage(indexObj._storage.main, mainSg);

    //                     if (nowPage === 'push-record') {
    //                         //當前購點數
    //                         $('.now_coin span').html(rObj.cos_end_coin);
    //                         //取得推送紀錄
    //                         branchObj.queryshoppushrecord('0');

    //                         var branchData = indexObj._dataStorage(branchObj.storage.branchData);
    //                         var today_push = indexObj._dataStorage(branchObj.storage.today_push) || [];
    //                         findArrayItem(today_push, 'sd_id', branchData.sd_id);
    //                         $('.today_pushed span').html(today_push[nowIndex].push_times);

    //                     }



    //                 } else {
    //                     stringObj.return_header(rObj.message_no);
    //                     if (_tip) {
    //                         myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
    //                         _tip = null;
    //                     }
    //                 }
    //             }

    //         },
    //         error: function(r) {
    //             //console.log('error:' + JSON.stringify(r));
    //             myApp.hideIndicator();
    //         }
    //     });
    // },
    //查詢購點
    querymembercoininfo: function() {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            md_id: mainSg.mdId,
            call_update_module_id: stringObj.call_update_module_id,
            chkvalue: CryptoJS.SHA1(stringObj.call_update_module_id + stringObj.BANK_PASS + mainSg.mdId + '').toString()
        };
        data = btoa(JSON.stringify(data));

        var para = {
            chkvalue: CryptoJS.SHA1(stringObj.call_update_module_id + stringObj.BANK_PASS + mainSg.mdId + '').toString(),
            data: data
        };
        //console.log(JSON.stringify(para));
        $.ajax({
            dataType: 'json',
            type: 'POST',
            url: branchObj.dataUrl.querymembercoininfo,
            data: para,
            success: function(r) {
                myApp.hideIndicator();
                //console.log(JSON.stringify(r));
                if (r.code === 0) {
                    mainSg.coin = r.data.bpmr_point || "0";
                    mainSg.giftpoint = r.data.gpmr_point || "0";
                    mainSg.exp = r.data.epmr_point || "0";
                    indexObj._dataCookies(indexObj._storage.main, mainSg, 'iscarmg.com');

                    if (nowPage === 'push-record') {
                        //當前購點數
                        $('.now_coin span').html(r.data.bpmr_point);
                        //取得推送紀錄
                        branchObj.queryshoppushrecord('0');

                        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                        var today_push = indexObj._dataStorage(branchObj.storage.today_push) || [];
                        findArrayItem(today_push, 'sd_id', branchData.sd_id);
                        $('.today_pushed span').html(today_push[nowIndex].push_times);

                    } else if (nowPage === 'shop-buy-data') {
                        var shop_item = indexObj._dataStorage('shop_item') || {};
                        $('.gift_discount-block').css('display', 'initial');
                        $('.md_gift').html(r.data.gpmr_point + ' p');
                        $('.ntd').html('(NTD ' + Math.floor(parseFloat(r.data.gpmr_point) / 50) + ')');
                        $('.max_discount-block .max_discount').html('NTD ' + Math.floor((parseFloat(shop_item.scm_price) / 2)));
                        $('.max_discount-block .gift-point').html('(' + Math.floor((parseFloat(shop_item.scm_price) / 2) * 50) + ' p)');

                        var max_discount = Math.floor(parseFloat(shop_item.scm_price) / 2);
                        if (Math.floor(parseFloat(r.data.gpmr_point) / 50) > Math.floor((parseFloat(shop_item.scm_price) / 2))) {
                            max_discount = Math.floor((parseFloat(shop_item.scm_price) / 2));
                        } else {
                            max_discount = Math.floor(parseFloat(mainSg.giftpoint) / 50);
                        }

                        var scg_subtract_price = 0;

                        $('.discount-block .input .discount').change(function() {
                            if (parseInt($(this).val()) > max_discount) {
                                $(this).val(max_discount);
                            }
                            if (parseInt($(this).val()) < 0 || $(this).val() === '') {
                                $(this).val('');
                            }
                            $('.discount-block .input .gift-point').html('(' + Math.floor(parseFloat($(this).val()) * 50) + ' p)');
                            scg_subtract_price = parseInt($(this).val());
                        });
                        $('.discount-block .input .discount').keyup(function() {
                            if (parseInt($(this).val()) > max_discount) {
                                $(this).val(max_discount);
                            }
                            if (parseInt($(this).val()) < 0 || $(this).val() === '') {
                                $(this).val(0);
                            }
                            $('.discount-block .input .gift-point').html('(' + Math.floor(parseFloat($(this).val()) * 50) + ' p)');
                            scg_subtract_price = parseInt($(this).val());
                            if (scg_subtract_price === 0) {
                                $('.scl_sum').html(parseInt(shop_item.scm_price) * parseInt($('.scg_buyamount').val()));
                            } else {
                                $('.scl_sum').html((parseInt(shop_item.scm_price) * parseInt($('.scg_buyamount').val())) - scg_subtract_price);
                            }
                        });
                        $('.discount-block .input .discount').focus(function(event) {
                            $(this).val('');
                        });
                        $('.discount-block .input .discount').focusout(function(event) {
                            $(this).val(scg_subtract_price);
                            if (scg_subtract_price === 0) {
                                $('.scl_sum').html(parseInt(shop_item.scm_price) * parseInt($('.scg_buyamount').val()));
                            } else {
                                $('.scl_sum').html((parseInt(shop_item.scm_price) * parseInt($('.scg_buyamount').val())) - scg_subtract_price);
                            }
                        });
                    }
                }

            },
            error: function(r) {
                myApp.hideIndicator();
                if (nowPage === 'push-record') {
                    //當前購點數
                    $('.now_coin span').html(0);
                    //取得推送紀錄
                    branchObj.queryshoppushrecord('0');

                    var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                    var today_push = indexObj._dataStorage(branchObj.storage.today_push) || [];
                    findArrayItem(today_push, 'sd_id', branchData.sd_id);
                    $('.today_pushed span').html(today_push[nowIndex].push_times);

                }
                //console.log(JSON.stringify(r));
            }
        });
    },
    //查詢宮廟產品資料
    querytplproduct: function(sd_id, tpp_type) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id,
            tpp_type: tpp_type
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.querytplproduct,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.querytplproductresult) {
                    var rObj = JSON.parse(JSON.stringify(r.querytplproductresult));
                    if (rObj.message_no === "000000000") {

                        if (tpp_type === 1) {
                            var blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives);
                            for (var i in blessed_relatives.blessedlist) {
                                var products = {};
                                products.tplproducts = rObj.product;
                                var temp = indexObj.template('templateTplProducts');
                                var item = temp(products);
                                $$('.light-' + blessed_relatives.blessedlist[i].tpr_serno + ' .item-input').html(item);
                            }
                        }

                        indexObj._dataStorage(branchObj.storage.temple_products, rObj.product);

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //查詢進階車友資料
    query_advancedata: function(from) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.query_advancedata,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.query_advancedataresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_advancedataresult));
                    if (rObj.message_no === "000000000") {

                        // if (rObj.md_lastname === '' || rObj.md_firstname === '' || rObj.md_city === '' || rObj.md_country === '' || rObj.md_addr === '') {
                        //     myApp.alert(stringObj.text.myinfo_incomplete, stringObj.text.warn);
                        // }

                        var shop_item = indexObj._dataStorage('shop_item') || {};
                        var scm_type;
                        if (shop_item.scm_reservationtag === '1') {
                            scm_type = '預約限定';
                            $('.scg_buyamount').parents('.item-inner').addClass('readonly');
                            $('.scg_buyamount').val(1);
                        } else if (shop_item.scm_producttype === '1') {
                            scm_type = '電子服務券';
                            $('.scg_buyamount').parents('.item-inner').addClass('readonly');
                            $('.scg_buyamount').val(1);
                        } else if (shop_item.scm_producttype === '2') {
                            scm_type = '實體商品';
                            $('.scg_buyamount').removeAttr('readonly');
                            $('.scg_buyamount').val(1);
                            $('.scg_buyamount').css('color', '#333');
                            $('.scg_buyamount').css('padding-left', '5%');
                            $('.scg_buyamount').css('font-weight', 'blod');
                            $('.scg_buyamount').parents('.item-input').css('background', '#eee');
                        }

                        if (nowPage === 'shop-buy-data') {
                            $('.scm_name').val(shop_item.scm_title);
                            $('.scm_type').val(scm_type);
                            $('.scm_price').val(shop_item.scm_price);
                            $('.scl_sum').html(parseInt(shop_item.scm_price) * parseInt($('.scg_buyamount').val()));
                            $('.scg_bonus').val(parseInt(shop_item.scm_bonus_payamount) * parseInt($('.scg_buyamount').val()));
                            $('.scg_buyername').val(rObj.md_lastname + rObj.md_firstname);
                            $('.scg_buyermobile').val(rObj.md_mobile);
                            $('.scg_buyerphone').val(rObj.md_tel);
                            $('.scg_buyeremail').val(rObj.md_contactmail);
                            $('.send_addr').val(stringObj.counties[parseInt(rObj.rl_city_code) - 1] + stringObj.region[stringObj.counties[parseInt(rObj.rl_city_code) - 1]][0][stringObj.region[stringObj.counties[parseInt(rObj.rl_city_code) - 1]][1].indexOf(rObj.rl_zip)] + rObj.md_addr);

                            // $('.scg_buyamount').change(function() {
                            //     if(parseInt($(this).val()) > parseInt(shop_item.inventory)){
                            //         $(this).val(shop_item.inventory);
                            //     }
                            //     if(parseInt($(this).val()) < 1){
                            //         $(this).val(1);
                            //     }
                            //     $('.scl_sum').val(parseInt(shop_item.scm_price) * parseInt($(this).val()));
                            // });

                        } else if (nowPage === 'shop-logistics') {
                            $('.scl_receivername').val(rObj.md_lastname + rObj.md_firstname);
                            $('.scl_receivermobile').val(rObj.md_mobile);
                            $('.scl_receiverphone').val(rObj.md_tel);
                            $('.scl_email').val(rObj.md_contactmail);
                            $('.scl_receiveaddress').val(rObj.md_addr);

                            if (rObj.md_city !== '' || rObj.md_country !== '') {
                                $('.scl_country').val(rObj.md_city + '  ' + rObj.md_country);
                                mCounty = rObj.md_city;
                                mDistrict = rObj.md_country;
                            }

                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //祈福專區
    templeInfoInit: function(page) {
        var q = page.query;

        nowSd_id = q.sd_id;
        branchObj.branchInfoGet(nowSd_id, q.from);

        var blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives) || {
            blessedlist: []
        };

        if (q.from === 'scan') {
            myApp.modal({
                title: stringObj.text.warn,
                text: '是否為<b>' + tp_name + '</b>進行線上捐獻',
                buttons: [{
                    text: stringObj.text.cancel,
                    onClick: function() {}
                }, {
                    text: stringObj.text.confirm,
                    onClick: function() {
                        templeDonate(q.tp_id);
                    }
                }, ]
            });
        } else if (q.from === 'blessed') {
            myApp.showTab('.temple-bright-light');
            $('.toolbar-bottom .col-33 a').removeClass('active');
            $('.bright-light').addClass('active');
            var temp = indexObj.template('templateBlessed');
            var item = temp(blessed_relatives);
            $$('.blessed-block').html(item);

            for (var i in blessed_relatives.blessedlist) {
                var temple_products = indexObj._dataStorage(branchObj.storage.temple_products) || [];
                var products = {};
                products.tplproducts = temple_products;
                var temp = indexObj.template('templateTplProducts');
                var item = temp(products);
                $$('.light-' + blessed_relatives.blessedlist[i].tpr_serno + ' .item-input').html(item);
            }

            for (var i in blessed_relatives.blessedlist) {
                $('.light-' + blessed_relatives.blessedlist[i].tpr_serno + ' input[name="light"]').each(function() {
                    for (var j in blessed_relatives.blessedlist[i].tpp) {
                        if (this.value === blessed_relatives.blessedlist[i].tpp[j].tpp_serno) {
                            $(this).prop('checked', true);
                        }
                    }
                });
            }
        }

        var save_data = indexObj._dataStorage(branchObj.storage.save_data) || '';
        if (save_data) {
            $('.tps_invoice_name').val(save_data.tps_invoice_name);
            $('.tps_invoice_tel').val(save_data.tps_invoice_tel);
            $('.tps_invoice_area').val(save_data.tps_invoice_area);
            $('.tps_invoice_address').val(save_data.tps_invoice_address);
            $('.temple-bright-light .iscarpolicy input').prop('checked', save_data.iscarpolicy);
        }

        $('.back-btn a').attr('href', 'branch-cooperative?menu=' + branch_menu + '&cate=' + branch_cate);

        //簡介
        $$('.temple-info-content').on('show', function() {
            $('.toolbar-bottom .col-33 a').removeClass('active');
            $('.info').addClass('active');
        });


        /*線上捐獻*/

        //申請人姓名
        $$('.tps-invoice-name-block').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="請輸入姓名">', '姓名');

            $('.input-value').val($('#tps-invoice-name').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#tps-invoice-name').val($('.input-value').val());
            });
        });

        //聯絡電話
        $$('.tps-invoice-tel-block').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="請輸入聯絡號碼" onkeyup="value=value.replace(/[^-0-9]/g,\'\')" onkeydown="value=value.replace(/[^-0-9]/g,\'\')">', '電話');

            $('.input-value').val($('#tps-invoice-tel').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#tps-invoice-tel').val($('.input-value').val());
            });
        });

        //地址
        $$('.tps-invoice-address-block').on('click', function() {
            myApp.alert('<textarea class="info resizable" placeholder="請填寫地址" rows="9"></textarea>', '地址');

            $('.info').val($('.tps-invoice-address').val());

            $('textarea.info').focus();

            $('.modal-button').click(function() {
                $('.tps-invoice-address').val($('textarea.info').val());
            });
        });

        //金額
        $$('.tps-amount-block').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="請輸入金額" onkeydown="input_limit(this, 7);" onkeyup="input_limit(this, 7);">', '金額');

            $('.input-value').val($('#tps-amount').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#tps-amount').val($('.input-value').val());
            });
        });



        /*祈福點燈*/

        //申請人姓名
        $$('.tps_invoice_name-block').on('click', function() {
            myApp.alert('<input class="input-value" type="text" placeholder="請輸入姓名">', '姓名');

            $('.input-value').val($('#tps_invoice_name').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#tps_invoice_name').val($('.input-value').val());
            });
        });

        //聯絡電話
        $$('.tps_invoice_tel-block').on('click', function() {
            myApp.alert('<input class="input-value" type="number" placeholder="請輸入聯絡號碼" onkeyup="value=value.replace(/[^-0-9]/g,\'\')" onkeydown="value=value.replace(/[^-0-9]/g,\'\')">', '電話');

            $('.input-value').val($('#tps_invoice_tel').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('#tps_invoice_tel').val($('.input-value').val());
            });
        });

        //地址
        $$('.tps_invoice_address-block').on('click', function() {
            myApp.alert('<textarea class="info resizable" placeholder="請填寫地址" rows="9"></textarea>', '地址');

            $('.info').val($('#tps_invoice_address').val());

            $('textarea.info').focus();

            $('.modal-button').click(function() {
                $('#tps_invoice_address').val($('textarea.info').val());
            });
        });


        var isChecked = false;

        //服務條款
        $('.temple-bright-light .query_iscarpolicy').click(function(event) {
            var popupHTML = '<div class="popup authorization-popup">' +
                '<div class="content-block">' +
                '<div class="title">' + stringObj.shop.authorization_title + '</div>' +
                '<div class="authorization-content">' +
                '<div class="main_content_text">' +
                stringObj.shop.authorization_context +
                '</div>' +
                '<div class="row btns"><div class="col-45 refuse close-popup">' + stringObj.text.refuse + '</div><div class="col-10"></div><div class="col-45 agree close-popup">' + stringObj.text.agree + '</div></div>' +
                '</div>' +
                '</div>' +
                '</div>';
            myApp.popup(popupHTML);


            $('.agree').click(function() {
                isChecked = true;
                $('.temple-bright-light .iscarpolicy input').prop('checked', true);

            });

            $('.refuse').click(function() {
                isChecked = false;
                $('.temple-bright-light .iscarpolicy input').prop('checked', false);

            });
        });

        $('.temple-bright-light .iscarpolicy input').change(function() {
            if ($(this).is(':checked')) {
                isChecked = true;
            } else {
                isChecked = false;
            }
        });

        $('.bright-btn').click(function() {

            var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
            if (mainSg.sat) {

                $('.tps_invoice_name-block').removeClass('lengthError');
                $('.tps_invoice_address-block').removeClass('lengthError');
                $('.tps_invoice_name-block').removeClass('spacesError');
                $('.tps_invoice_tel-block').removeClass('spacesError');
                $('.tps_invoice_address-block').removeClass('spacesError');
                $('.tps_invoice_name-block').removeClass('nullError');
                $('.tps_invoice_tel-block').removeClass('nullError');
                $('.tps_invoice_area-block').removeClass('nullError');
                $('.tpr_country-block').removeClass('nullError');
                $('.tps_invoice_address-block').removeClass('nullError');
                $('.temple-bright-light .iscarpolicy').removeClass('nullError');


                var isError = false;


                //長度判斷
                if ($('.tps_invoice_name').val().length > 10) {
                    $('.tps_invoice_name-block').addClass('lengthError');
                    isError = true;
                }
                if ($('.tps_invoice_address').val().length > 200) {
                    $('.tps_invoice_address-block').addClass('lengthError');
                    isError = true;
                }

                //空白字元判斷
                if ($('.tps_invoice_name').val().indexOf(" ") !== -1) {
                    $('.tps_invoice_name-block').addClass('spacesError');
                    isError = true;
                }
                if ($('.tps_invoice_tel').val().indexOf(" ") !== -1) {
                    $('.tps_invoice_tel-block').addClass('spacesError');
                    isError = true;
                }
                if ($('.tps_invoice_address').val().indexOf(" ") !== -1) {
                    $('.tps_invoice_address-block').addClass('spacesError');
                    isError = true;
                }
                //填寫判斷
                if ($('.tps_invoice_name').val() === "") {
                    $('.tps_invoice_name-block').addClass('nullError');
                    isError = true;
                }
                if ($('.tps_invoice_tel').val() === "") {
                    $('.tps_invoice_tel-block').addClass('nullError');
                    isError = true;
                }
                if ($('.tps_invoice_area').val() === "") {
                    $('.tps_invoice_area-block').addClass('nullError');
                    isError = true;
                }
                if ($('.tps_invoice_address').val() === "") {
                    $('.tps_invoice_address-block').addClass('nullError');
                    isError = true;
                }

                if (!isChecked) {
                    $('.temple-bright-light .iscarpolicy').addClass('nullError');
                    isError = true;
                }


                if (!isError) {
                    blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives);
                    blessed_relatives.tps_invoice_name = $('.tps_invoice_name').val();
                    blessed_relatives.tps_invoice_tel = $('.tps_invoice_tel').val();
                    blessed_relatives.tps_invoice_address = $('.tps_invoice_address').val();
                    indexObj._dataStorage(branchObj.storage.blessed_relatives, blessed_relatives);

                    var isLightChecked = true;
                    blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives) || {
                        blessedlist: []
                    };
                    for (var i in blessed_relatives.blessedlist) {
                        blessed_relatives.blessedlist[i].tpp = [];
                        $('.light-' + blessed_relatives.blessedlist[i].tpr_serno + ' input[name="light"]:checked').each(function() {
                            findArrayItem(blessed_relatives.blessedlist, 'tpr_serno', blessed_relatives.blessedlist[i].tpr_serno);
                            blessed_relatives.blessedlist[i].tpp.push({
                                tpp_serno: this.value,
                                tpp_name: $(this).attr('tpp_name'),
                                tpp_price: $(this).attr('tpp_price')
                            });
                        });
                        if (blessed_relatives.blessedlist[i].tpp.length === 0) {
                            isLightChecked = false;
                        }
                    }
                    if (blessed_relatives.blessedlist.length != 0) {
                        if (isLightChecked) {
                            indexObj._dataStorage(branchObj.storage.blessed_relatives, blessed_relatives);

                            mainView.router.load({
                                url: 'pay-info?type=templeLight'
                            });

                        } else {

                            myApp.toast(stringObj.text.no_light, '', {}).show();
                            if (browser_width < 992) {
                                $('.toast-container').css('width', '55%');
                                $('.toast-container').css('left', '35%');
                            } else {
                                $('.toast-container').css('width', '45%');
                                $('.toast-container').css('left', '40%');
                            }
                            //監聽裝置畫面大小
                            $(window).on("resize", function() {
                                browser_width = $(window).width();
                                if (nowPage == 'temple-info') {
                                    if (browser_width < 992) {
                                        $('.toast-container').css('width', '55%');
                                        $('.toast-container').css('left', '35%');
                                    } else {
                                        $('.toast-container').css('width', '45%');
                                        $('.toast-container').css('left', '40%');
                                    }
                                }
                            });

                        }
                    } else {
                        myApp.toast(stringObj.text.no_blessed, '', {}).show();
                        if (browser_width < 992) {
                            $('.toast-container').css('width', '40%');
                            $('.toast-container').css('left', '45%');
                        }
                        //監聽裝置畫面大小
                        $(window).on("resize", function() {
                            browser_width = $(window).width();
                            if (nowPage == 'temple-info') {
                                if (browser_width < 992) {
                                    $('.toast-container').css('width', '40%');
                                    $('.toast-container').css('left', '45%');
                                } else {
                                    $('.toast-container').css('width', '35%');
                                    $('.toast-container').css('left', '50%');
                                }
                            }
                        });
                    }
                } else {
                    myApp.toast(stringObj.text.data_not_complete, '', {}).show();
                    if (browser_width < 992) {
                        $('.toast-container').css('width', '40%');
                        $('.toast-container').css('left', '45%');
                    }
                    //監聽裝置畫面大小
                    $(window).on("resize", function() {
                        browser_width = $(window).width();
                        if (nowPage == 'temple-info') {
                            if (browser_width < 992) {
                                $('.toast-container').css('width', '40%');
                                $('.toast-container').css('left', '45%');
                            } else {
                                $('.toast-container').css('width', '35%');
                                $('.toast-container').css('left', '50%');
                            }
                        }
                    });
                }
            } else {
                myApp.modal({
                    title: stringObj.text.warn,
                    text: stringObj.text.notLogin,
                    buttons: [{
                        text: stringObj.text.cancel,
                        onClick: function() {}
                    }, {
                        text: stringObj.text.login,
                        onClick: function() {
                            webview.loginPage();
                        }
                    }, ]
                });
            }


        });



    },
    //查詢會員親屬資料
    query_relativelist: function() {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.query_relativelist,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.query_relativelistresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_relativelistresult));
                    if (rObj.message_no === "010160001") {

                        dataNull('templateRelativeNull', stringObj.text.search_null, '.relatives-list-content');

                    } else if (rObj.message_no === "010160002") {

                        var relativelist = JSON.parse(rObj.relativelist);
                        indexObj.jsonUrlDecode(relativelist);

                        rObj.relative_sum = relativelist.length;

                        var temp = indexObj.template('templateRelative');
                        var item = temp(rObj);
                        $$('.relatives-list-content').html(item);

                        for (var i in relativelist) {
                            if (relativelist[i].tpr_title === '99') {
                                relativelist[i].tpr_title = stringObj.text.self;
                            } else {
                                relativelist[i].tpr_title = stringObj.text.tpr_title_array[parseInt(relativelist[i].tpr_title) - 1];
                            }
                            relativelist[i].tpr_show = true;
                            if (relativelist[i].tpr_birthday) {
                                relativelist[i].tpr_birthday = relativelist[i].tpr_birthday.substring(0, 10);
                            }
                            relativelist[i].tpr_birthdaytime = stringObj.text.tpr_birthdaytime_array[relativelist[i].tpr_birthdaytime];
                        }

                        var blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives) || {
                            blessedlist: []
                        };
                        for (var j in blessed_relatives.blessedlist) {
                            for (var k in relativelist) {
                                if (relativelist[k].tpr_serno === blessed_relatives.blessedlist[j].tpr_serno) {
                                    relativelist[k].tpr_show = false;
                                }
                            }
                        }

                        rObj.relativelist = relativelist;
                        indexObj._dataStorage(branchObj.storage.my_relatives, relativelist);

                        var temp = indexObj.template('templateRelativeList');
                        var item = temp(rObj);
                        $$('.relative-list ul').html(item);



                        var all_checked = false;
                        var checkboxs = document.getElementsByName('relative-checkbox');
                        var k = 0;

                        //將所有checkbox新增監聽
                        $("input[name='relative-checkbox']").each(function() {
                            for (var i = 0; i < checkboxs.length; i++) {
                                if (!checkboxs[i].checked) {
                                    //若有未勾選
                                    all_checked = false;
                                    $('.clickAll').removeClass('cancelAll');
                                    $('.clickAll').html(stringObj.shop.select_all);
                                    k++;
                                }
                            }
                            if (k === 0) {
                                //若無未勾選
                                all_checked = true;
                                $('.clickAll').addClass('cancelAll');
                                $('.clickAll').html(stringObj.text.cancel);
                            }
                            $(this).change(function() {
                                k = 0;
                                var j = 0;
                                for (var i = 0; i < checkboxs.length; i++) {
                                    if (!checkboxs[i].checked) {
                                        //若有未勾選
                                        all_checked = false;
                                        $('.clickAll').removeClass('cancelAll');
                                        $('.clickAll').html(stringObj.shop.select_all);
                                        j++;
                                    }
                                }
                                if (j === 0) {
                                    //若無未勾選
                                    all_checked = true;
                                    $('.clickAll').addClass('cancelAll');
                                    $('.clickAll').html(stringObj.text.cancel);
                                }
                            });
                        });

                        //全選
                        $('.clickAll').click(function() {
                            if (all_checked) {
                                $("input[name='relative-checkbox']").prop("checked", false);
                                all_checked = false;
                                $('.clickAll').removeClass('cancelAll');
                                $('.clickAll').html(stringObj.shop.select_all);
                            } else {
                                $("input[name='relative-checkbox']").prop("checked", true);
                                all_checked = true;
                                $('.clickAll').addClass('cancelAll');
                                $('.clickAll').html(stringObj.text.cancel);

                            }

                        });

                        //編輯親屬資料
                        $('.edit-relative').click(function(event) {
                            findArrayItem(relativelist, 'tpr_serno', $(this).attr('tpr_serno'));
                            if (relativelist[nowIndex].tpr_name === '' || relativelist[nowIndex].tpr_birthday === '') {
                                myApp.alert(stringObj.text.myinfo_incomplete, stringObj.text.warn);
                            } else {
                                mainView.router.load({
                                    url: 'add-relatives?tpr_serno=' + $(this).attr('tpr_serno')
                                });
                            }
                        });

                        //新增至被祈福選單
                        $('.add-blessed-list').click(function(event) {
                            var blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives) || {
                                blessedlist: []
                            };
                            //blessed_relatives.blessedlist = [];
                            var isNull = false;
                            var isExist = false;
                            for (var i = 0; i < checkboxs.length; i++) {
                                if (checkboxs[i].checked) {
                                    findArrayItem(relativelist, 'tpr_serno', $(checkboxs[i]).val());
                                    if (relativelist[nowIndex].tpr_name === '' || relativelist[nowIndex].tpr_birthday === '') {
                                        isNull = true;
                                    } else {
                                        if (blessed_relatives.blessedlist.length > 0) {
                                            isExist = false;
                                            for (var j in blessed_relatives.blessedlist) {
                                                if (blessed_relatives.blessedlist[j].tpr_serno === $(checkboxs[i]).val()) {
                                                    isExist = true;
                                                }
                                            }
                                            if (!isExist) {
                                                blessed_relatives.blessedlist.push(relativelist[nowIndex]);
                                            }
                                        } else {
                                            blessed_relatives.blessedlist.push(relativelist[nowIndex]);
                                        }
                                    }
                                    //relativelist[nowIndex].tplproducts = indexObj._dataStorage(branchObj.storage.temple_products) || [];
                                } else {
                                    if (blessed_relatives.blessedlist.length > 0) {
                                        for (var j in blessed_relatives.blessedlist) {
                                            if (blessed_relatives.blessedlist[j].tpr_serno === $(checkboxs[i]).val()) {
                                                findAndRemove(blessed_relatives.blessedlist, 'tpr_serno', $(checkboxs[i]).val());
                                            }
                                        }
                                    }
                                }
                            }
                            if (isNull) {
                                myApp.alert(stringObj.text.myinfo_incomplete, stringObj.text.warn);
                            } else {
                                indexObj._dataStorage(branchObj.storage.blessed_relatives, blessed_relatives);
                                mainView.router.load({
                                    url: 'temple-info?sd_id=' + nowSd_id + '&from=blessed'
                                });
                            }
                        });

                        //刪除親屬資料
                        $('.delete-relatives').click(function(event) {
                            var checkMe = false;
                            var relatives = [];
                            for (var i = 0; i < checkboxs.length; i++) {
                                if (checkboxs[i].checked) {
                                    var relatives_item = {};
                                    relatives_item.tpr_serno = $(checkboxs[i]).val();
                                    relatives.push(relatives_item);
                                    findArrayItem(relativelist, 'tpr_serno', $(checkboxs[i]).val());
                                    if (relativelist[nowIndex].tpr_title === stringObj.text.self) {
                                        checkMe = true;
                                    }
                                }
                            }
                            if (checkMe) {
                                myApp.toast(stringObj.text.not_del_self, '', {}).show();
                                if (browser_width < 992) {
                                    $('.toast-container').css('width', '40%');
                                    $('.toast-container').css('left', '45%');
                                }
                            } else {
                                if (relatives.length > 0) {
                                    myApp.modal({
                                        title: stringObj.text.warn,
                                        text: stringObj.text.check_delete,
                                        buttons: [{
                                            text: stringObj.text.cancel,
                                            onClick: function() {

                                            }
                                        }, {
                                            text: stringObj.text.confirm,
                                            onClick: function() {
                                                var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
                                                var data = {
                                                    modacc: stringObj.shop.moduleaccount,
                                                    modvrf: Cookies.get('modvrf'),
                                                    sat: mainSg.sat
                                                };
                                                data.tpr_serno = JSON.stringify(relatives);
                                                data.modify = 3;
                                                branchObj.modify_relative(data);
                                            }
                                        }]
                                    });
                                } else {
                                    myApp.alert(stringObj.text.unselected_relatives, stringObj.text.warn);
                                }
                            }
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                    //添加親屬
                    $('.add-relatives').click(function(event) {
                        mainView.router.load({
                            url: 'add-relatives'
                        });
                    });
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //親屬清單初始化
    relativesListInit: function(page) {
        var q = page.query;

        $('.navbar .center').html(stringObj.text.relatives_list);

        branchObj.query_relativelist();

        $('.relatives-list-left').click(function(event) {
            //window.history.back();
            mainView.router.load({
                url: 'temple-info?sd_id=' + nowSd_id + '&from=blessed'
            });
        });

    },
    //異動會員親屬資料
    modify_relative: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.modify_relative,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.modify_relativeresult) {
                    var rObj = JSON.parse(JSON.stringify(r.modify_relativeresult));
                    if (rObj.message_no === "000000000") {

                        if (data.modify === 1) {
                            myApp.toast(stringObj.text.add_success, '', {}).show();
                            mainView.router.load({
                                url: 'relatives-list'
                            });
                        } else if (data.modify === 2) {
                            myApp.toast(stringObj.text.editFinish, '', {}).show();
                            mainView.router.load({
                                url: 'relatives-list'
                            });
                        } else if (data.modify === 3) {
                            var blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives) || {
                                blessedlist: []
                            };
                            var tpr_sernos = JSON.parse(data.tpr_serno);
                            for (var j in tpr_sernos) {
                                findAndRemove(blessed_relatives.blessedlist, 'tpr_serno', tpr_sernos[j].tpr_serno);
                                indexObj._dataStorage(branchObj.storage.blessed_relatives, blessed_relatives);
                            }
                            myApp.toast(stringObj.text.delete_success, '', {}).show();
                            mainView.router.load({
                                url: 'relatives-list',
                                reload: true
                            });
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //新增親屬資料初始化
    addRelativesInit: function(page) {
        var q = page.query;

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat
        };

        if (q.tpr_serno) {
            $('.navbar .add-relatives-center').html(stringObj.text.edit_relatives);
            $('.add .toolbar-inner a').html(stringObj.text.edit);
            data.modify = 2;
            var relativelist = indexObj._dataStorage(branchObj.storage.my_relatives) || {};
            findArrayItem(relativelist, 'tpr_serno', q.tpr_serno);
            $('.tpr_name').val(relativelist[nowIndex].tpr_name);
            $('.tpr_title').val(relativelist[nowIndex].tpr_title);
            $('.tpr_birthday').val(relativelist[nowIndex].tpr_birthday.substring(0, 10));
            $('.tpr_birthdaytime').val(relativelist[nowIndex].tpr_birthdaytime);
            $('.tpr_country').val(relativelist[nowIndex].tpr_country + ' ' + relativelist[nowIndex].tpr_area);
            $('.tpr_address').val(relativelist[nowIndex].tpr_address);
            data.tpr_serno = relativelist[nowIndex].tpr_serno;
            if (relativelist[nowIndex].tpr_title === stringObj.text.self) {
                data.tpr_title = 99;
            } else {
                data.tpr_title = stringObj.text.tpr_title_array.indexOf(relativelist[nowIndex].tpr_title) + 1;
            }

            data.tpr_birthdaytime = stringObj.text.tpr_birthdaytime_array.indexOf(relativelist[nowIndex].tpr_birthdaytime);
            data.tpr_country = relativelist[nowIndex].tpr_country;
            data.tpr_area = relativelist[nowIndex].tpr_area;
        } else {
            $('.navbar .add-relatives-center').html(stringObj.text.add_relatives);
            data.modify = 1;
        }

        $('.add-relatives-left').click(function(event) {
            window.history.back();
        });

        //親屬稱謂
        var tpr_title = myApp.picker({
            input: '.tpr_title',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.text.tpr_title + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0];
            },
            onOpen: function(p) {
                if (data.modify === 2) {
                    p.setValue([relativelist[nowIndex].tpr_title]);
                }
            },
            onClose: function(p) {
                data.tpr_title = p.cols[0].activeIndex + 1;
            },
            cols: [{
                width: '100%',
                textAlign: 'center',
                values: stringObj.text.tpr_title_array
            }]
        });

        //地區
        var region = stringObj.region;
        var tpr_country = myApp.picker({
            input: '.tpr_country',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"></a>' +
                '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + '  ' + values[1];
            },
            onOpen: function(p) {
                if (data.modify === 2) {
                    p.setValue([relativelist[nowIndex].tpr_country, relativelist[nowIndex].tpr_area]);
                }
            },
            onClose: function(p) {
                //$('.tpr_address').val(p.value[0] + p.value[1]);
            },
            cols: [{
                    textAlign: 'center',
                    width: 140,
                    values: stringObj.counties,
                    onChange: function(picker, country) {
                        data.tpr_country = country;
                        if (picker.cols[1].replaceValues) {
                            picker.cols[1].replaceValues(region[country][0]);
                        }
                    }
                },

                {
                    textAlign: 'center',
                    values: region.臺北市[0],
                    width: 140,
                    onChange: function(picker, district) {
                        data.tpr_area = district;
                    }
                },
            ]
        });


        //出生時辰
        var tpr_birthdaytime = myApp.picker({
            input: '.tpr_birthdaytime',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.text.tpr_birthdaytime + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0];
            },
            onOpen: function(p) {
                if (data.modify === 2) {
                    p.setValue([relativelist[nowIndex].tpr_birthdaytime]);
                }
            },
            onClose: function(p) {
                data.tpr_birthdaytime = p.cols[0].activeIndex;
            },
            cols: [{
                width: '100%',
                textAlign: 'center',
                values: stringObj.text.tpr_birthdaytime_array
            }]
        });


        var today = new Date();
        var date31 = [];
        for (var i = 1; i <= 31; i++) {
            date31.push(i < 10 ? '0' + i : i);
        }
        var date30 = [];
        for (var i = 1; i <= 30; i++) {
            date30.push(i < 10 ? '0' + i : i);
        }
        var date29 = [];
        for (var i = 1; i <= 29; i++) {
            date29.push(i < 10 ? '0' + i : i);
        }
        var date28 = [];
        for (var i = 1; i <= 28; i++) {
            date28.push(i < 10 ? '0' + i : i);
        }
        //生日
        var tpr_birthday = myApp.picker({
            input: '.tpr_birthday',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker noUse"><i class="fa fa-trash-o" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">生日</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + '-' + values[1] + '-' + values[2];
            },
            onOpen: function(p) {
                if (data.modify === 2) {
                    p.setValue([relativelist[nowIndex].tpr_birthday.substring(0, 4), relativelist[nowIndex].tpr_birthday.substring(5, 7), relativelist[nowIndex].tpr_birthday.substring(8, 10)]);
                } else {
                    var month = (today.getMonth() + 1);
                    var date = today.getDate();
                    if (month < 10) {
                        month = '0' + month;
                    }
                    if (date < 10) {
                        date = '0' + date;
                    }
                    p.setValue([today.getFullYear(), month, date]);
                }
                // $('.left').click(function() {
                //     $('.md_birthday').val('');
                //     p.value = [];
                // });
            },
            cols: [
                // year
                {
                    textAlign: 'center',
                    values: (function() {
                        var arr = [];
                        for (var i = 1911; i <= today.getFullYear(); i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                    onChange: function(picker, mouth) {
                        if (picker.cols[2].value === '02') {
                            if (parseInt(picker.cols[0].value) % 4 === 0) {
                                if (picker.cols[4].replaceValues) {
                                    picker.cols[4].replaceValues(date29);
                                }
                            } else {
                                if (picker.cols[4].replaceValues) {
                                    picker.cols[4].replaceValues(date28);
                                }
                            }
                        }
                    }
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' - '
                },
                // mouth
                {
                    values: (function() {
                        var arr = [];
                        for (var i = 1; i <= 12; i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                    onChange: function(picker, mouth) {
                        if (picker.cols[2].value === '02') {
                            if (parseInt(picker.cols[0].value) % 4 === 0) {
                                if (picker.cols[4].replaceValues) {
                                    picker.cols[4].replaceValues(date29);
                                }
                            } else {
                                if (picker.cols[4].replaceValues) {
                                    picker.cols[4].replaceValues(date28);
                                }
                            }
                        } else {
                            if (parseInt(picker.cols[2].value) < 8) {
                                if (parseInt(picker.cols[2].value) % 2 === 1) {
                                    if (picker.cols[4].replaceValues) {
                                        picker.cols[4].replaceValues(date31);
                                    }
                                } else {
                                    if (picker.cols[4].replaceValues) {
                                        picker.cols[4].replaceValues(date30);
                                    }
                                }
                            } else {
                                if (parseInt(picker.cols[2].value) % 2 === 1) {
                                    if (picker.cols[4].replaceValues) {
                                        picker.cols[4].replaceValues(date30);
                                    }
                                } else {
                                    if (picker.cols[4].replaceValues) {
                                        picker.cols[4].replaceValues(date31);
                                    }
                                }
                            }
                        }
                    }
                },
                // Divider
                {
                    textAlign: 'center',
                    divider: true,
                    content: ' - '
                },
                // date
                {
                    values: (function() {
                        var arr = [];
                        for (var i = 1; i <= 31; i++) {
                            arr.push(i < 10 ? '0' + i : i);
                        }
                        return arr;
                    })(),
                }

            ]

        });



        //親屬姓名
        $('.tpr_name-block').click(function() {
            myApp.alert('<input class="input-value" type="text" placeholder="' + stringObj.text.input_name + '">', stringObj.text.user_name);

            $('.input-value').val($('.tpr_name').val());

            $('.input-value').focus();

            $('.modal-button').click(function() {
                $('.tpr_name').val($('.input-value').val());
            });
        });

        //地址
        $('.tpr_address-block').click(function() {
            myApp.alert('<textarea class="info resizable" placeholder="' + stringObj.text.input_address_placeholder + '" rows="9"></textarea>', stringObj.text.address);

            $('.info').val($('#tpr_address').val());

            $('textarea.info').focus();

            $('.modal-button').click(function() {
                $('#tpr_address').val($('.info').val());
            });
        });

        if (data.tpr_title === 99) {
            tpr_title.destroy();
            tpr_country.destroy();
            tpr_birthday.destroy();
            $('.tpr_name-block').unbind("click");
            $('.tpr_address-block').unbind("click");
            $('.list-block input').css('color', '#888');
            $('.list-block textarea').css('color', '#888');
            $('.list-block .tpr_birthdaytime').css('color', '#FCFAF2');
        }


        $('.add').click(function(event) {

            $('.tpr_name-block').removeClass('lengthError');
            $('.tpr_address-block').removeClass('lengthError');
            $('.tpr_name-block').removeClass('spacesError');
            $('.tpr_title-block').removeClass('spacesError');
            $('.tpr_birthday-block').removeClass('spacesError');
            $('.tpr_address-block').removeClass('spacesError');
            $('.tpr_name-block').removeClass('nullError');
            $('.tpr_title-block').removeClass('nullError');
            $('.tpr_birthday-block').removeClass('nullError');
            $('.tpr_birthdaytime-block').removeClass('nullError');
            $('.tpr_country-block').removeClass('nullError');
            $('.tpr_address-block').removeClass('nullError');


            var isError = false;


            //長度判斷
            if ($('.tpr_name').val().length > 10) {
                $('.tpr_name-block').addClass('lengthError');
                isError = true;
            }
            if ($('.tpr_address').val().length > 200) {
                $('.tpr_address-block').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('.tpr_name').val().indexOf(" ") !== -1) {
                $('.tpr_name-block').addClass('spacesError');
                isError = true;
            }
            if ($('.tpr_title').val().indexOf(" ") !== -1) {
                $('.tpr_title-block').addClass('spacesError');
                isError = true;
            }
            if ($('.tpr_birthday').val().indexOf(" ") !== -1) {
                $('.tpr_birthday-block').addClass('spacesError');
                isError = true;
            }
            if ($('.tpr_address').val().indexOf(" ") !== -1) {
                $('.tpr_address-block').addClass('spacesError');
                isError = true;
            }


            //填寫判斷
            if ($('.tpr_name').val() === "") {
                $('.tpr_name-block').addClass('nullError');
                isError = true;
            }
            if ($('.tpr_title').val() === "") {
                $('.tpr_title-block').addClass('nullError');
                isError = true;
            }
            if ($('.tpr_birthday').val() === "") {
                $('.tpr_birthday-block').addClass('nullError');
                isError = true;
            }
            if ($('.tpr_birthdaytime').val() === "") {
                $('.tpr_birthdaytime-block').addClass('nullError');
                isError = true;
            }
            if ($('.tpr_country').val() === "") {
                $('.tpr_country-block').addClass('nullError');
                isError = true;
            }
            if ($('.tpr_address').val() === "") {
                $('.tpr_address-block').addClass('nullError');
                isError = true;
            }

            if (!isError) {
                data.tpr_name = $('.tpr_name').val();
                data.tpr_birthday = $('.tpr_birthday').val();
                data.tpr_address = $('.tpr_address').val();
                branchObj.modify_relative(data);
            }

        });
    },
    //建立未付款物流訂單，並取得訂單單號
    createlogisticsdata: function(tps_paytype) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var logistics_data = indexObj._dataStorage('logistics_data') || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scg_id: localStorage.getItem('scg_id'),
            scm_id: logistics_data.scm_id,
            scl_receivername: logistics_data.scl_receivername,
            scl_receivermobile: logistics_data.scl_receivermobile,
            scl_receiverphone: logistics_data.scl_receiverphone,
            scl_email: logistics_data.scl_email,
            scl_postcode: logistics_data.scl_postcode,
            scl_city: logistics_data.scl_city,
            scl_district: logistics_data.scl_district,
            scl_receiveaddress: logistics_data.scl_receiveaddress,
            scl_delivery_time: stringObj.shop.scl_delivery_time_array.indexOf(logistics_data.scl_delivery_time)
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.createlogisticsdata,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.createlogisticsdataresult) {
                    var rObj = JSON.parse(JSON.stringify(r.createlogisticsdataresult));
                    if (rObj.message_no === "000000000") {

                        branchObj.createpaymentflow(localStorage.getItem('scg_id'));

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //建立金流資料
    createpaymentflow: function(scg_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: nowSd_id,
            scg_id: scg_id
        };
        if (Cookies.get('app_version') !== undefined) {
            data.is_mobile = 1;
        } else {
            data.is_mobile = 0;
        }
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.createpaymentflow,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.createpaymentflowresult) {
                    var rObj = JSON.parse(JSON.stringify(r.createpaymentflowresult));
                    if (rObj.message_no === "000000000") {

                        Cookies.set('createpaymentflow', '1');

                        switch (rObj.paymentflow) {
                            case '1':
                                if (Cookies.get('app_version') !== undefined) {
                                    webview.toWallet(JSON.stringify(rObj.paymentdata));
                                } else {
                                    suntechbuysafe(rObj.paymentdata);
                                }
                                //suntechbuysafe(rObj.paymentdata);
                                break;
                            case '2':
                                ecpay(rObj.paymentdata);
                                break;
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //支付內容初始化
    payInfoInit: function(page) {
        var q = page.query;

        $('.pay-info-left').click(function() {
            window.history.back();
            if (q.type === 'templeDonate') {
                blessed_relatives.blessedlist = [];
                indexObj._dataStorage(branchObj.storage.blessed_relatives, blessed_relatives);
            }
        });

        var logistics_data = indexObj._dataStorage('logistics_data') || {};
        var shop_item = indexObj._dataStorage('shop_item') || {};
        var shop_buy_data = indexObj._dataStorage('shop_buy_data') || {};

        //logistics_data.scg_id = localStorage.getItem('scg_id');
        logistics_data.scg_buyername = shop_buy_data.scg_buyername;
        logistics_data.scg_buyermobile = shop_buy_data.scg_buyermobile;
        logistics_data.scg_buyerphone = shop_buy_data.scg_buyerphone;
        logistics_data.scg_buyeremail = shop_buy_data.scg_buyeremail;
        logistics_data.scg_buyermessage = shop_buy_data.scg_buyermessage;

        logistics_data.scm_id = shop_item.scm_id;
        logistics_data.scm_pic = stringObj.text.branch_img_path + shop_item.scm_mainpic;
        logistics_data.scm_item = shop_item.scm_title;
        logistics_data.scl_amount = shop_buy_data.scg_buyamount;
        logistics_data.scm_item_sum = parseInt(shop_item.scm_price) * parseInt(shop_buy_data.scg_buyamount) - parseInt(shop_buy_data.scg_subtract_price);
        logistics_data.scl_delivery_time = stringObj.shop.scl_delivery_time_array[parseInt(logistics_data.scl_delivery_time) - 1];
        logistics_data.refunds_note = stringObj.text.refunds_note;
        nowSd_id = shop_item.sd_id;

        if (shop_item.scm_coupon_providetype === '1') {
            logistics_data.scm_item_sum = 0;
            logistics_data.scg_bonus = parseInt(shop_item.scm_bonus_payamount) * parseInt(shop_buy_data.scg_buyamount);
        }

        var temp = indexObj.template('templatePayInfo');
        var item = temp(logistics_data);
        $$('.pay-info-block').html(item);
        myApp.initImagesLazyLoad('.page-content');

        $('.pay').click(function() {
            var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
            if (mainSg.md_seccode_created === '1') {
                if (Cookies.get('createpaymentflow') === undefined) {
                    if (q.from !== 'coupon' && q.from !== 'reservation') {
                        q.from = 'other';
                    }
                    logistics_data.from = q.from;
                    indexObj._dataStorage('logistics_data', logistics_data);
                }
                memberseccode('verify');
            } else {
                myApp.modal({
                    title: stringObj.text.warn,
                    text: stringObj.text.no_set_memberseccode,
                    buttons: [{
                        text: stringObj.text.cancel,
                        onClick: function() {}
                    }, {
                        text: stringObj.text.to_set,
                        onClick: function() {
                            memberseccode('set');
                        }
                    }]
                });
            }

        });
    },
    //修改訂單狀態
    updatescgpayment: function(scg_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scg_id: scg_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.updatescgpayment,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.updatescgpaymentresult) {
                    var rObj = JSON.parse(JSON.stringify(r.updatescgpaymentresult));
                    if (rObj.message_no === "000000000") {

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //支付完成推送
    paysuccesstopush: function(scg_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var shop_buy_data = indexObj._dataStorage('shop_buy_data') || {};
        var shop_item = indexObj._dataStorage('shop_item') || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scg_id: scg_id,
            identifier: '',
            addr: '',
            phone: '',
            email: '',
            md_cname: ''
        };
        if (shop_item.scm_coupon_providetype !== '1') {
            data.identifier = shop_buy_data.identifier;
            data.addr = shop_buy_data.send_addr;
            data.phone = shop_buy_data.scg_buyermobile;
            data.email = shop_buy_data.scg_buyeremail;
            data.md_cname = shop_buy_data.scg_buyername;
            if (shop_buy_data.identifier !== '') {
                data.md_cname = shop_buy_data.tax_title;
            }
        }
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.paysuccesstopush,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.paysuccesstopushresult) {
                    var rObj = JSON.parse(JSON.stringify(r.paysuccesstopushresult));
                    if (rObj.message_no === "000000000" || rObj.message_no === "011601005") {

                        var shop_item = indexObj._dataStorage('shop_item') || {};

                        if (shop_item.scm_producttype === '2') {
                            if (rObj.message_no === "000000000") {
                                myApp.alert(stringObj.text.nowCoin + '：' + rObj.gpmr_point, stringObj.text.warn);
                            } else {
                                stringObj.return_header(rObj.message_no);
                                if (_tip) {
                                    myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                    _tip = null;
                                }
                            }
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //支付完成初始化
    paySuccessInit: function(page) {
        var q = page.query;
        myApp.hideIndicator();
        var shop_buy_data = indexObj._dataStorage('shop_buy_data') || {};
        var shop_item = indexObj._dataStorage('shop_item') || {};
        if (localStorage.getItem('scg_id')) {
            branchObj.paysuccesstopush(localStorage.getItem('scg_id'));
        } else {
            window.location = 'pm/branch-cooperative?cate=' + branch_cate + '&listtype=' + nowBranchType;
        }

        var _date = new Date();
        var month = _date.getMonth() + 1;
        if (month < 10) {
            month = '0' + month;
        }
        var date = _date.getDate();
        if (date < 10) {
            date = '0' + date;
        }
        var hours = _date.getHours();
        if (hours < 10) {
            hours = '0' + hours;
        }
        var minutes = _date.getMinutes();
        if (minutes < 10) {
            minutes = '0' + minutes;
        }
        var seconds = _date.getSeconds();
        if (seconds < 10) {
            seconds = '0' + seconds;
        }
        var nowDate = _date.getFullYear() + "/" + month + "/" + date + ' ' + hours + ':' + minutes + ':' + seconds;
        var pay_data = {
            pay_time: nowDate,
            sd_shopname: shop_item.sd_shopname,
            scm_title: shop_item.scm_title,
            scg_id: localStorage.getItem('scg_id'),
            sd_shoptel: shop_item.sd_shoptel,
            scg_price: parseInt(shop_buy_data.scl_sum) - parseInt(shop_buy_data.scg_subtract_price),
            scg_bonus: shop_buy_data.scg_bonus
        };

        if (shop_item.scm_coupon_providetype === '1') {
            pay_data.scg_price = 0;
        }

        var temp = indexObj.template('templatePaySuccess');
        var item = temp(pay_data);
        $$('.pay-success-block').html(item);
        myApp.initImagesLazyLoad('.page-content');

        indexObj._dataStorage(indexObj._storage.reservationbook, null);
        localStorage.removeItem('scg_id');
        localStorage.removeItem('scm_id');
        indexObj._dataStorage('shop_item', null);
        indexObj._dataStorage('shop_buy_data', null);
        indexObj._dataStorage('logistics_data', null);

        $('.confirm').click(function() {
            window.location = 'pm/branch-cooperative?cate=' + branch_cate + '&listtype=' + nowBranchType;
            //            mainView.router.load({
            //                url: 'branch-cooperative',
            //                reload: true
            //            });
        });
    },
    //金流對帳查詢
    createblessreport: function(query_start, query_end, tpp_type) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            query_start: query_start,
            query_end: query_end,
            sd_id: branchData.sd_id,
            tpp_type: tpp_type
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.createblessreport,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.createblessreportresult) {
                    var rObj = JSON.parse(JSON.stringify(r.createblessreportresult));
                    if (rObj.message_no === "000000000") {

                        switch (rObj.report_head.tpp_type) {
                            case '1':
                                rObj.report_head.tpp_type = stringObj.text.temple_light;
                                break;
                            case '2':
                                rObj.report_head.tpp_type = stringObj.text.temple_donate;
                                break;
                        }

                        rObj.report_head.query_start = rObj.report_head.query_start.substring(0, 10);
                        rObj.report_head.query_end = rObj.report_head.query_end.substring(0, 10);

                        //格式化數字加上千分數逗點
                        rObj.report_head.totalamount = rObj.report_head.totalamount.replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                        for (var i in rObj.tps_record) {
                            //rObj.tps_record[i].tps_id = parseInt(rObj.tps_record[i].tps_id);
                            rObj.tps_record[i].tps_amounts = parseInt(rObj.tps_record[i].tps_amount);
                            rObj.tps_record[i].tps_amount = rObj.tps_record[i].tps_amount.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        }

                        var temp = indexObj.template('templateReconciliation');
                        var item = temp(rObj);
                        $$('.reconciliation-tab .data-table-block').html(item);

                        indexObj._dataStorage('createblessreport', rObj); //將查詢資料暫存

                        $('.reconciliation-tab .sortable-cell').click(function() {
                            $('.reconciliation-tab .sortable-cell').removeClass('sortable-active');
                            $(this).addClass('sortable-active');
                            if ($(this).hasClass('sortable-asc')) {
                                $(this).removeClass('sortable-asc');
                                $(this).addClass('sortable-desc');
                                if ($(this).hasClass('tps_id')) {
                                    rObj.tps_record.sort(sortByProperty('tps_id', -1));
                                } else if ($(this).hasClass('tps_amount')) {
                                    rObj.tps_record.sort(sortByProperty('tps_amounts', -1));
                                } else if ($(this).hasClass('create_date')) {
                                    rObj.tps_record.sort(sortByProperty('create_date', -1));
                                }
                            } else {
                                $(this).removeClass('sortable-desc');
                                $(this).addClass('sortable-asc');
                                if ($(this).hasClass('tps_id')) {
                                    rObj.tps_record.sort(sortByProperty('tps_id', 1));
                                } else if ($(this).hasClass('tps_amount')) {
                                    rObj.tps_record.sort(sortByProperty('tps_amounts', 1));
                                } else if ($(this).hasClass('create_date')) {
                                    rObj.tps_record.sort(sortByProperty('create_date', 1));
                                }
                            }
                            temp = indexObj.template('templateReconciliationItems');
                            item = temp(rObj);
                            $$('.reconciliation-tab .data-table-block .card-content tbody').html(item);

                            indexObj._dataStorage('createblessreport', rObj); //將查詢資料暫存
                        });


                    } else if (rObj.message_no === "011404001") {
                        myApp.alert(stringObj.text.search_null, stringObj.text.warn);
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //點燈明細查詢
    createblesslightreport: function(query_start, query_end) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            query_start: query_start,
            query_end: query_end,
            sd_id: branchData.sd_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.createblesslightreport,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.createblesslightreportresult) {
                    var rObj = JSON.parse(JSON.stringify(r.createblesslightreportresult));
                    if (rObj.message_no === "000000000") {

                        rObj.report_head.query_start = rObj.report_head.query_start.substring(0, 10);
                        rObj.report_head.query_end = rObj.report_head.query_end.substring(0, 10);

                        // for (var i in rObj.tps_record) {
                        //     rObj.tps_record[i].tps_serno = parseFloat(rObj.tps_record[i].tps_serno);
                        //     rObj.tps_record[i].tpsd_serno = parseFloat(rObj.tps_record[i].tpsd_serno);
                        // }


                        var temp = indexObj.template('templateSalesDetails');
                        var item = temp(rObj);
                        $$('.sales-details-tab .data-table-block').html(item);

                        indexObj._dataStorage('createblesslightreport', rObj); //將查詢資料暫存

                        $('.sales-details-tab .sortable-cell').click(function() {
                            $('.sales-details-tab .sortable-cell').removeClass('sortable-active');
                            $(this).addClass('sortable-active');
                            if ($(this).hasClass('sortable-asc')) {
                                $(this).removeClass('sortable-asc');
                                $(this).addClass('sortable-desc');
                                if ($(this).hasClass('tps_id')) {
                                    rObj.tps_record.sort(sortByProperty('tps_id', -1));
                                } else if ($(this).hasClass('tpp_name')) {
                                    rObj.tps_record.sort(sortByProperty('tpp_name', -1));
                                } else if ($(this).hasClass('create_date')) {
                                    rObj.tps_record.sort(sortByProperty('create_date', -1));
                                }
                            } else {
                                $(this).removeClass('sortable-desc');
                                $(this).addClass('sortable-asc');
                                if ($(this).hasClass('tps_id')) {
                                    rObj.tps_record.sort(sortByProperty('tps_id', 1));
                                } else if ($(this).hasClass('tpp_name')) {
                                    rObj.tps_record.sort(sortByProperty('tpp_name', 1));
                                } else if ($(this).hasClass('create_date')) {
                                    rObj.tps_record.sort(sortByProperty('create_date', 1));
                                }
                            }
                            temp = indexObj.template('templateSalesDetailsItems');
                            item = temp(rObj);
                            $$('.sales-details-tab .data-table-block .card-content tbody').html(item);

                            indexObj._dataStorage('createblesslightreport', rObj); //將查詢資料暫存
                        });


                    } else if (rObj.message_no === "011404001") {
                        myApp.alert(stringObj.text.search_null, stringObj.text.warn);
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //祈福報表
    templeTableInit: function(page) {
        var q = page.query;

        if (!isMobile.Android() && !isMobile.iOS()) {
            //美化scroll bar
            $(".tabs .page-content").niceScroll({
                cursorcolor: "rgba(100,100,100,.9)",
                cursoropacitymin: 0,
                cursorborder: "1px solid #000"
            });
        }

        //日期區間
        var calendarStart = myApp.calendar({
            input: '.reconciliation-tab .query_start',
            dateFormat: 'yyyy/mm/dd',
            monthNames: stringObj.text.monthNames
        });
        var startDate = new Date();
        $('.reconciliation-tab .query_start').change(function() {
            calendarStart.close();
            $('.reconciliation-tab .query_end').attr('placeholder', stringObj.text.input_end_date);
            startDate = new Date($(this).val());
            var calendarEnd = myApp.calendar({
                input: '.reconciliation-tab .query_end',
                dateFormat: 'yyyy/mm/dd',
                monthNames: stringObj.text.monthNames,
                disabled: {
                    from: new Date('1911/01/01'),
                    to: new Date($(this).val()).setDate(startDate.getDate() - 1)
                }
            });
            $('.reconciliation-tab .query_end').change(function() {
                calendarEnd.close();
            });
        });

        nowTab = 'reconciliation';

        //金流對帳報表
        $$('.reconciliation-tab').on('show', function() {
            nowTab = 'reconciliation';
            $('.buttons-row a').removeClass('active');
            $('.reconciliation').addClass('active');
        });

        //點燈用銷售明細
        $$('.sales-details-tab').on('show', function() {
            nowTab = 'sales-details';
            $('.buttons-row a').removeClass('active');
            $('.sales-details').addClass('active');

            //日期區間
            var _calendarStart = myApp.calendar({
                input: '.sales-details-tab .query_start',
                dateFormat: 'yyyy/mm/dd',
                monthNames: stringObj.text.monthNames
            });
            startDate = new Date();
            $('.sales-details-tab .query_start').change(function() {
                _calendarStart.close();
                $('.sales-details-tab .query_end').attr('placeholder', stringObj.text.input_end_date);
                startDate = new Date($(this).val());
                var _calendarEnd = myApp.calendar({
                    input: '.sales-details-tab .query_end',
                    dateFormat: 'yyyy/mm/dd',
                    monthNames: stringObj.text.monthNames,
                    disabled: {
                        from: new Date('1911/01/01'),
                        to: new Date($(this).val()).setDate(startDate.getDate() - 1)
                    }
                });
                $('.sales-details-tab .query_end').change(function() {
                    _calendarEnd.close();
                });
            });
        });


        var query_start, query_end;

        //金流對帳報表查詢
        $('.reconciliation-tab .search').click(function() {
            if ($('select[name="tpp_type"]').val() === '0' || $('.reconciliation-tab .query_start').val() === '' || $('.reconciliation-tab .query_end').val() === '') {
                myApp.alert(stringObj.text.data_not_complete, stringObj.text.warn);
            } else {
                query_start = new Date($('.reconciliation-tab .query_start').val()) / (1000 * 60 * 60 * 24); //起始日期
                query_end = new Date($('.reconciliation-tab .query_end').val()) / (1000 * 60 * 60 * 24); //結束日期
                if (query_end - query_start > 31) {
                    myApp.alert(stringObj.text.not_more_than_31days, stringObj.text.warn);
                } else {
                    branchObj.createblessreport($('.reconciliation-tab .query_start').val(), $('.reconciliation-tab .query_end').val(), $('select[name="tpp_type"]').val());
                }
            }
        });

        //點燈用銷售明細查詢
        $('.sales-details-tab .search').click(function() {
            if ($('.sales-details-tab .query_start').val() === '' || $('.sales-details-tab .query_end').val() === '') {
                myApp.alert(stringObj.text.data_not_complete, stringObj.text.warn);
            } else {
                query_start = new Date($('.sales-details-tab .query_start').val()) / (1000 * 60 * 60 * 24); //起始日期
                query_end = new Date($('.sales-details-tab .query_end').val()) / (1000 * 60 * 60 * 24); //結束日期
                if (query_end - query_start > 31) {
                    myApp.alert(stringObj.text.not_more_than_31days, stringObj.text.warn);
                } else {
                    branchObj.createblesslightreport($('.sales-details-tab .query_start').val(), $('.sales-details-tab .query_end').val());
                }
            }

        });

        //列印
        $('.print').click(function(event) {
            localStorage.setItem('nowTab', nowTab);
            if (nowTab === 'reconciliation') {
                if (indexObj._dataStorage('createblessreport')) {
                    window.open('http://' + stringObj.WEB_URL + '/Shop/printTable', '_blank');
                } else {
                    myApp.alert(stringObj.text.search_null, stringObj.text.warn);
                }
            } else if (nowTab === 'sales-details') {
                if (indexObj._dataStorage('createblesslightreport')) {
                    window.open('http://' + stringObj.WEB_URL + '/Shop/printTable', '_blank');
                } else {
                    myApp.alert(stringObj.text.search_null, stringObj.text.warn);
                }
            }
        });
    },
    // 加入標示點(Marker)
    addMarker_fullmap: function(location, title, fullmap, type, id) {
        var icon;
        switch (type) {
            case '2':
                icon = {
                    url: 'app/image/marker1.png'
                };
                break;
            case '3':
                icon = {
                    url: 'app/image/marker2.png'
                };
                break;
            case '4':
                icon = {
                    url: 'app/image/marker3.png'
                };
        }

        var marker = new google.maps.Marker({
            position: location,
            title: title,
            map: fullmap,
            icon: icon
        });

        markers.push(marker);

        var infowindow = new google.maps.InfoWindow(); //地圖上的訊息視窗
        infowindow.setContent('<b style="color:#000;">' + title + '</b>'); //設定訊息內容
        google.maps.event.addListener(marker, 'click', function() { //監聽地圖點擊,此為標示點點擊事件

            fullmap.setCenter(marker.getPosition());

            nowCenter = marker.getPosition();

            if (prev) {
                prev_infowindow.close();
            }

            prev = true;

            prev_infowindow = infowindow;

            var shop_list = indexObj._dataStorage('shop_list');

            findArrayItem(shop_list, 'sd_id', id);

            if (shop_list[nowIndex].sd_shopphotopath) {
                shop_list[nowIndex].sd_shopphotopath = stringObj.text.branch_img_path + shop_list[nowIndex].sd_shopphotopath;
            } else {
                shop_list[nowIndex].sd_shopphotopath = 'app/image/imgDefault.png';
            }

            var from;
            if (nowPage === 'map') {
                from = 'map';
            } else if (nowPage === 'around-search-result') {
                from = 'map_mode';
            }

            infowindow.open(fullmap, marker); //顯示訊息視窗
            myApp.pickerModal(
                '<div class="picker-modal">' +
                '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left"></div>' +
                '<div class="center">' + title + '</div>' +
                '<div class="right"><a href="#" class="close-picker"><i class="fa fa-times"></i></a></div>' +
                '</div>' +
                '</div>' +
                '<div class="picker-modal-inner">' +
                '<div class="content-block marker-info">' +
                '<div class="row info-content">' +
                '<div class="col-50">' +
                '<img src="' + shop_list[nowIndex].sd_shopphotopath + '" width=160  onerror=\'this.src="app/image/imgDefault.png"\'/>' +
                '</div>' +
                '<div class="col-50">' +
                '<div class="store-tel">電話：</div>' +
                '<div class="store-tel" style="padding-bottom:3%;">' + shop_list[nowIndex].sd_shoptel + '</div>' +
                '<div class="store-time">時間：</div>' +
                '<div class="store-time">星期' + shop_list[nowIndex].sd_weeklystart + '～星期' + shop_list[nowIndex].sd_weeklyend + '，' + shop_list[nowIndex].sd_dailystart.substring(0, 5) + '～' + shop_list[nowIndex].sd_dailyend.substring(0, 5) + '</div>' +
                '</div>' +
                '</div>' +
                '<div class="bottom-block row no-gutter">' +
                '<div class="col-75"><a sd_id="' + id + '" class="close-picker to_info">店家資訊</a></div>' +
                /*'<div class="col-25"><a class="close-picker markerInfo2">評價</a></div>' +
                 '<div class="col-25"><a class="close-picker markerInfo3">預約</a></div>' +
                 '<div class="col-25" style="border-right: 0px;"><a href="branch-couponList.html?menu=0" class="close-picker markerInfo4">優惠</a></div>' +*/
                '</div>' +
                '</div>' +
                '</div>' +
                '</div>'
            );

            $('.to_info').unbind('click');
            $('.to_info').click(function() {
                localStorage.setItem('pageInit', nowPage);
                window.location = 'pm/branch-info?sd_id=' + $(this).attr('sd_id');
            });

        });
    },
    //isCar地圖
    mapInit: function(page) {

        if (Cookies.get('app_version') !== undefined) {
            webview.getLocation();
        } else {
            $.getJSON("http://ip-api.com/json/?callback=?", function(data) {
                //console.log(JSON.stringify(data));
                nowLocation(data.lon, data.lat);
            });
        }

        $('.map-left').click(function(event) {
            window.location = 'pm/branch-cooperative?cate=' + localStorage.getItem('cate') + '&listtype=' + nowBranchType;
        });

        var temp = indexObj.template('templateMapType');
        var item = temp(branchObj._menuList[0]);
        $$('.type-block').html(item);

        $('.type-block .markerType').eq(0).addClass('active');

        var q = page.query;

        //        if (nowCenter !== undefined) {
        //            full_map.setCenter(nowCenter);
        //        }

        if (Cookies.get('marker_type') === undefined) {
            Cookies.set('marker_type', '2');
        } else {
            $('.type-block .markerType').removeClass('active');
            $('.type-block .markerType').eq(parseInt(Cookies.get('marker_type')) - 2).addClass('active');
        }

        if (localStorage.getItem('map_prompt') === null) {
            var popoverHTML = '<div class="popover location_popover">' +
                '<div class="popover-inner">' +
                '<div class="content-block">' +
                '<span>查詢目前所在位置</span>' +
                '</div>' +
                '</div>' +
                '</div>';
            myApp.popover(popoverHTML, $('.set_location'));
            localStorage.setItem('map_prompt', 1);
        }

        //查詢此區域
        $('.search-btn').click(function(event) {
            $(this).css('display', 'none');
            Cookies.set('sd_lat', full_map.getCenter().lat());
            Cookies.set('sd_lng', full_map.getCenter().lng());
            if (markers.length > 0) {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
            }
            markers = [];
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            branchObj.branchListGet('');
            if (nowlat !== undefined && nowlat !== 0) {
                if (my_marker) {
                    my_marker.setMap(null);
                }
                //map marker icon
                var image = {
                    url: 'app/image/user-marker.png'
                };

                //將目前位置新增至地圖
                my_marker = new google.maps.Marker({
                    position: new google.maps.LatLng(nowlat, nowlng),
                    map: full_map,
                    title: 'Me',
                    icon: image
                });
            }
        });

        //查詢用戶位置
        $('.set_location').click(function(event) {
            nowlat = '';
            nowlng = '';
            if (Cookies.get('app_version') !== undefined) {
                webview.getLocation();
            } else {
                $.getJSON("http://ip-api.com/json/?callback=?", function(data) {
                    //console.log(JSON.stringify(data));
                    nowLocation(data.lon, data.lat);
                });
            }
        });

        $('.markerType').click(function() {
            //console.log($(this).attr('type'));
            $('.type-block .markerType').removeClass('active');
            $(this).addClass('active');
            $('.search-btn').css('display', 'none');
            if (markers.length > 0) {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                markers = [];
            }
            Cookies.set('marker_type', $(this).attr('type'));
            Cookies.set('sd_lat', full_map.getCenter().lat());
            Cookies.set('sd_lng', full_map.getCenter().lng());
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            branchObj.branchListGet('');
        });

    },
    //查詢快選訊息清單
    querycannedmessagelist: function(modacc, modpsd) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.querycannedmessagelist,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.querycannedmessagelistresult) {
                    var rObj = JSON.parse(JSON.stringify(r.querycannedmessagelistresult));

                    if (rObj.message_no === "000000000") {

                        if (rObj.canned_message_list.length > 0) {

                            for (var i in rObj.canned_message_list) {
                                if (rObj.canned_message_list[i].cmsg_content.match('\n')) {
                                    rObj.canned_message_list[i].cmsg_content_show = rObj.canned_message_list[i].cmsg_content.replace(/\n/ig, "&nbsp;<br>");
                                } else {
                                    rObj.canned_message_list[i].cmsg_content_show = rObj.canned_message_list[i].cmsg_content;
                                }
                            }

                            if (nowPage === 'message-info') {
                                var quick_msgs = '';

                                for (var i in rObj.canned_message_list) {
                                    quick_msgs += '<li>' +
                                        '<label class="label-radio item-content">' +
                                        '<input type="radio" name="quick-msg" value="' + rObj.canned_message_list[i].cmsg_serno + '">' +
                                        '<div class="item-inner">' +
                                        '<div class="item-text">' + rObj.canned_message_list[i].cmsg_content_show + '</div>' +
                                        '<textarea style="display:none;">' + rObj.canned_message_list[i].cmsg_content + '</textarea>' +
                                        '</div>' +
                                        '</label>' +
                                        '</li>';
                                }

                                var popupHTML = '<div class="popup popup-quick-msg">' +
                                    '<div class="close-btn">' +
                                    '<a href="#" class="close-popup">' +
                                    '<i class="fa fa-times" aria-hidden="true"></i>' +
                                    '</a>' +
                                    '</div>' +
                                    '<div class="content-block">' +
                                    '<div class="title">' + stringObj.shop.quick_msg + '</div>' +
                                    '<div class="quick-msg-content">' +
                                    '<div class="list-block">' +
                                    '<ul>' +
                                    quick_msgs +
                                    '</ul>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>' +
                                    '<div class="toolbar toolbar-bottom tabbar animated fadeInUp">' +
                                    '<div class="toolbar-inner">' +
                                    '<a href="#" class="confirm">' + stringObj.text.confirm + '</a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>';
                                myApp.popup(popupHTML);
                                $('.popup-quick-msg').css('z-index', '91000');

                                $('.quick-msg-content ul li input').eq(0).attr('checked', '"checked"');

                                var cmsg_content = rObj.canned_message_list[0].cmsg_content;
                                $('.popup-quick-msg li').click(function() {
                                    cmsg_content = $(this).find('textarea').val();
                                });

                                $('.popup-quick-msg .toolbar-bottom .confirm').click(function(event) {
                                    myApp.closeModal('.popup-quick-msg');
                                    $('textarea.info').val(cmsg_content);
                                });
                            } else if (nowPage === 'quick-msg-management') {

                                if (rObj.canned_message_list.length < 20) {
                                    $('.toolbar-bottom.add-msg').css('display', 'block');
                                }

                                var temp = indexObj.template('templateQuickMsgList');
                                var item = temp(rObj);
                                $$('.quick-msg-management-content .grid').append(item);
                                //瀑布牆格局初始化設定
                                mgrid = $('.grid').masonry({
                                    // options
                                    itemSelector: '.grid-item',
                                    columnWidth: '.grid-sizer',
                                    percentPosition: true
                                });
                                //瀑布牆執行排版
                                mgrid.masonry('layout');


                                $('.edit-msg').unbind('click');
                                $('.del-msg').unbind('click');
                                //編輯快選訊息
                                $('.edit-msg').click(function(event) {
                                    var selector = $(this).parents('.card').find('.card-content-inner');
                                    myApp.modal({
                                        title: stringObj.shop.quick_msg_context,
                                        text: '<textarea class="info resizable" placeholder="' + stringObj.text.context + '(' + stringObj.text.max100 + ')" rows="7">' + selector.find('textarea').val() + '</textarea>',
                                        buttons: [{
                                            text: stringObj.text.cancel,
                                            onClick: function() {}
                                        }, {
                                            text: stringObj.text.edit,
                                            onClick: function() {
                                                if ($.trim($('.info').val()) === '') {
                                                    myApp.toast(stringObj.text.no_input_data, '', {}).show();
                                                } else if ($('.info').val().length > 100) {
                                                    myApp.toast(stringObj.text.limit100, '', {}).show();
                                                } else {
                                                    branchObj.modifycannedmessage(selector.attr('cmsg_serno'), '2', $('.info').val(), selector);
                                                }
                                            }
                                        }, ]
                                    });
                                });
                                //刪除快選訊息
                                $('.del-msg').click(function(event) {
                                    var selector = $(this).parents('.card').find('.card-content-inner');
                                    myApp.modal({
                                        title: stringObj.text.warn,
                                        text: stringObj.text.check_delete,
                                        buttons: [{
                                            text: stringObj.text.cancel,
                                            onClick: function() {}
                                        }, {
                                            text: stringObj.text._delete,
                                            onClick: function() {
                                                branchObj.modifycannedmessage(selector.attr('cmsg_serno'), '0', '', selector);
                                            }
                                        }, ]
                                    });
                                });

                            }

                        } else {
                            if (nowPage === 'message-info') {
                                myApp.closeModal();
                                myApp.modal({
                                    title: stringObj.text.warn,
                                    text: stringObj.text.no_quick_msg,
                                    buttons: [{
                                        text: stringObj.text.cancel,
                                        onClick: function() {

                                        }
                                    }, {
                                        text: stringObj.text.to_set,
                                        onClick: function() {
                                            mainView.router.load({
                                                url: 'quick-msg-management',
                                                reload: true
                                            });
                                        }
                                    }]
                                });

                            } else if (nowPage === 'quick-msg-management') {
                                $('.toolbar-bottom.add-msg').css('display', 'block');
                                dataNull('templateQuickMsgListNull', stringObj.text.no_data, '.quick-msg-management-content');
                            }
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }


            },
            error: function(r) {
                myApp.hideIndicator();
                //alert(JSON.stringify(r));
            }
        });
    },
    //快選訊息新增/修改/刪除
    modifycannedmessage: function(cmsg_serno, modify_type, cmsg_content, selector) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            modify_type: modify_type,
            cmsg_serno: cmsg_serno,
            cmsg_content: cmsg_content
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.modifycannedmessage,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.modifycannedmessageresult) {
                    var rObj = JSON.parse(JSON.stringify(r.modifycannedmessageresult));

                    if (rObj.message_no === "000000000") {

                        switch (modify_type) {
                            case '0':
                                myApp.hideIndicator();
                                selector.parents('.grid-item').removeClass('zoomIn');
                                selector.parents('.grid-item').addClass('fast');
                                selector.parents('.grid-item').addClass('zoomOut');
                                //selector.parents('.grid-item').addClass('rollOut');
                                selector.parents('.grid-item').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
                                    selector.parents('.grid-item').css('display', 'none');
                                    //瀑布牆執行排版
                                    mgrid.masonry('layout');
                                });
                                myApp.toast(stringObj.text.delete_success, '', {}).show();
                                break;
                            case '1':
                                if (nowPage === 'quick-msg-management') {
                                    myApp.hideIndicator();
                                    myApp.toast(stringObj.text.add_success, '', {}).show();
                                    mainView.router.load({
                                        url: 'quick-msg-management',
                                        reload: true
                                    });
                                } else if (nowPage === 'message-info') {
                                    localStorage.removeItem('save_msg');
                                }
                                break;
                            case '2':
                                myApp.hideIndicator();
                                myApp.toast(stringObj.text.edit_success, '', {}).show();
                                var cmsg_content_show;
                                if (cmsg_content.match('\n')) {
                                    cmsg_content_show = cmsg_content.replace(/\n/ig, "&nbsp;<br>");
                                } else {
                                    cmsg_content_show = cmsg_content;
                                }
                                selector.html(cmsg_content_show + '<textarea style="display:none;">' + cmsg_content + '</textarea>');
                                //瀑布牆執行排版
                                mgrid.masonry('layout');
                                break;
                        }

                    } else {
                        if (nowPage !== 'message-info') {
                            myApp.hideIndicator();
                        }
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }


            },
            error: function(r) {
                myApp.hideIndicator();
                //alert(JSON.stringify(r));
            }
        });
    },
    //快選訊息管理
    quickMsgManagementInit: function(page) {

        branchObj.querycannedmessagelist();

        $('.navbar .center').html(stringObj.shop.quick_msg_management);
        //新增快選訊息
        $('.add-msg').click(function(event) {
            myApp.modal({
                title: stringObj.shop.quick_msg_context,
                text: '<textarea class="info resizable" placeholder="' + stringObj.text.context + '(' + stringObj.text.max100 + ')" rows="7"></textarea>',
                buttons: [{
                    text: stringObj.text.cancel,
                    onClick: function() {}
                }, {
                    text: stringObj.text.add,
                    onClick: function() {
                        if ($.trim($('.info').val()) === '') {
                            myApp.toast(stringObj.text.no_input_data, '', {}).show();
                        } else if ($('.info').val().length > 100) {
                            myApp.toast(stringObj.text.limit100, '', {}).show();
                        } else {
                            branchObj.modifycannedmessage('', '1', $('.info').val());
                        }
                    }
                }, ]
            });
        });
    },
    //商家資料設置
    shopDataConfigInit: function(page) {

        $('.navbar .shop-data-config-center').html(stringObj.shop.shop_data_config);

    },
    //金流設置
    updateshopdatapayment: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.updateshopdatapayment,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.updateshopdatapaymentresult) {
                    var rObj = JSON.parse(JSON.stringify(r.updateshopdatapaymentresult));
                    if (rObj.message_no === "000000000") {

                        myApp.toast(stringObj.text.set_success, '', {}).show();

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //金流設置
    paySettingInit: function(page) {

        $('.navbar .pay-setting-center').html(stringObj.shop.pay_setting);
        $('.pay-setting-left').click(function() {
            window.history.back();
        });
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};

        branchObj.branchInfoGet(branchData.sd_id, '');


    },
    //查詢訂單資料
    queryorderlist: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryorderlist,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryorderlistresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryorderlistresult));
                    if (rObj.message_no === "000000000") {

                        if (rObj.order_list.length > 0) {
                            $('.pagination').css('display', 'block');
                            $('.pagination-content').css('visibility', 'visible');
                            $('.pagination-content .sum-pages').html(Math.ceil(parseInt(rObj.totalcount) / 10));
                            var pages = [];
                            for (var i = 1; i < Math.ceil(parseInt(rObj.totalcount) / 10) + 1; i++) {
                                pages.push(i);
                            }
                            if (Math.ceil(parseInt(rObj.totalcount) / 10) > 1) {
                                $('.pagination-content .next-page').css('visibility', 'visible');
                            }
                            if (data.data_pagination === 1) {
                                $('.pagination-content .previous-page').css('visibility', 'hidden');
                                $('.pagination-content .now-page').val(1);
                            }
                            if (data.data_pagination === Math.ceil(parseInt(rObj.totalcount) / 10)) {
                                $('.pagination-content .next-page').css('visibility', 'hidden');
                            }
                            if (order_totalcount === 0) {
                                order_totalcount = parseInt(rObj.totalcount);
                                if (order_swiper) {
                                    order_swiper.removeAllSlides();
                                    order_swiper.destroy(false, true);
                                }
                                order_swiper = new Swiper('.swiper-container', {
                                    onSlideChangeStart: function(swiper) {
                                        data.data_pagination = swiper.activeIndex + 1;
                                        $('.pagination-content .now-page').val(data.data_pagination);
                                        if (data.data_pagination === 1) {
                                            $('.pagination-content .previous-page').css('visibility', 'hidden');
                                        } else {
                                            $('.pagination-content .previous-page').css('visibility', 'visible');
                                        }
                                        if (data.data_pagination === Math.ceil(parseInt(rObj.totalcount) / 10)) {
                                            $('.pagination-content .next-page').css('visibility', 'hidden');
                                        } else {
                                            $('.pagination-content .next-page').css('visibility', 'visible');
                                        }
                                        branchObj.queryorderlist(data);
                                    }
                                });
                                $('.pagination-content .previous-page').unbind('click');
                                $('.pagination-content .previous-page').click(function(event) {
                                    order_swiper.slidePrev(true, 300);
                                });
                                $('.pagination-content .next-page').unbind('click');
                                $('.pagination-content .next-page').click(function(event) {
                                    order_swiper.slideNext(true, 300);
                                });
                                if (nowPage === 'coupon-order-forms') {
                                    for (var i = 0; i < Math.ceil(parseInt(rObj.totalcount) / 10); i++) {
                                        order_swiper.appendSlide('<div class="swiper-slide swiper-slide-' + (parseInt(i) + 1) + '">' +
                                            '<div class="data-table card">' +
                                            '<table>' +
                                            '<thead>' +
                                            '<tr>' +
                                            '<th class="label-cell">訂單編號</th>' +
                                            '<th class="label-cell">收件人</th>' +
                                            '<th class="label-cell">訂單狀態</th>' +
                                            '</tr>' +
                                            '</thead>' +
                                            '<tbody>' +
                                            '</tbody>' +
                                            '</table>' +
                                            '</div>' +
                                            '</div>')
                                    }
                                } else if (nowPage === 'order-forms') {
                                    for (var i = 0; i < Math.ceil(parseInt(rObj.totalcount) / 10); i++) {
                                        order_swiper.appendSlide('<div class="swiper-slide swiper-slide-' + (parseInt(i) + 1) + '">' +
                                            '<div class="data-table card">' +
                                            '<table>' +
                                            '<thead>' +
                                            '<tr>' +
                                            '<th class="label-cell">訂單編號</th>' +
                                            '<th class="label-cell">收件人</th>' +
                                            '<th class="label-cell">訂單狀態</th>' +
                                            '<th class="label-cell"></th>' +
                                            '</tr>' +
                                            '</thead>' +
                                            '<tbody>' +
                                            '</tbody>' +
                                            '</table>' +
                                            '</div>' +
                                            '</div>')
                                    }
                                }

                            }
                            for (var i in rObj.order_list) {
                                if (browser_width < 992) {
                                    rObj.order_list[i].show_scg_id = '...' + rObj.order_list[i].scg_id.substr(rObj.order_list[i].scg_id.length - 5, rObj.order_list[i].scg_id.length);
                                } else {
                                    rObj.order_list[i].show_scg_id = rObj.order_list[i].scg_id;
                                }
                                rObj.order_list[i]._scg_usestatus = stringObj.shop.scg_usestatus_array[parseInt(rObj.order_list[i].scg_usestatus)];
                                switch (rObj.order_list[i].scg_usestatus) {
                                    case '5':
                                        rObj.order_list[i].report_btn_text = stringObj.shop.print_order;
                                        rObj.order_list[i].color = 'midnightblue';
                                        break;
                                    case '6':
                                        rObj.order_list[i].report_btn_text = stringObj.shop.pick_order;
                                        rObj.order_list[i].color = 'saddlebrown';
                                        break;
                                    case '7':
                                        rObj.order_list[i].report_btn_text = stringObj.shop.sent_order;
                                        rObj.order_list[i].color = 'darkgreen';
                                        break;
                                    case '8':
                                        rObj.order_list[i].report_btn_text = '';
                                        break;
                                    default:
                                        rObj.order_list[i].report_btn_text = '';
                                        break;
                                }
                            }
                            if (nowPage === 'coupon-order-forms') {
                                var temp = indexObj.template('templateCouponOrderFormsItems');
                            } else if (nowPage === 'order-forms') {
                                var temp = indexObj.template('templateOrderFormsItems');
                            }
                            var item = temp(rObj);
                            $$('.swiper-container .swiper-slide-' + (parseInt(order_swiper.activeIndex) + 1) + ' .data-table table tbody').html(item);

                            if (now_page_picker) {
                                now_page_picker.destroy();
                            }
                            //頁數選擇
                            now_page_picker = myApp.picker({
                                input: '.now-page',
                                rotateEffect: false,
                                toolbarTemplate: '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '<div class="center">' + stringObj.shop.chose_page + '</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>',
                                formatValue: function(p, values, displayValues) {
                                    return displayValues[0];
                                },
                                onOpen: function(p) {
                                    if (data.data_pagination) {
                                        p.setValue([data.data_pagination]);
                                    }
                                },
                                onClose: function(p) {
                                    data.data_pagination = p.cols[0].value;
                                    order_swiper.slideTo(p.cols[0].value - 1, 300, true);
                                },
                                cols: [{
                                    textAlign: 'center',
                                    values: pages,
                                    onChange: function(picker, carmodel) {
                                        // if (picker.cols[0].value === '0') {
                                        //     data.scg_usestatus = '';
                                        // } else {
                                        //     data.scg_usestatus = picker.cols[0].value;
                                        // }
                                    }
                                }]
                            });

                            $('.swiper-container .data-table table tbody tr .label-cell').click(function(event) {
                                mainView.router.load({
                                    url: 'order-form-info?scg_id=' + $(this).parents('tr').attr('scg_id') + '&from=' + nowPage
                                });
                            });

                            $('.swiper-container .data-table table tbody tr .report').click(function(event) {
                                var scl_id = $(this).attr('scl_id');
                                switch ($(this).attr('scg_usestatus')) {
                                    case '5':
                                        if (Cookies.get('app_version') !== undefined) {
                                            myApp.alert(stringObj.shop.pc_print, stringObj.text.warn);
                                        } else {
                                            branchObj.printdeliverorder([scl_id]);
                                        }
                                        break;
                                    case '6':
                                        branchObj.querysclid(scl_id);
                                        break;
                                    case '7':
                                        myApp.modal({
                                            title: stringObj.shop.report_sentlogistics,
                                            text: '<input class="scl_tracenum" type="text" placeholder="' + stringObj.shop.scl_tracenum + '" style="padding: 2%;font-size: 1.2em;width: 96%;">',
                                            buttons: [{
                                                text: stringObj.text.cancel,
                                                onClick: function() {

                                                }
                                            }, {
                                                text: stringObj.text.confirm,
                                                onClick: function() {
                                                    branchObj.reportsentlogistics(scl_id, $('.scl_tracenum').val());
                                                }
                                            }]
                                        });
                                        break;
                                    case '8':
                                        branchObj.reportcargoarrive(scl_id);
                                        break;
                                }
                            });
                        } else {
                            $('.pagination').css('display', 'none');
                            order_swiper = new Swiper('.swiper-container', {

                            });
                            order_swiper.removeAllSlides();
                            order_swiper.appendSlide('<div class="swiper-slide"><div class="content-null">' +
                                '<h1><i class="fa fa-file-text-o"></i></h1>' +
                                '<br>' +
                                '<h3>' + stringObj.text.search_null + '</h3>' +
                                '</div></div>');
                            order_swiper.destroy(false, true);
                            //myApp.toast(stringObj.text.search_null, '', {}).show();
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //商品訂單管理
    orderFormManagementInit: function(page) {

        var q = page.query;

        $('.navbar .order-form-management-center').html(stringObj.shop.order_form_management);

        $('.all-print').click(function(event) {
            if (Cookies.get('app_version') !== undefined) {
                myApp.alert(stringObj.shop.pc_print, stringObj.text.warn);
            } else {
                branchObj.printdeliverorder([]);
            }
        });

        $('.item-title.report').click(function(event) {
            if (Cookies.get('app_version') !== undefined) {
                scan('report');
            } else {
                myApp.modal({
                    title: stringObj.shop.pick_report,
                    text: '<input class="scl_id" type="text" placeholder="' + stringObj.shop._scl_id + '" style="padding: 2%;font-size: 1.2em;width: 96%;">',
                    buttons: [{
                        text: stringObj.text.cancel,
                        onClick: function() {

                        }
                    }, {
                        text: stringObj.text.confirm,
                        onClick: function() {
                            branchObj.querysclid($('.scl_id').val());
                        }
                    }]
                });
            }
        });

    },
    //檢查物流編號有效性
    querysclid: function(scl_id, scm_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scl_id: scl_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.querysclid,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.querysclidresult) {
                    var rObj = JSON.parse(JSON.stringify(r.querysclidresult));
                    if (rObj.message_no === "000000000") {

                        if (rObj.scg_usestatus === '6') {
                            mainView.router.load({
                                url: 'pick-report?scl_id=' + scl_id + '&scm_id=' + rObj.scm_id
                            });
                        } else {
                            myApp.toast(stringObj.shop.picked_order, '', {}).show();
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //訂單列印資訊
    printdeliverorder: function(scl_id_array) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            scl_id_array: JSON.stringify(scl_id_array)
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.printdeliverorder,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.printdeliverorderresult) {
                    var rObj = JSON.parse(JSON.stringify(r.printdeliverorderresult));
                    if (rObj.message_no === "000000000") {

                        indexObj._dataStorage('printdeliverorder', rObj.deliverorder_array);

                        window.open('http://' + stringObj.WEB_URL + '/print-order-form', '_blank');



                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //揀貨分裝回報功能
    reportcargopack: function(scl_id, scl_cargopack_pic) {
        myApp.showIndicator();
        if (scl_cargopack_pic.match(branchObj.dataUrl.FTP_TEMPPRARY_PATH)) {
            scl_cargopack_pic = scl_cargopack_pic.substring(branchObj.dataUrl.FTP_TEMPPRARY_PATH.length);
        }
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scl_id: scl_id,
            scl_cargopack_pic: scl_cargopack_pic
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.reportcargopack,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.reportcargopackresult) {
                    var rObj = JSON.parse(JSON.stringify(r.reportcargopackresult));
                    if (rObj.message_no === "000000000") {

                        localStorage.removeItem('report_img');

                        myApp.toast(stringObj.shop.report_success, '', {}).show();

                        order_totalcount = 0;

                        mainView.router.load({
                            url: 'order-forms'
                        });

                        if (isMobile.Android()) {
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, scl_cargopack_pic, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', '');
                        } else if (isMobile.iOS()) {
                            var scl_cargopack_pic_path = [];
                            scl_cargopack_pic_path.push(scl_cargopack_pic);
                            webview.renameFileToMove(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, scl_cargopack_pic_path, branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary', []);
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //物流回報
    reportsentlogistics: function(scl_id, scl_tracenum) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scl_id: scl_id,
            scl_tracenum: scl_tracenum
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.reportsentlogistics,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.reportsentlogisticsresult) {
                    var rObj = JSON.parse(JSON.stringify(r.reportsentlogisticsresult));
                    if (rObj.message_no === "000000000") {

                        myApp.toast(stringObj.shop.report_success, '', {}).show();

                        order_totalcount = 0;

                        mainView.router.load({
                            url: 'order-forms'
                        });


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //到貨回報
    reportcargoarrive: function(scl_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scl_id: scl_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.reportcargoarrive,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.reportcargoarriveresult) {
                    var rObj = JSON.parse(JSON.stringify(r.reportcargoarriveresult));
                    if (rObj.message_no === "000000000") {


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //票券訂單列表初始化
    couponOrderFormsInit: function(page) {

        var q = page.query;

        $('.navbar .coupon-order-forms-center').html(stringObj.shop.coupon_order_forms);
        $('.coupon-order-forms-left').click(function(event) {
            order_totalcount = 0;
        });

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            scm_producttype: '1',
            scm_id: '',
            create_date_start: '',
            create_date_end: '',
            scg_usestatus: '',
            data_pagination: 1,
            start_scg_id: '',
            queryamount: 10
        };

        $('.scg_usestatus').val(stringObj.shop.scg_usestatus_array[0]);

        //訂單狀態
        var scg_usestatus_picker = myApp.picker({
            input: '.scg_usestatus',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.scg_usestatus + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onOpen: function(p) {
                // if (rObj.scm_producttype) {
                //     p.setValue([stringObj.shop.scg_usestatus_array.indexOf(rObj.scm_producttype) + 1]);
                // }
            },
            onClose: function(p) {
                // if (rObj.scm_producttype) {
                //     p.setValue([stringObj.shop.scg_usestatus_array.indexOf(rObj.scm_producttype) + 1]);
                // }
            },
            cols: [{
                textAlign: 'center',
                values: [0, 1, 2, 3, 4, 5, 10, 11],
                displayValues: stringObj.shop.coupon_scg_usestatus_array,
                onChange: function(picker, carmodel) {
                    if (picker.cols[0].value === '0') {
                        data.scg_usestatus = '';
                    } else {
                        data.scg_usestatus = picker.cols[0].value;
                    }
                }
            }]
        });

        branchObj.queryorderlist(data);

        $('.search-btn').click(function(event) {
            order_totalcount = 0;
            data.data_pagination = 1;
            branchObj.queryorderlist(data);
        });


    },
    //商品訂單列表
    orderFormsInit: function(page) {

        var q = page.query;

        $('.navbar .order-forms-center').html(stringObj.shop.order_forms);
        $('.order-forms-left').click(function(event) {
            order_totalcount = 0;
        });

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            scm_producttype: '2',
            scm_id: '',
            create_date_start: '',
            create_date_end: '',
            scg_usestatus: '',
            data_pagination: 1,
            start_scg_id: '',
            queryamount: 10
        };

        $('.scg_usestatus').val(stringObj.shop.scg_usestatus_array[0]);

        //訂單狀態
        var scg_usestatus_picker = myApp.picker({
            input: '.scg_usestatus',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.scg_usestatus + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onOpen: function(p) {
                // if (rObj.scm_producttype) {
                //     p.setValue([stringObj.shop.scg_usestatus_array.indexOf(rObj.scm_producttype) + 1]);
                // }
            },
            cols: [{
                textAlign: 'center',
                values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
                displayValues: stringObj.shop.scg_usestatus_array,
                onChange: function(picker, carmodel) {
                    if (picker.cols[0].value === '0') {
                        data.scg_usestatus = '';
                    } else {
                        data.scg_usestatus = picker.cols[0].value;
                    }
                }
            }]
        });

        branchObj.queryorderlist(data);

        $('.search-btn').click(function(event) {
            order_totalcount = 0;
            data.data_pagination = 1;
            branchObj.queryorderlist(data);
        });


    },
    //票劵銷售總覽
    shopsalesoverview: function(page) {

        var q = page.query;

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            query_start: '',
            query_end: '',
            scm_producttype: 1,
            queryamount: 10
        };

        var date = new Date;
        var now_month = date.getMonth() + 1;
        var now_year = date.getYear() + 1900;
        var month_array = [];
        var day_array = [];
        var year_array = [];
        var day = '';
        var date_array = [];
        for (var i = 0; i < 3; i++) {
            if (now_month < 1) {
                now_year = now_year - 1;
                month_array.push(12);
                year_array.push(now_year);
                day_array.push(getDaysOfMonth(now_month, now_year));
            } else {
                month_array.push(now_month < 10 ? '0' + now_month : now_month);
                year_array.push(now_year);
                day_array.push(getDaysOfMonth(now_month, now_year));
            }

            now_month = now_month - 1;
        }

        date_array.push(year_array[0] + '-' + month_array[0] + '-' + day_array[0]);
        date_array.push(year_array[0] + '-' + month_array[0] + '-' + 15);
        date_array.push(year_array[1] + '-' + month_array[1] + '-' + day_array[1]);
        date_array.push(year_array[1] + '-' + month_array[1] + '-' + 15);
        date_array.push(year_array[2] + '-' + month_array[2] + '-' + day_array[2]);
        date_array.push(year_array[2] + '-' + month_array[2] + '-' + 15);

        //拆帳日期
        var month_picker = myApp.picker({
            input: '.select-date',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + '帳務結算日' + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return displayValues[0];
            },
            onClose: function(p) {
                var str = p.cols[0].value;
                $('input[name=date]').val(str);

                // var day_picker = myApp.picker({
                //     width: '100%',
                //     input: '.select-day',
                //     // updateValuesOnTouchmove: false,
                //     rotateEffect: false,
                //     toolbarTemplate: '<div class="toolbar">' +
                //         '<div class="toolbar-inner">' +
                //         '<div class="left">' +
                //         '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                //         '</div>' +
                //         '<div class="center">' + '期間' + '</div>' +
                //         '<div class="right">' +
                //         '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                //         '</div>' +
                //         '</div>' +
                //         '</div>',
                //     formatValue: function(p, values, displayValues) {
                //         return displayValues[0];
                //     },
                //     onOpen: function(p) {
                //         // var col = p.cols[0];
                //         // col.replaceValues(2, day);
                //         // day = $('input[name=day]').val();

                //     },
                //     onClose: function(p) {
                //         var str = p.cols[0].value;
                //         $('input[name=day]').val(str);
                //         // if(p.cols[0].value == 1){
                //         //     $('.select-day').val('上半月(1日~15日)');
                //         // }else{
                //         //     $('.select-day').val('下半月(16日~'+day+'日)');
                //         // }

                //     },
                //     cols: [{
                //         width: '100%',
                //         textAlign: 'center',
                //         values: [15, day],
                //         displayValues: ['上半月(1日~15日)','下半月(16日~'+day+'日)'],
                //         onChange: function(picker, carmodel) {
                //             // if (picker.cols[0].value === '0') {
                //             //     data.scg_usestatus = '';
                //             // } else {
                //             //     data.scg_usestatus = picker.cols[0].value;
                //             // }
                //         }
                //     }]
                // });
            },
            cols: [{
                width: '100%',
                textAlign: 'center',
                values: date_array,
                // displayValues: [stringObj.text.monthNames[month_array[0]-1],stringObj.text.monthNames[month_array[1]-1],stringObj.text.monthNames[month_array[2]-1]],
                onChange: function(picker, carmodel) {
                    // if (picker.cols[0].value === '0') {
                    //     data.scg_usestatus = '';
                    // } else {
                    //     data.scg_usestatus = picker.cols[0].value;
                    // }
                }
            }]
        });

        // branchObj.queryorderlist(data);


        $('.search-btn').click(function(event) {
            var str = $('input[name=date]').val();
            var res = str.split('-');
            if (res[2] == 15) {
                data.query_start = res[0] + '-' + res[1] + '-' + '01';
                data.query_end = str;
            } else {
                data.query_start = res[0] + '-' + res[1] + '-' + '16';
                data.query_end = str;
            }
            branchObj.queryshopsalesoverview(data);
        });


    },
    // 查詢時間區間內店家的優惠卷銷售總覽
    queryshopsalesoverview: function(data) {
        myApp.showIndicator();
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryshopsalesoverview,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                // console.log(JSON.stringify(r));
                if (r.queryshopsalesoverviewresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryshopsalesoverviewresult));
                    if (rObj.message_no === "000000000") {
                        var temp = indexObj.template('templateSalesOverview');
                        var item = temp(rObj);
                        $$('.shop-sales-overview-tab .shop-sales-overview-block').html(item);
                        // 將金額三位一個點隔開
                        for (var i = 0; i < $('.money').length; i++) {
                            $('.money').eq(i).text(thousandComma($('.money').eq(i).text()));
                        }
                        indexObj._dataStorage('shop_report_data', data);
                        $('.href').on('click', function() {
                            var shopReport = indexObj._dataStorage(branchObj.storage.shop_report_data) || {};
                            if ($(this).data('usestatus') == 2) {
                                shopReport.usestatus = true;
                                indexObj._dataStorage('shop_report_data', shopReport);
                            } else {
                                shopReport.usestatus = false;
                                indexObj._dataStorage('shop_report_data', shopReport);
                            }
                        })
                    }
                }
            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //查詢訂單內容
    queryordercontent: function(scg_id) {
        myApp.showIndicator();
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            scg_id: scg_id
        };
        //console.log(JSON.stringify(data));
        indexObj._wcfget({
            url: branchObj.dataUrl.queryordercontent,
            para: data,
            success: function(r) {
                myApp.hideIndicator();
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                if (r.queryordercontentresult) {
                    var rObj = JSON.parse(JSON.stringify(r.queryordercontentresult));
                    if (rObj.message_no === "000000000") {

                        rObj.scm_mainpic = stringObj.text.branch_img_path + rObj.scm_mainpic;
                        if (rObj.scl_cargopack_pic) {
                            rObj.scl_cargopack_pic = stringObj.text.branch_img_path + rObj.scl_cargopack_pic;
                        }
                        rObj.scg_price = parseFloat(rObj.scm_price) * parseInt(rObj.scg_buyamount);

                        if (rObj.scm_producttype === '1') {
                            rObj.isCoupon = true;
                        }

                        var temp = indexObj.template('templateOrderFormInfo');
                        var item = temp(rObj);
                        $$('.order-form-info-content .order-form-info-block').html(item);

                        myApp.initImagesLazyLoad('.page-content');


                        if (rObj.scm_producttype === '2') {
                            switch (rObj.scg_usestatus) {
                                case '5':
                                    $('.toolbar.toolbar-bottom').css('display', 'block');
                                    $('.toolbar.toolbar-bottom a').html(stringObj.shop.print_order);
                                    //rObj.order_list[i].color = 'midnightblue';
                                    break;
                                case '6':
                                    $('.toolbar.toolbar-bottom').css('display', 'block');
                                    $('.toolbar.toolbar-bottom a').html(stringObj.shop.pick_order);
                                    //rObj.order_list[i].color = 'saddlebrown';
                                    break;
                                case '7':
                                    $('.toolbar.toolbar-bottom').css('display', 'block');
                                    $('.toolbar.toolbar-bottom a').html(stringObj.shop.sent_order);
                                    //rObj.order_list[i].color = 'darkgreen';
                                    break;
                                case '8':
                                    $('.toolbar.toolbar-bottom').css('display', 'block');
                                    $('.toolbar.toolbar-bottom a').html(stringObj.shop.print_order);
                                    break;
                                case '9':
                                    $('.toolbar.toolbar-bottom').css('display', 'block');
                                    $('.toolbar.toolbar-bottom a').html(stringObj.shop.print_order);
                                    break;
                            }

                            $('.toolbar-bottom').unbind('click');
                            $('.toolbar-bottom').click(function(event) {
                                switch (rObj.scg_usestatus) {
                                    case '5':
                                        if (Cookies.get('app_version') !== undefined) {
                                            myApp.alert(stringObj.shop.pc_print, stringObj.text.warn);
                                        } else {
                                            branchObj.printdeliverorder([rObj.scl_id]);
                                        }
                                        break;
                                    case '6':
                                        branchObj.querysclid(rObj.scl_id);
                                        break;
                                    case '7':
                                        myApp.modal({
                                            title: stringObj.shop.report_sentlogistics,
                                            text: '<input class="scl_tracenum" type="text" placeholder="' + stringObj.shop.scl_tracenum + '" style="padding: 2%;font-size: 1.2em;width: 96%;">',
                                            buttons: [{
                                                text: stringObj.text.cancel,
                                                onClick: function() {

                                                }
                                            }, {
                                                text: stringObj.text.confirm,
                                                onClick: function() {
                                                    branchObj.reportsentlogistics(rObj.scl_id, $('.scl_tracenum').val());
                                                }
                                            }]
                                        });
                                        break;
                                    default:
                                        if (Cookies.get('app_version') !== undefined) {
                                            myApp.alert(stringObj.shop.pc_print, stringObj.text.warn);
                                        } else {
                                            branchObj.printdeliverorder([rObj.scl_id]);
                                        }
                                        break;
                                }
                            });
                        }

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }
                }

            },
            error: function(r) {
                //console.log('error:' + JSON.stringify(r));
                myApp.hideIndicator();
            }
        });
    },
    //商品訂單內容
    orderFormInfoInit: function(page) {

        var q = page.query;

        if (q.from === 'order-forms') {
            $('.navbar .order-form-info-center').html(stringObj.shop.order_form_info);
        } else if (q.from === 'coupon-order-forms') {
            $('.navbar .order-form-info-center').html(stringObj.shop.coupon_order_form_info);
        }

        $('.order-form-info-left').click(function() {
            window.history.back();
        });

        branchObj.queryordercontent(q.scg_id);


    },
    //揀貨回報(照片)
    pickReportInit: function(page) {

        var q = page.query;

        $('.navbar .pick-report-center').html(stringObj.shop.pick_report);

        $('.pick-report-left').click(function() {
            localStorage.removeItem('report_img');
            window.history.back();
        });

        if (localStorage.getItem('report_img')) {
            $('.image-block img').attr('data-src', stringObj.text.branch_img_path + localStorage.getItem('report_img'));
            myApp.initImagesLazyLoad('.page-content');
        }

        $('.image-block').click(function(event) {
            var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
            if (isMobile.Android() || isMobile.iOS()) {
                now_scm_id = q.scm_id;
                now_scl_id = q.scl_id;
                addImage('report', '');
            } else {
                setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=report&position=add&scl_id=' + q.scl_id + '&scm_id=' + q.scm_id, '');
            }
        });

        $('.report-img').click(function(event) {
            if (localStorage.getItem('report_img')) {
                branchObj.reportcargopack(q.scl_id, localStorage.getItem('report_img'));
            } else {
                myApp.toast(stringObj.shop.no_image, '', {}).show();
            }
        });



    },
    //車庫清單
    query_member_car_list: function() {

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_member_car_list,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_member_car_listresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_member_car_listresult));
                    if (rObj.message_no === "000000000") {

                        /*for (var i in rObj.owncar_list) {
                            rObj.owncar_list[i].mocp_picpath = stringObj.text.mycar_img_path + rObj.owncar_list[i].mocp_picpath;
                        }*/

                        var cars = '';

                        for (var i in rObj.owncar_list) {
                            if (rObj.owncar_list[i].mocp_picpath) {
                                rObj.owncar_list[i].mocp_picpath = stringObj.text.mycar_img_path + rObj.owncar_list[i].mocp_picpath;
                            } else {
                                rObj.owncar_list[i].mocp_picpath = 'app/image/imgDefault.png';
                            }

                            cars += '<li>' +
                                '<label class="label-radio item-content">' +
                                '<input type="radio" name="cars" value="' + rObj.owncar_list[i].moc_id + '">' +
                                '<div class="item-media"><img src="' + rObj.owncar_list[i].mocp_picpath + '" width="120" onerror=\'this.src="app/image/imgDefault.png"\'></div>' +
                                '<div class="item-inner">' +
                                '<div class="item-text">' + rObj.owncar_list[i].cbl_fullname + ' ' + rObj.owncar_list[i].cbm_fullname + ' ' + rObj.owncar_list[i].cms_fullname + '</div>' +
                                '</div>' +
                                '</label>' +
                                '</li>';
                        }

                        var popupHTML = '<div class="popup popup-cars">' +
                            // '<div class="close-btn">' +
                            // '<a href="#" class="close-popup">' +
                            // '<i class="fa fa-times" aria-hidden="true"></i>' +
                            // '</a>' +
                            // '</div>' +
                            '<div class="content-block">' +
                            '<div class="title">' + stringObj.shop.check_cars + '</div>' +
                            '<div class="cars-content">' +
                            '<div class="list-block">' +
                            '<ul>' +
                            cars +
                            '</ul>' +
                            '</div>' +
                            '</div>' +
                            '</div>' +
                            '<div class="toolbar toolbar-bottom tabbar animated fadeInUp">' +
                            '<div class="toolbar-inner">' +
                            '<a href="#" class="confirm">' + stringObj.text.confirm + '</a>' +
                            '</div>' +
                            '</div>' +
                            '</div>';
                        myApp.popup(popupHTML);
                        $('.popup-shop-items').css('z-index', '91000');

                        $('.item-text').ellipsis({
                            row: 2
                        });

                        $('.cars-content ul li input').eq(0).attr('checked', '"checked"');

                        $('.popup-cars .toolbar-bottom .confirm').click(function(event) {
                            myApp.closeModal('.popup-cars');
                            //$('.push-item-block').css('display', 'initial');
                            $('.scg_cartype').val($('input[name=cars]:checked').parents('.item-content').find('.item-inner .item-text').text());
                            $('.scg_cartype').attr('moc_id', $('input[name=cars]:checked').val());
                            //$('.push-item-block .push-item').val($('input[name=cars]:checked').parents('.item-content').find('.item-inner .item-text').text());
                        });

                        //console.log(JSON.stringify(rObj));

                        /*var temp = indexObj.template('templateMyCarList');
                        var item = temp(rObj);
                        $$('.my-car-list').html(item);

                        myApp.initImagesLazyLoad('.page-content');*/


                    } else if (rObj.message_no === "000000003") {
                        myApp.modal({
                            title: stringObj.text.warn,
                            text: '無車輛資訊，可至 <b>會員選單 - 我的資訊 - 車友車庫</b> 新增車輛資訊',
                            buttons: [{
                                text: stringObj.text.confirm,
                                onClick: function() {

                                }
                            }]
                        });
                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //車輛詳細內容
    query_member_car_detail: function(moc_id) {

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            moc_id: moc_id
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_member_car_detail,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_member_car_detailresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_member_car_detailresult));
                    if (rObj.message_no === "000000000") {


                        /*if (rObj.moc_cartypecode) {
                            rObj.moc_cartypecode = stringObj.my_car.moc_cartypecode_json[parseInt(rObj.moc_cartypecode) - 1].type;
                        }
                        if (rObj.moc_ownstatus) {
                            rObj.moc_ownstatus = stringObj.my_car.moc_ownstatus_array[parseInt(rObj.moc_ownstatus) - 1];
                        }*/

                        var scm_item = indexObj._dataStorage('scm_item') || {};
                        var reservationinfo = indexObj._dataStorage('reservationinfo');
                        findArrayItem(reservationinfo.reservelist, 'scm_id', scm_item.scm_id);

                        var popupHTML = '<div class="popup popup-reserve">' +
                            '<div class="page-content">' +
                            '<div class="title">' + scm_item.scm_title + '</div>' +
                            '<div class="image-blcok">' +
                            '<img src="' + stringObj.text.branch_img_path + scm_item.scm_mainpic + '" class="main-img" onerror=\'this.src="app/image/imgDefault.png"\'/></div>' +
                            '<div class="reserve-info-content">' +

                            '<div class="subtitle">' + stringObj.text.description_context + '</div>' +
                            '<div class="context">' + scm_item.scm_fulldescript + '</div>' +

                            '<div class="subtitle">' + stringObj.text.user_info + '</div>' +
                            '<div class="context" style="display: inline-flex;"><div class="item-title">' + stringObj.text.reservationTime + '：</div><div class="scr_rvtime">' + reservationinfo.reservationdate + " " + reservationinfo.reservelist[nowIndex].scr_rvtime + '</div></div>' +
                            '<br><div class="context" style="display: inline-flex;"><div class="item-title">' + stringObj.text.remark + '：</div><div class="scg_buyermessage">' + reservationinfo.reservelist[nowIndex].scg_buyermessage + '</div></div>' +
                            '<br><div class="context" style="display: inline-flex;"><div class="item-title">' + stringObj.my_car.car_style + '：</div><div class="car_type">' + rObj.cbl_fullname + ' ' + rObj.cbm_fullname + ' ' + rObj.cms_fullname + '</div></div>' +
                            '<br><div class="context" style="display: inline-flex;"><div class="item-title">' + stringObj.my_car.car_yearstyle + '：</div><div class="ci_car_year_style">' + rObj.ci_car_year_style + '</div></div>' +
                            '<br><div class="context" style="display: inline-flex;"><div class="item-title">' + stringObj.my_car.moc_carbodycolor + '：</div><div class="moc_carbodycolor">' + rObj.moc_carbodycolor + '</div></div>' +

                            '</div>' +
                            '</div>' +

                            '<div class="toolbar toolbar-bottom tabbar animated fadeInUp">' +
                            '<div class="toolbar-inner">' +
                            '<a href="#" class="confirm">' + stringObj.text.confirm + '</a>' +
                            '</div>' +
                            '</div>' +

                            '</div>';
                        myApp.popup(popupHTML);
                        $('.popup-reserve').css('z-index', '91000');
                        $('.toolbar .confirm').click(function() {
                            myApp.closeModal('.popup-reserve');
                        });



                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //購買資訊填寫
    shopBuyDataInit: function(page) {

        var q = page.query;

        $('.navbar .shop-buy-data-center').html(stringObj.shop.shop_buy_data);

        //$('.shop-buy-data-left a').attr('href', 'shop/shopcoupon-info?scm_id=' + q.scm_id + '&scg_id=' + q.scg_id);
        $('.shop-buy-data-left').click(function() {
            //window.location.replace('pm/shopcoupon-info?scm_id=' + q.scm_id + '&scg_id=' + q.scg_id);
            window.history.back();
        });

        branchObj.query_advancedata(q.from);

        var shop_item = indexObj._dataStorage('shop_item') || {};
        $('.scg_buyamount').change(function() {
            if (parseInt($(this).val()) > parseInt(shop_item.inventory)) {
                $(this).val(shop_item.inventory);
            }
            if (parseInt($(this).val()) < 1) {
                $(this).val(1);
            }
            $('.scl_sum').html(parseInt(shop_item.scm_price) * parseInt($(this).val()));
        });
        $('.scg_buyamount').keyup(function() {
            if (parseInt($(this).val()) > parseInt(shop_item.inventory)) {
                $(this).val(shop_item.inventory);
            }
            if (parseInt($(this).val()) < 1) {
                $(this).val(1);
            }
            $('.scl_sum').html(parseInt(shop_item.scm_price) * parseInt($(this).val()));
        });

        if (shop_item.scm_coupon_providetype === '1') {
            $('.scg_bonus-block').css('display', 'initial');
        } else {
            $('.scm_price-block').css('display', 'initial');
            $('.scl_sum-block').css('display', 'initial');
            $('.invoice_code-block').css('display', 'initial');
            if (shop_item.PayGiftpointAsCash === 'true') {
                branchObj.querymembercoininfo();
            }
        }

        var data = {};

        data.invoice_type = 1;
        //發票類別
        var invoice_type = myApp.picker({
            input: '.invoice_type',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.invoice_type + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0];
            },
            onOpen: function(p) {},
            onClose: function(p) {
                data.invoice_type = p.cols[0].activeIndex + 1;
            },
            cols: [{
                width: '100%',
                textAlign: 'center',
                values: stringObj.shop.invoice_type_array,
                onChange: function(picker, type) {
                    if (picker.cols[0].activeIndex === 1) {
                        $('.tax_title-block').css('display', 'block');
                        $('.tax_id-block').css('display', 'block');
                    } else {
                        $('.tax_title-block').css('display', 'none');
                        $('.tax_id-block').css('display', 'none');
                    }
                }
            }]
        });

        $('.scg_cartype').click(function(event) {
            branchObj.query_member_car_list();
        });

        $('.next').unbind('click');
        $('.next').click(function(event) {

            $('.scg_buyername-block').removeClass('lengthError');
            $('.scg_buyermobile-block').removeClass('lengthError');
            $('.scg_buyerphone-block').removeClass('lengthError');
            $('.scg_buyeremail-block').removeClass('lengthError');
            $('.tax_id-block').removeClass('lengthError');
            $('.scg_buyeremail-block').removeClass('formatError');
            $('.tax_id-block').removeClass('formatError');
            $('.scg_buyamount-block').removeClass('spacesError');
            $('.scg_buyername-block').removeClass('spacesError');
            $('.scg_buyermobile-block').removeClass('spacesError');
            $('.scg_buyerphone-block').removeClass('spacesError');
            $('.discount-block').removeClass('spacesError');
            $('.scg_buyamount-block').removeClass('nullError');
            $('.scg_buyername-block').removeClass('nullError');
            $('.scg_buyermobile-block').removeClass('nullError');
            $('.scg_buyeremail-block').removeClass('nullError');
            $('.discount-block').removeClass('nullError');
            $('.tax_title-block').removeClass('nullError');
            $('.tax_id-block').removeClass('nullError');
            $('.send_addr-block').removeClass('nullError');


            var isError = false;

            var emailRegEx = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i; //電子郵件格式限制
            if ($('.scg_buyeremail').val().search(emailRegEx) == -1 && $.trim($('.scg_buyeremail').val()) !== "") {
                $('.scg_buyeremail-block').addClass('formatError');
                isError = true;
            }

            if (shop_item.scm_coupon_providetype !== '1' && data.invoice_type === 2) {
                switch (chkTaxId($.trim($('.tax_id').val()))) {
                    case 'lengthError':
                        $('.tax_id-block').addClass('lengthError');
                        isError = true;
                        break;
                    case 'formatError':
                        $('.tax_id-block').addClass('formatError');
                        isError = true;
                        break;
                }
            }


            //長度判斷
            if ($('.scg_buyername').val().length > 30) {
                $('.scg_buyername-block').addClass('lengthError');
                isError = true;
            }
            if ($('.scg_buyermobile').val().length > 10) {
                $('.scg_buyermobile-block').addClass('lengthError');
                isError = true;
            }
            if ($('.scg_buyerphone').val().length > 20) {
                $('.scg_buyerphone-block').addClass('lengthError');
                isError = true;
            }
            if ($('.scg_buyeremail').val().length > 100) {
                $('.scg_buyeremail-block').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('.scg_buyername').val().indexOf(" ") !== -1) {
                $('.scg_buyername-block').addClass('spacesError');
                isError = true;
            }
            if ($('.scg_buyermobile').val().indexOf(" ") !== -1) {
                $('.scg_buyermobile-block').addClass('spacesError');
                isError = true;
            }
            if ($('.scg_buyerphone').val().indexOf(" ") !== -1) {
                $('.scg_buyerphone-block').addClass('spacesError');
                isError = true;
            }
            if ($('.scg_buyamount').val().indexOf(" ") !== -1) {
                $('.scg_buyamount-block').addClass('spacesError');
                isError = true;
            }
            if ($('.discount').val().indexOf(" ") !== -1) {
                $('.discount-block').addClass('spacesError');
                isError = true;
            }


            //填寫判斷
            if ($.trim($('.scg_buyername').val()) === "") {
                $('.scg_buyername-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scg_buyermobile').val()) === "") {
                $('.scg_buyermobile-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scg_buyeremail').val()) === "") {
                $('.scg_buyeremail-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scg_buyamount').val()) === "") {
                $('.scg_buyamount-block').addClass('nullError');
                isError = true;
            }
            if (shop_item.scm_coupon_providetype !== '1') {
                if (data.invoice_type === 2) {
                    if ($.trim($('.tax_title').val()) === "") {
                        $('.tax_title-block').addClass('nullError');
                        isError = true;
                    }
                    if ($.trim($('.tax_id').val()) === "") {
                        $('.tax_id-block').addClass('nullError');
                        isError = true;
                    }
                }
                if ($.trim($('.send_addr').val()) === "") {
                    $('.send_addr-block').addClass('nullError');
                    isError = true;
                }
            }

            if (!isError) {
                shop_item = indexObj._dataStorage('shop_item') || {};
                data.scm_id = q.scm_id;
                data.scl_amount = $('.scl_amount').val();
                data.scg_buyamount = $('.scg_buyamount').val();
                data.scl_sum = parseInt(shop_item.scm_price) * parseInt($('.scg_buyamount').val());
                data.scg_bonus = $('.scg_bonus').val();
                data.scg_buyername = $('.scg_buyername').val();
                data.scg_buyermobile = $('.scg_buyermobile').val();
                data.scg_buyerphone = $('.scg_buyerphone').val();
                data.scg_buyeremail = $('.scg_buyeremail').val();
                data.scg_buyermessage = $('.scg_buyermessage').val();
                data.tax_title = $('.tax_title').val();
                data.identifier = $('.tax_id').val();
                data.send_addr = $('.send_addr').val();
                data.scg_paymentstatus = 0;
                data.scg_gp_subtract_amount = parseInt($('.discount').val()) * 50;
                data.scg_subtract_price = $('.discount').val();
                data.moc_id = $('.scg_cartype').attr('moc_id');
                if ($.trim($('.tax_title').val()) === "") {
                    data.tax_title = '';
                }
                indexObj._dataStorage('shop_buy_data', data);

                switch (q.from) {
                    case 'coupon':
                        mainView.router.load({
                            url: 'pay-info?scm_id=' + q.scm_id + '&from=coupon'
                        });
                        break;
                    case 'reservation':
                        mainView.router.load({
                            url: 'shop/shopcoupon-reservation?scm_id=' + q.scm_id + '&booktype=0'
                        });
                        break;
                    case 'commodity':
                        mainView.router.load({
                            url: 'shop-logistics?scm_id=' + q.scm_id
                        });
                        break;
                }
                //branchObj.shopCouponGet(q.scm_id, q.from);
            }

        });

    },
    //物流資訊填寫
    shopLogisticsInit: function(page) {

        var q = page.query;

        $('.navbar .shop-logistics-center').html(stringObj.shop.shop_logistics);

        $('.shop-logistics-left').click(function() {
            window.history.back();
        });

        //$('.shop-logistics-left a').attr('href', 'shop-buy-data?scm_id=' + q.scm_id + '&from=commodity');

        branchObj.query_advancedata(q.from);

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
        var data = {
            modacc: stringObj.blogMenu.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat
        };

        data.scl_delivery_time = 1;
        //指定到貨時段
        var scl_delivery_time = myApp.picker({
            input: '.scl_delivery_time',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                '</div>' +
                '<div class="center">' + stringObj.shop.scl_delivery_time + '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0];
            },
            onOpen: function(p) {},
            onClose: function(p) {
                data.scl_delivery_time = p.cols[0].activeIndex + 1;
            },
            cols: [{
                width: '100%',
                textAlign: 'center',
                values: stringObj.shop.scl_delivery_time_array
            }]
        });
        scl_delivery_time.setValue([stringObj.shop.scl_delivery_time_array[0]]);


        var region = stringObj.region;
        zipArray = region.臺北市[1];

        //地區
        var tpr_country = myApp.picker({
            input: '.scl_country',
            rotateEffect: false,
            toolbarTemplate: '<div class="toolbar">' +
                '<div class="toolbar-inner">' +
                '<div class="left">' +
                '<a href="#" class="link close-picker"></a>' +
                '</div>' +
                '<div class="right">' +
                '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                '</div>' +
                '</div>' +
                '</div>',
            formatValue: function(p, values, displayValues) {
                return values[0] + '  ' + values[1];
            },
            onOpen: function(p) {
                if (mCounty !== '' || mDistrict !== '') {
                    p.setValue([mCounty, mDistrict]);
                }
            },
            onClose: function(p) {
                data.scl_postcode = zipArray[regionIndex]; //郵遞區號
                //$('.tpr_address').val(p.value[0] + p.value[1]);
            },
            cols: [{
                    textAlign: 'center',
                    width: 140,
                    values: stringObj.counties,
                    onChange: function(picker, country) {
                        data.scl_city = country;
                        if (picker.cols[1].replaceValues) {
                            picker.cols[1].replaceValues(region[country][0]);
                            zipArray = region[country][1];
                        }
                    }
                },

                {
                    textAlign: 'center',
                    values: region.臺北市[0],
                    width: 140,
                    onChange: function(picker, district) {
                        data.scl_district = district;
                        regionIndex = picker.cols[1].activeIndex;
                    }
                },
            ]
        });

        $('.next-btn').unbind('click');
        $('.next-btn').click(function(event) {

            $('.scl_receivername-block').removeClass('lengthError');
            $('.scl_receivermobile-block').removeClass('lengthError');
            $('.scl_receiverphone-block').removeClass('lengthError');
            $('.scl_email-block').removeClass('lengthError');
            $('.scl_receiveaddress-block').removeClass('lengthError');
            $('.scl_email-block').removeClass('formatError');
            $('.scl_receivername-block').removeClass('spacesError');
            $('.scl_receivermobile-block').removeClass('spacesError');
            $('.scl_receiverphone-block').removeClass('spacesError');
            $('.scl_receiveaddress-block').removeClass('spacesError');
            $('.scl_receivername-block').removeClass('nullError');
            $('.scl_receivermobile-block').removeClass('nullError');
            $('.scl_receiveaddress-block').removeClass('nullError');
            $('.scl_country-block').removeClass('nullError');
            $('.scl_delivery_time-block').removeClass('nullError');


            var isError = false;

            var emailRegEx = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i; //電子郵件格式限制
            if ($('.scl_email').val().search(emailRegEx) == -1 && $.trim($('.scl_email').val()) !== "") {
                $('.scl_email-block').addClass('formatError');
                isError = true;
            }


            //長度判斷
            if ($('.scl_receivername').val().length > 10) {
                $('.scl_receivername-block').addClass('lengthError');
                isError = true;
            }
            if ($('.scl_receivermobile').val().length > 10) {
                $('.scl_receivermobile-block').addClass('lengthError');
                isError = true;
            }
            if ($('.scl_receiverphone').val().length > 20) {
                $('.scl_receiverphone-block').addClass('lengthError');
                isError = true;
            }
            if ($('.scl_email').val().length > 100) {
                $('.scl_email-block').addClass('lengthError');
                isError = true;
            }
            if ($('.scl_receiveaddress').val().length > 100) {
                $('.scl_receiveaddress-block').addClass('lengthError');
                isError = true;
            }

            //空白字元判斷
            if ($('.scl_receivername').val().indexOf(" ") !== -1) {
                $('.scl_receivername-block').addClass('spacesError');
                isError = true;
            }
            if ($('.scl_receivermobile').val().indexOf(" ") !== -1) {
                $('.scl_receivermobile-block').addClass('spacesError');
                isError = true;
            }
            if ($('.scl_receiverphone').val().indexOf(" ") !== -1) {
                $('.scl_receiverphone-block').addClass('spacesError');
                isError = true;
            }
            if ($('.scl_receiveaddress').val().indexOf(" ") !== -1) {
                $('.scl_receiveaddress-block').addClass('spacesError');
                isError = true;
            }


            //填寫判斷
            if ($.trim($('.scl_receivername').val()) === "") {
                $('.scl_receivername-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scl_receivermobile').val()) === "") {
                $('.scl_receivermobile-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scl_email').val()) === "") {
                $('.scl_email-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scl_country').val()) === "") {
                $('.scl_country-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scl_receiveaddress').val()) === "") {
                $('.scl_receiveaddress-block').addClass('nullError');
                isError = true;
            }
            if ($.trim($('.scl_delivery_time').val()) === "") {
                $('.scl_delivery_time-block').addClass('nullError');
                isError = true;
            }

            if (!isError) {
                if (mCounty !== undefined) {
                    data.scl_city = mCounty;
                    data.scl_district = mDistrict;
                    zipArray = region[mCounty][1];
                    data.scl_postcode = zipArray[region[mCounty][0].indexOf(mDistrict)];
                }
                data.scl_amount = $('.scl_amount').val();
                data.scl_sum = $('.scl_sum').val();
                data.scl_receivername = $('.scl_receivername').val();
                data.scl_receivermobile = $('.scl_receivermobile').val();
                data.scl_receiverphone = $('.scl_receiverphone').val();
                data.scl_email = $('.scl_email').val();
                data.scl_receiveaddress = $('.scl_receiveaddress').val();
                data.scg_paymentstatus = 0;
                indexObj._dataStorage('logistics_data', data);
                mainView.router.load({
                    url: 'pay-info?scm_id=' + q.scm_id + '&scg_id=' + localStorage.getItem('scg_id')
                });
                //branchObj.shopCouponGet(localStorage.getItem('scm_id'), from);
            }

        });

    },
    //建立「暫停預約資料」資料
    create_reservationpaused: function(rp_start_datetime, rp_end_datetime) {

        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            rp_start_datetime: rp_start_datetime,
            rp_end_datetime: rp_end_datetime
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.create_reservationpaused,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.create_reservationpausedresult) {
                    var rObj = JSON.parse(JSON.stringify(r.create_reservationpausedresult));
                    if (rObj.message_no === "000000000") {

                        myApp.toast(stringObj.text.add_success, '', {}).show();
                        myApp.closeModal('.popup-service-paused');
                        branchObj.query_reservationpausedlist();
                        /*mainView.router.load({
                            url: 'appointment-management'
                        });*/


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //刪除「暫停預約資料」資料
    delete_reservationpaused: function(rp_serno) {

        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            rp_serno: rp_serno
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.delete_reservationpaused,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.delete_reservationpausedresult) {
                    var rObj = JSON.parse(JSON.stringify(r.delete_reservationpausedresult));
                    if (rObj.message_no === "000000000") {

                        branchObj.query_reservationpausedlist();

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //查詢「暫停預約資料」列表
    query_reservationpausedlist: function() {

        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_reservationpausedlist,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_reservationpausedlistresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_reservationpausedlistresult));
                    if (rObj.message_no === "000000000") {

                        if (rObj.reservationpaused_list.length > 0) {

                            for (var i in rObj.reservationpaused_list) {
                                rObj.reservationpaused_list[i].rp_start_date = rObj.reservationpaused_list[i].rp_start_datetime.substring(0, 10) + ' (' + stringObj.text.dayNames[new Date(rObj.reservationpaused_list[i].rp_start_datetime.substring(0, 10)).getDay()] + ')';
                                rObj.reservationpaused_list[i].rp_start_time = rObj.reservationpaused_list[i].rp_start_datetime.substring(11, 16);
                                rObj.reservationpaused_list[i].rp_end_date = rObj.reservationpaused_list[i].rp_end_datetime.substring(0, 10) + ' (' + stringObj.text.dayNames[new Date(rObj.reservationpaused_list[i].rp_end_datetime.substring(0, 10)).getDay()] + ')';
                                rObj.reservationpaused_list[i].rp_end_time = rObj.reservationpaused_list[i].rp_end_datetime.substring(11, 16);
                            }

                            var temp = indexObj.template('templateServicePausedList');
                            var item = temp(rObj);
                            $$('.reservationpaused_list ul').html(item);

                            $('.del').unbind('click');
                            $('.del').click(function(event) {
                                var rp_serno = $(this).attr('rp_serno');
                                myApp.modal({
                                    title: stringObj.text.warn,
                                    text: stringObj.text.check_delete,
                                    buttons: [{
                                        text: stringObj.text.cancel,
                                        onClick: function() {}
                                    }, {
                                        text: stringObj.text._delete,
                                        onClick: function() {
                                            branchObj.delete_reservationpaused(rp_serno);
                                        }
                                    }, ]
                                });
                            });

                        } else {
                            dataNull('templateServicePausedNull', stringObj.text.no_data, '.reservationpaused_list ul');
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //暫停預約管理初始化
    appointmentManagementInit: function(page) {

        var q = page.query;

        $('.navbar .appointment-management-center').html(stringObj.shop.appointment_management);

        branchObj.query_reservationpausedlist();

        $('.add_service_paused').unbind('click');
        $('.add_service_paused').click(function(event) {

            myApp.popup('.popup-service-paused');
            $('.toolbar .confirm').click(function() {
                myApp.closeModal('.popup-reserve');
            });

            var start_date, end_date, start_time, end_time;
            $$('.popup-service-paused').on('popup:opened', function(e, popup) {
                var startDate = new Date();
                var today = new Date();
                var month = startDate.getMonth() + 1;
                if (month < 10) {
                    month = '0' + month;
                }
                var date = startDate.getDate();
                if (date < 10) {
                    date = '0' + date;
                }
                var hours = startDate.getHours();
                var minutes = startDate.getMinutes();
                if (minutes < 30) {
                    minutes = '30';
                } else {
                    minutes = '00';
                    if (hours === 23) {
                        hours = 0;
                    } else {
                        hours = hours + 1;
                    }
                }
                if (hours < 10) {
                    hours = '0' + hours;
                }
                $('.rp_start_date').val(startDate.getFullYear() + '-' + month + '-' + date + ' (' + stringObj.text.dayNames[startDate.getDay()] + ')');
                $('.rp_end_date').val(startDate.getFullYear() + '-' + month + '-' + date + ' (' + stringObj.text.dayNames[startDate.getDay()] + ')');
                $('.rp_start_time').val(hours + ':' + minutes);
                $('.rp_end_time').val(hours + ':' + minutes);


                start_date = myApp.calendar({
                    input: '.rp_start_date',
                    dateFormat: 'yyyy-mm-dd (D)',
                    firstDay: 0,
                    monthNames: stringObj.text.monthNames,
                    dayNamesShort: stringObj.text.dayNames,
                    closeOnSelect: true,
                    onOpen: function() {
                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                            if ($$(el).text() == '六') {
                                $$(el).addClass('sat');
                            }
                        });

                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                            if ($$(el).text() == '日') {
                                $$(el).addClass('sun');
                            }
                        });

                    },
                    onClose: function() {

                        if (start_time.cols[0] !== undefined) {
                            if ($('.rp_start_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date) {
                                start_time.cols[0].values = (function() {
                                    var arr = [];
                                    for (var i = hours; i <= 23; i++) {
                                        arr.push(i < 10 ? '0' + i : i);
                                    }
                                    return arr;
                                })();
                            } else {
                                start_time.cols[0].values = (function() {
                                    var arr = [];
                                    for (var i = 0; i <= 23; i++) {
                                        arr.push(i < 10 ? '0' + i : i);
                                    }
                                    return arr;
                                })();
                            }
                        }

                        $('.rp_end_date').css('color', '#666');
                        $('.rp_end_time').css('color', '#000');
                        $('.rp_end_date').val($('.rp_start_date').val());
                        startDate = new Date($('.rp_start_date').val());
                        end_date = myApp.calendar({
                            input: '.rp_end_date',
                            dateFormat: 'yyyy-mm-dd (D)',
                            firstDay: 0,
                            monthNames: stringObj.text.monthNames,
                            dayNamesShort: stringObj.text.dayNames,
                            closeOnSelect: true,
                            onOpen: function() {
                                $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                                    if ($$(el).text() == '六') {
                                        $$(el).addClass('sat');
                                    }
                                });

                                $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                                    if ($$(el).text() == '日') {
                                        $$(el).addClass('sun');
                                    }
                                });

                            },
                            onClose: function() {

                                if (end_time.cols[0] !== undefined) {
                                    if ($('.rp_end_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date) {
                                        end_time.cols[0].values = (function() {
                                            var arr = [];
                                            for (var i = hours; i <= 23; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })();
                                    } else {
                                        end_time.cols[0].values = (function() {
                                            var arr = [];
                                            for (var i = 0; i <= 23; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })();
                                    }
                                }

                            },
                            disabled: {
                                from: new Date('1911/01/01'),
                                to: new Date($('.rp_start_date').val()).setDate(startDate.getDate() - 1)
                            }
                        });
                        if (!end_time) {
                            end_time = myApp.picker({
                                input: '.rp_end_time',
                                rotateEffect: false,
                                toolbarTemplate: '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '<div class="center">結束時間</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>',
                                formatValue: function(p, values, displayValues) {
                                    return values[0] + ':' + values[1];
                                },
                                onOpen: function(p) {
                                    if ($('.rp_end_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date) {
                                        p.cols[0].values = (function() {
                                            var arr = [];
                                            for (var i = hours; i <= 23; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })();
                                        if (parseInt(p.cols[0].value) === parseInt(hours) && minutes === '30') {
                                            if (p.cols[2].replaceValues) {
                                                $('.rp_end_time').val(hours + ':' + minutes);
                                                p.cols[2].replaceValues(['30']);
                                            }
                                        } else {
                                            if (p.cols[2].replaceValues) {
                                                p.cols[2].replaceValues(['00', '30']);
                                            }
                                        }
                                    } else {
                                        p.cols[0].values = (function() {
                                            var arr = [];
                                            for (var i = 0; i <= 23; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })();
                                    }
                                },
                                onClose: function(p) {

                                },
                                cols: [
                                    // Hours
                                    {
                                        width: '45%',
                                        values: (function() {
                                            var arr = [];
                                            for (var i = hours; i <= 23; i++) {
                                                arr.push(i < 10 ? '0' + i : i);
                                            }
                                            return arr;
                                        })(),
                                        onChange: function(picker, value, displayValue) {
                                            if ($('.rp_end_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date && parseInt(picker.cols[0].value) === parseInt(hours) && minutes === '30') {
                                                if (picker.cols[2].replaceValues) {
                                                    picker.cols[2].replaceValues(['30']);
                                                }
                                            } else {
                                                if (picker.cols[2].replaceValues) {
                                                    picker.cols[2].replaceValues(['00', '30']);
                                                }
                                            }
                                        }
                                    },
                                    // Divider
                                    {
                                        width: '10%',
                                        textAlign: 'center',
                                        divider: true,
                                        content: ' : '
                                    },
                                    // Minutes
                                    {
                                        width: '45%',
                                        textAlign: 'left',
                                        values: (function() {
                                            var arr = ['00', '30'];
                                            return arr;
                                        })(),
                                    }

                                ]
                            });
                        }
                    },
                    disabled: {
                        from: new Date('1911/01/01'),
                        to: new Date().setDate(startDate.getDate() - 1)
                    }
                });


                start_time = myApp.picker({
                    input: '.rp_start_time',
                    rotateEffect: false,
                    toolbarTemplate: '<div class="toolbar">' +
                        '<div class="toolbar-inner">' +
                        '<div class="left">' +
                        '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                        '</div>' +
                        '<div class="center">開始時間</div>' +
                        '<div class="right">' +
                        '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                        '</div>' +
                        '</div>' +
                        '</div>',
                    formatValue: function(p, values, displayValues) {
                        return values[0] + ':' + values[1];
                    },
                    onOpen: function(p) {
                        if ($('.rp_start_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date) {
                            p.cols[0].values = (function() {
                                var arr = [];
                                for (var i = hours; i <= 23; i++) {
                                    arr.push(i < 10 ? '0' + i : i);
                                }
                                return arr;
                            })();
                            if (parseInt(p.cols[0].value) === parseInt(hours) && minutes === '30') {
                                if (p.cols[2].replaceValues) {
                                    $('.rp_start_time').val(hours + ':' + minutes);
                                    p.cols[2].replaceValues(['30']);
                                }
                            } else {
                                if (p.cols[2].replaceValues) {
                                    p.cols[2].replaceValues(['00', '30']);
                                }
                            }
                        } else {
                            p.cols[0].values = (function() {
                                var arr = [];
                                for (var i = 0; i <= 23; i++) {
                                    arr.push(i < 10 ? '0' + i : i);
                                }
                                return arr;
                            })();
                        }
                    },
                    onClose: function(p) {
                        if (!end_date || !end_time) {

                            $('.rp_end_date').css('color', '#666');
                            $('.rp_end_time').css('color', '#000');
                            //$('.rp_end_date').val($('.rp_start_date').val());
                            startDate = new Date($('.rp_start_date').val());
                            if (!end_date) {
                                end_date = myApp.calendar({
                                    input: '.rp_end_date',
                                    dateFormat: 'yyyy-mm-dd (D)',
                                    firstDay: 0,
                                    monthNames: stringObj.text.monthNames,
                                    dayNamesShort: stringObj.text.dayNames,
                                    closeOnSelect: true,
                                    onOpen: function() {
                                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                                            if ($$(el).text() == '六') {
                                                $$(el).addClass('sat');
                                            }
                                        });

                                        $$('.picker-calendar-week-day-weekend').each(function(index, el) {
                                            if ($$(el).text() == '日') {
                                                $$(el).addClass('sun');
                                            }
                                        });

                                    },
                                    onClose: function() {

                                        if (end_time.cols[0] !== undefined) {
                                            if ($('.rp_end_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date) {
                                                end_time.cols[0].values = (function() {
                                                    var arr = [];
                                                    for (var i = hours; i <= 23; i++) {
                                                        arr.push(i < 10 ? '0' + i : i);
                                                    }
                                                    return arr;
                                                })();
                                            } else {
                                                end_time.cols[0].values = (function() {
                                                    var arr = [];
                                                    for (var i = 0; i <= 23; i++) {
                                                        arr.push(i < 10 ? '0' + i : i);
                                                    }
                                                    return arr;
                                                })();
                                            }
                                        }

                                    },
                                    disabled: {
                                        from: new Date('1911/01/01'),
                                        to: new Date($('.rp_start_date').val()).setDate(startDate.getDate() - 1)
                                    }
                                });
                            }
                            if (!end_time) {
                                end_time = myApp.picker({
                                    input: '.rp_end_time',
                                    rotateEffect: false,
                                    toolbarTemplate: '<div class="toolbar">' +
                                        '<div class="toolbar-inner">' +
                                        '<div class="left">' +
                                        '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                        '</div>' +
                                        '<div class="center">結束時間</div>' +
                                        '<div class="right">' +
                                        '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>',
                                    formatValue: function(p, values, displayValues) {
                                        return values[0] + ':' + values[1];
                                    },
                                    onOpen: function(p) {
                                        if ($('.rp_end_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date) {
                                            p.cols[0].values = (function() {
                                                var arr = [];
                                                for (var i = hours; i <= 23; i++) {
                                                    arr.push(i < 10 ? '0' + i : i);
                                                }
                                                return arr;
                                            })();
                                            if (parseInt(p.cols[0].value) === parseInt(hours) && minutes === '30') {
                                                if (p.cols[2].replaceValues) {
                                                    $('.rp_end_time').val(hours + ':' + minutes);
                                                    p.cols[2].replaceValues(['30']);
                                                }
                                            } else {
                                                if (p.cols[2].replaceValues) {
                                                    p.cols[2].replaceValues(['00', '30']);
                                                }
                                            }
                                        } else {
                                            p.cols[0].values = (function() {
                                                var arr = [];
                                                for (var i = 0; i <= 23; i++) {
                                                    arr.push(i < 10 ? '0' + i : i);
                                                }
                                                return arr;
                                            })();
                                        }
                                    },
                                    onClose: function(p) {

                                    },
                                    cols: [
                                        // Hours
                                        {
                                            width: '45%',
                                            values: (function() {
                                                var arr = [];
                                                for (var i = hours; i <= 23; i++) {
                                                    arr.push(i < 10 ? '0' + i : i);
                                                }
                                                return arr;
                                            })(),
                                            onChange: function(picker, value, displayValue) {
                                                if ($('.rp_end_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date && parseInt(picker.cols[0].value) === parseInt(hours) && minutes === '30') {
                                                    if (picker.cols[2].replaceValues) {
                                                        picker.cols[2].replaceValues(['30']);
                                                    }
                                                } else {
                                                    if (picker.cols[2].replaceValues) {
                                                        picker.cols[2].replaceValues(['00', '30']);
                                                    }
                                                }
                                            }
                                        },
                                        // Divider
                                        {
                                            width: '10%',
                                            textAlign: 'center',
                                            divider: true,
                                            content: ' : '
                                        },
                                        // Minutes
                                        {
                                            width: '45%',
                                            textAlign: 'left',
                                            values: (function() {
                                                var arr = ['00', '30'];
                                                return arr;
                                            })(),
                                        }

                                    ]
                                });
                            }
                        }
                    },
                    cols: [
                        // Hours
                        {
                            width: '45%',
                            values: (function() {
                                var today = new Date();
                                var arr = [];
                                for (var i = hours; i <= 23; i++) {
                                    arr.push(i < 10 ? '0' + i : i);
                                }
                                return arr;
                            })(),
                            onChange: function(picker, value, displayValue) {
                                if ($('.rp_start_date').val().substring(0, 10) === today.getFullYear() + '-' + month + '-' + date && parseInt(picker.cols[0].value) === parseInt(hours) && minutes === '30') {
                                    if (picker.cols[2].replaceValues) {
                                        picker.cols[2].replaceValues(['30']);
                                    }
                                } else {
                                    if (picker.cols[2].replaceValues) {
                                        picker.cols[2].replaceValues(['00', '30']);
                                    }
                                }
                            }
                        },
                        // Divider
                        {
                            width: '10%',
                            textAlign: 'center',
                            divider: true,
                            content: ' : '
                        },
                        // Minutes
                        {
                            width: '45%',
                            textAlign: 'left',
                            values: (function() {
                                var arr = ['00', '30'];
                                return arr;
                            })(),
                        }

                    ]
                });


            });


            $$('.popup-service-paused').on('popup:close', function(e, popup) {
                $('.rp_end_date').css('color', '#ddd');
                $('.rp_end_time').css('color', '#ccc');
                if (end_date) {
                    end_date.destroy();
                }
                if (end_time) {
                    end_time.destroy();
                }

            });

            $('.popup-service-paused .add_service_paused').unbind('click');
            $('.popup-service-paused .add_service_paused').click(function(event) {
                branchObj.create_reservationpaused($('.rp_start_date').val().substring(0, 10) + ' ' + $('.rp_start_time').val(), $('.rp_end_date').val().substring(0, 10) + ' ' + $('.rp_end_time').val());
            });


        });

        //branchObj.query_advancedata(q.from);


    },
    //查詢「商家銷售結算主表清單」列表
    query_shopsettlementrec_m_list: function(sd_id) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_shopsettlementrec_m_list,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_shopsettlementrec_m_listresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_shopsettlementrec_m_listresult));
                    if (rObj.message_no === "000000000") {

                        if (rObj.shopsettlementrec_m_list.length > 0) {
                            for (var i in rObj.shopsettlementrec_m_list) {
                                if (rObj.shopsettlementrec_m_list[i].ssrm_settlementpayment === '0') {
                                    rObj.shopsettlementrec_m_list[i].settlement_status = stringObj.shop.ssrm_settlementreview[parseInt(rObj.shopsettlementrec_m_list[i].ssrm_settlementreview)];
                                } else {
                                    rObj.shopsettlementrec_m_list[i].settlement_status = stringObj.shop.ssrm_settlementpayment[parseInt(rObj.shopsettlementrec_m_list[i].ssrm_settlementpayment)];
                                }
                            }

                            var temp = indexObj.template('templateSettleAccounts');
                            var item = temp(rObj);
                            $$('.settle-accounts-list ul').html(item);

                        } else {

                            var temp = indexObj.template('templateSettleAccountsNull');
                            var item = temp('');
                            $$('.settle-accounts-list ul').html(item);

                        }



                    } else {
                        var temp = indexObj.template('templateSettleAccountsNull');
                        var item = temp('');
                        $$('.settle-accounts-list ul').html(item);
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                var temp = indexObj.template('templateSettleAccountsNull');
                var item = temp('');
                $$('.settle-accounts-list ul').html(item);
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //帳務結算紀錄
    settleAccountsInit: function(page) {
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        branchObj.query_shopsettlementrec_m_list(branchData.sd_id);
    },
    //更新店家覆核狀態
    update_settlementview: function(sd_id, ssrm_id, settlementreview) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id,
            ssrm_id: ssrm_id,
            settlementreview: settlementreview
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.update_settlementview,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.update_settlementviewresult) {
                    var rObj = JSON.parse(JSON.stringify(r.update_settlementviewresult));
                    if (rObj.message_no === "000000000") {

                        myApp.toast(stringObj.text.already_send, '', {}).show();
                        mainView.router.load({
                            url: 'settle-accounts-content?ssrm_id=' + ssrm_id,
                            reload: true
                        });

                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //查詢「商家銷售結算主表」列表
    query_shopsettlementrec_m: function(sd_id, ssrm_id) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id,
            ssrm_id: ssrm_id
        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_shopsettlementrec_m,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_shopsettlementrec_mresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_shopsettlementrec_mresult));
                    if (rObj.message_no === "000000000") {

                        if (rObj.shopsettlementrec_m) {

                            $('.toolbar .error').unbind('click');
                            $('.toolbar .error').click(function(event) {
                                myApp.modal({
                                    title: stringObj.shop.accounts_error,
                                    text: stringObj.shop.accounts_error_context,
                                    buttons: [{
                                        text: stringObj.text.cancel,
                                        onClick: function() {}
                                    }, {
                                        text: stringObj.text.confirm,
                                        onClick: function() {
                                            branchObj.update_settlementview(sd_id, ssrm_id, 2);
                                        }
                                    }, ]
                                });
                            });

                            $('.toolbar .request').unbind('click');
                            $('.toolbar .request').click(function(event) {
                                myApp.modal({
                                    title: stringObj.shop.accounts_request,
                                    text: stringObj.shop.accounts_request_context,
                                    buttons: [{
                                        text: stringObj.text.cancel,
                                        onClick: function() {}
                                    }, {
                                        text: stringObj.text.confirm,
                                        onClick: function() {
                                            branchObj.update_settlementview(sd_id, ssrm_id, 1);
                                        }
                                    }, ]
                                });
                                $('.modal-text .price').html(rObj.shopsettlementrec_m.ssrm_settlementpayamount);
                            });

                            if (rObj.shopsettlementrec_m.ssrm_settlementreview === '0') {
                                $('.toolbar').css('display', 'block');
                            }

                            if (rObj.shopsettlementrec_m.ssrm_settlementpayment === '0') {
                                rObj.shopsettlementrec_m.settlement_status = stringObj.shop.ssrm_settlementreview[parseInt(rObj.shopsettlementrec_m.ssrm_settlementreview)];
                            } else {
                                rObj.shopsettlementrec_m.settlement_status = stringObj.shop.ssrm_settlementpayment[parseInt(rObj.shopsettlementrec_m.ssrm_settlementpayment)];
                            }
                            rObj.shopsettlementrec_m.ssrm_totalplatformfee = (parseFloat(rObj.shopsettlementrec_m.ssrm_totaliscarplatformfee) + parseFloat(rObj.shopsettlementrec_m.ssrm_totalpaymentflowfee)).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            rObj.shopsettlementrec_m.ssrm_totaltransatctioncount = rObj.shopsettlementrec_m.ssrm_totaltransatctioncount.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            rObj.shopsettlementrec_m.salecount = rObj.shopsettlementrec_m.salecount.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            rObj.shopsettlementrec_m.ssrm_salebypp = rObj.shopsettlementrec_m.ssrm_salebypp.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            rObj.shopsettlementrec_m.ssrm_totalppconsume = rObj.shopsettlementrec_m.ssrm_totalppconsume.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            rObj.shopsettlementrec_m.saleamount = rObj.shopsettlementrec_m.saleamount.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            rObj.shopsettlementrec_m.ssrm_settlementpayamount = rObj.shopsettlementrec_m.ssrm_settlementpayamount.replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                            indexObj._dataStorage('shopsettlementrec_m', {
                                ssrm_billingcycle_start: rObj.shopsettlementrec_m.ssrm_billingcycle_start,
                                ssrm_billingcycle_end: rObj.shopsettlementrec_m.ssrm_billingcycle_end,
                                ssrm_totaltransatctioncount: rObj.shopsettlementrec_m.ssrm_totaltransatctioncount,
                                ssrm_settlementpayamount: rObj.shopsettlementrec_m.ssrm_settlementpayamount
                            });

                            var temp = indexObj.template('templateSettleAccountsContent');
                            var item = temp(rObj.shopsettlementrec_m);
                            $$('.settle-accounts-content-block').html(item);

                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //銷售結算一覽
    settleAccountsContentInit: function(page) {
        var q = page.query;
        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        branchObj.query_shopsettlementrec_m(branchData.sd_id, q.ssrm_id);
    },
    //查詢「商家銷售結算子表」列表
    query_shopsettlementrec_d_list: function(sd_id, ssrm_id, billingtype, data_pagination) {

        var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};

        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: sd_id,
            ssrm_id: ssrm_id,
            billingtype: billingtype,
            data_pagination: data_pagination,
            queryamount: 10

        };
        //console.log(JSON.stringify(data));

        myApp.showIndicator();
        indexObj._wcfget({
            url: branchObj.dataUrl.query_shopsettlementrec_d_list,
            para: data,
            success: function(r) {
                indexObj.jsonUrlDecode(r);
                //console.log(JSON.stringify(r));
                myApp.hideIndicator();
                if (r.query_shopsettlementrec_d_listresult) {
                    var rObj = JSON.parse(JSON.stringify(r.query_shopsettlementrec_d_listresult));
                    if (rObj.message_no === "000000000") {

                        if (rObj.query_shopsettlementrec_d_list.length > 0) {
                            if (settle_accounts_totalcount === 0) {
                                var shopsettlementrec_m = indexObj._dataStorage('shopsettlementrec_m') || {};
                                var temp = indexObj.template('templateSettleAccountsTableBlock');
                                var item = temp(shopsettlementrec_m);
                                $$('.settle-accounts-table-content').html(item);

                                $('.billingtype' + billingtype).addClass('active');

                                $('.buttons-row a').unbind('click');
                                $('.buttons-row a').click(function(event) {
                                    $('.buttons-row a').removeClass('active');
                                    $(this).addClass('active');

                                    settle_accounts_totalcount = 0;

                                    billingtype = $(this).attr('billingtype');

                                    branchObj.query_shopsettlementrec_d_list(sd_id, ssrm_id, billingtype, 1);

                                });
                                settle_accounts_totalcount = parseInt(rObj.totalcount);
                                if (settle_accounts_swiper) {
                                    settle_accounts_swiper.removeAllSlides();
                                    settle_accounts_swiper.destroy(false, true);
                                }
                                settle_accounts_swiper = new Swiper('.swiper-container', {
                                    effect: 'fade',
                                    onSlideChangeStart: function(swiper) {
                                        data.data_pagination = swiper.activeIndex + 1;
                                        $('.pagination-content .now-page').val(data.data_pagination);
                                        if (data.data_pagination === 1) {
                                            $('.pagination-content .previous-page').css('visibility', 'hidden');
                                        } else {
                                            $('.pagination-content .previous-page').css('visibility', 'visible');
                                        }
                                        if (data.data_pagination === Math.ceil(parseInt(rObj.totalcount) / 10)) {
                                            $('.pagination-content .next-page').css('visibility', 'hidden');
                                        } else {
                                            $('.pagination-content .next-page').css('visibility', 'visible');
                                        }
                                        branchObj.query_shopsettlementrec_d_list(sd_id, ssrm_id, billingtype, data.data_pagination);
                                    }
                                });
                                $('.pagination-content .previous-page').unbind('click');
                                $('.pagination-content .previous-page').click(function(event) {
                                    settle_accounts_swiper.slidePrev(true, 300);
                                });
                                $('.pagination-content .next-page').unbind('click');
                                $('.pagination-content .next-page').click(function(event) {
                                    settle_accounts_swiper.slideNext(true, 300);
                                });
                                if (nowPage === 'settle-accounts-table') {
                                    if (parseInt(billingtype) === 1) {
                                        for (var i = 0; i < Math.ceil(parseInt(rObj.totalcount) / 10); i++) {
                                            settle_accounts_swiper.appendSlide('<div class="swiper-slide swiper-slide-' + (parseInt(i) + 1) + '">' +
                                                '<div class="data-table card">' +
                                                '<table>' +
                                                '<thead>' +
                                                '<tr>' +
                                                '<th class="label-cell">訂單編號</th>' +
                                                '<th class="label-cell">交易時間</th>' +
                                                '<th class="numeric-cell">實收金額</th>' +
                                                '</tr>' +
                                                '</thead>' +
                                                '<tbody>' +
                                                '</tbody>' +
                                                '</table>' +
                                                '</div>' +
                                                '</div>')
                                        }
                                    } else if (parseInt(billingtype) === 3) {
                                        for (var i = 0; i < Math.ceil(parseInt(rObj.totalcount) / 10); i++) {
                                            settle_accounts_swiper.appendSlide('<div class="swiper-slide swiper-slide-' + (parseInt(i) + 1) + '">' +
                                                '<div class="data-table card">' +
                                                '<table>' +
                                                '<thead>' +
                                                '<tr>' +
                                                '<th class="label-cell">訂單編號</th>' +
                                                '<th class="label-cell">交易時間</th>' +
                                                '<th class="numeric-cell">特點消費</th>' +
                                                '</tr>' +
                                                '</thead>' +
                                                '<tbody>' +
                                                '</tbody>' +
                                                '</table>' +
                                                '</div>' +
                                                '</div>')
                                        }
                                    }

                                }

                            }
                            for (var i in rObj.query_shopsettlementrec_d_list) {
                                rObj.query_shopsettlementrec_d_list[i].scg_id = rObj.query_shopsettlementrec_d_list[i].scg_id.substring(0, 2) + '***' + rObj.query_shopsettlementrec_d_list[i].scg_id.substring(rObj.query_shopsettlementrec_d_list[i].scg_id.length - 4, rObj.query_shopsettlementrec_d_list[i].scg_id.length);
                            }

                            if (parseInt(billingtype) === 1) {
                                var temp = indexObj.template('templateSettleAccountsTable1');
                            } else if (parseInt(billingtype) === 3) {
                                var temp = indexObj.template('templateSettleAccountsTable3');
                            }
                            var item = temp(rObj);
                            $$('.swiper-container .swiper-slide-' + (parseInt(settle_accounts_swiper.activeIndex) + 1) + ' .data-table table tbody').html(item);

                            if (rObj.query_shopsettlementrec_d_list.length < 10) {

                                for (var i = 0; i < (10 - rObj.query_shopsettlementrec_d_list.length % 10); i++) {
                                    $('.swiper-container .swiper-slide-' + (parseInt(settle_accounts_swiper.activeIndex) + 1) + ' .data-table table tbody').append('<tr>' +
                                    '<th class="label-cell"></th>' +
                                    '<th class="label-cell"></th>' +
                                    '<th class="numeric-cell"></th>' +
                                    '</tr>');
                                }

                            }

                            $('.pagination').css('display', 'block');
                            $('.pagination-content').css('visibility', 'visible');
                            $('.pagination-content .sum-pages').html(Math.ceil(parseInt(rObj.totalcount) / 10));
                            var pages = [];
                            for (var i = 1; i < Math.ceil(parseInt(rObj.totalcount) / 10) + 1; i++) {
                                pages.push(i);
                            }
                            if (Math.ceil(parseInt(rObj.totalcount) / 10) > 1) {
                                $('.pagination-content .next-page').css('visibility', 'visible');
                            }
                            if (data.data_pagination === 1) {
                                $('.pagination-content .previous-page').css('visibility', 'hidden');
                                $('.pagination-content .now-page').val(1);
                            }
                            if (data.data_pagination === Math.ceil(parseInt(rObj.totalcount) / 10)) {
                                $('.pagination-content .next-page').css('visibility', 'hidden');
                            }

                            if (settle_accounts_picker) {
                                settle_accounts_picker.destroy();
                            }
                            //頁數選擇
                            settle_accounts_picker = myApp.picker({
                                input: '.now-page',
                                rotateEffect: false,
                                toolbarTemplate: '<div class="toolbar">' +
                                    '<div class="toolbar-inner">' +
                                    '<div class="left">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check noUse" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '<div class="center">' + stringObj.shop.chose_page + '</div>' +
                                    '<div class="right">' +
                                    '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>',
                                formatValue: function(p, values, displayValues) {
                                    return displayValues[0];
                                },
                                onOpen: function(p) {
                                    if (data.data_pagination) {
                                        p.setValue([data.data_pagination]);
                                    }
                                },
                                onClose: function(p) {
                                    data.data_pagination = p.cols[0].value;
                                    settle_accounts_swiper.slideTo(p.cols[0].value - 1, 300, true);
                                },
                                cols: [{
                                    width: '100%',
                                    textAlign: 'center',
                                    values: pages,
                                    onChange: function(picker, carmodel) {
                                        /*if (picker.cols[0].value === '0') {
                                            data.scg_usestatus = '';
                                        } else {
                                            data.scg_usestatus = picker.cols[0].value;
                                        }*/
                                    }
                                }]
                            });

                        } else {
                            $('.pagination').css('display', 'none');
                            settle_accounts_swiper = new Swiper('.swiper-container', {

                            });
                            settle_accounts_swiper.removeAllSlides();
                            settle_accounts_swiper.appendSlide('<div class="swiper-slide"><div class="content-null">' +
                                '<h1><i class="fa fa-file-text-o"></i></h1>' +
                                '<br>' +
                                '<h3>' + stringObj.text.search_null + '</h3>' +
                                '</div></div>');
                            settle_accounts_swiper.destroy(false, true);
                            //myApp.toast(stringObj.text.search_null, '', {}).show();
                        }


                    } else {
                        stringObj.return_header(rObj.message_no);
                        if (_tip) {
                            myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                            _tip = null;
                        }
                    }

                }
            },
            error: function(r) {
                myApp.hideIndicator();
                noNetwork();
            }
        });
    },
    //銷售對帳表
    settleAccountsTableInit: function(page) {

        var q = page.query;

        billingtype = 1;

        $('.settle-accounts-table-left').click(function(event) {
            //window.history.back();
            mainView.router.load({
                url: 'settle-accounts-content?ssrm_id=' + q.ssrm_id,
                reload: true
            });
        });

        var branchData = indexObj._dataStorage(branchObj.storage.branchData);
        branchObj.query_shopsettlementrec_d_list(branchData.sd_id, q.ssrm_id, billingtype, 1);

    },

};


/*前往付費完成*/
paySuccess = function(data) {
    myApp.showIndicator();
    data = JSON.parse(data);
    if (data.errcode === '00') {
        // var temp = indexObj.template('templatePaySuccessForm');
        // var item = temp(data);
        // $$('.pay-info-block').append(item);
        // $('.pay_success_form').submit();
        mainView.router.load({
            url: 'pay-success'
        });
    } else {
        myApp.hideIndicator();
        myApp.alert(data.errmsg, stringObj.text.warn);
    }
};


/**
 * 輸入長度限制
 * @param element 對象
 * @param max 最大長度
 */
input_limit = function(element, max) {
    var max_chars = max;
    if (element.value.length > max_chars) {
        element.value = element.value.substr(0, max_chars);
    }
};


/**
 * 支付內容頁面
 * @param tp_id 廟宇編號
 */
templeDonate = function(tp_id) {

    mainView.router.load({
        url: 'pay-info?type=templeDonate&tp_id=' + tp_id
    });

};

/**
 * 支付密碼視窗
 * @param type 支付類型
 * @param tp_id 廟宇編號
 */
pay_password_popup = function(type, tp_id) {

    var popupHTML = '<div class="popup pay-password-popup">' +
        '<div class="close-btn">' +
        '<a href="#" class="close-popup">' +
        '<i class="fa fa-times" aria-hidden="true"></i>' +
        '</a>' +
        '</div>' +
        '<div class="content-block">' +
        '<div class="title">' + '支付密碼' + '</div>' +
        '<input class="verification_code" type="password" placeholder="' + '請輸入支付密碼' + '" onkeydown="input_limit(this, 6);" onkeyup="input_limit(this, 6);">' +
        '<a href="#" class="button button-big confirm">' + stringObj.text.confirm + '</a>' +
        '</div>' +
        '</div>';
    myApp.popup(popupHTML);

    $('.confirm').click(function() {
        myApp.closeModal('.pay-password-popup');
        mainView.router.load({
            url: 'pay-success?type=' + type + '&tp_id=' + tp_id,
            reload: true
        });
    });

};


/**
 * 照片上傳後呼叫
 * @param id 商家/會員編號
 * @param subfolder 資料夾名稱
 * @param filename 檔案名稱
 */
uploadAfter = function(id, subfolder, filename) {
    //車賣場&我的車庫的id實際值為subfolder，subfolder實際值為id
    //myApp.toast(stringObj.text.upload_success, '', {}).show();
    var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
    var img_path = id + '/' + subfolder + '/' + filename + '.jpg';
    if (subfolder == 'maincover') {
        //$$('.branch-img').attr('src', stringObj.text.branch_img_path + img_path);
        branchData.sd_shopphotopath = branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
        indexObj._dataStorage(branchObj.storage.branchData, branchData);
        if (branchData.sd_shopphotopath) {
            $$('.branch-img-block').html('<img data-src="' + stringObj.text.branch_img_path + branchData.sd_shopphotopath + '" class="lazy branch-img" onerror=\'this.src = "../app/image/imgDefault.png"\'/><div class="edit-img"><i class="fa fa-pencil" aria-hidden="true"></i></div>');
            $('.edit-img').click(function() {
                addImage('branch-img', '');
            });
        }
        myApp.initImagesLazyLoad('.page-content');
    } else if (subfolder == 'shopservice') {
        branchData.ssqd_mainpic = branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
        indexObj._dataStorage(branchObj.storage.branchData, branchData);
        if (branchData.ssqd_mainpic) {
            $$('.shopservice-img-block').html('<img data-src="' + stringObj.text.branch_img_path + branchData.ssqd_mainpic + '" class="lazy shopservice-img" onerror=\'this.src = "../app/image/imgDefault.png"\'/><div class="edit-img"><i class="fa fa-pencil" aria-hidden="true"></i></div>');
            $('.edit-img').click(function() {
                if (isMobile.Android() || isMobile.iOS()) {
                    addImage('branch-service', '');
                } else {
                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopservice', '');
                }
            });
        }
        myApp.initImagesLazyLoad('.page-content');
    } else if (subfolder == 'shoppush') {

        // branchData.ssqd_mainpic = branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
        // indexObj._dataStorage(branchObj.storage.branchData, branchData);
        localStorage.setItem(branchObj.storage.imagePath, branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
        if (img_path) {
            //$$('.push-img-block').html('<img data-src="' + stringObj.text.branch_img_path + branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path + '" class="lazy" onerror=\'this.src = "../app/image/imgDefault.png"\'/><div class="edit-img"><i class="fa fa-pencil" aria-hidden="true"></i></div>');
            $('.push-img-block img').attr('src', stringObj.text.branch_img_path + branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
            $('.edit-img').unbind('click');
            $('.edit-img').click(function() {
                if (Cookies.get('app_version') !== undefined) {
                    addImage('push-img', branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
                } else {
                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shoppush', branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
                }
            });
        }
        myApp.initImagesLazyLoad('.page-content');

    } else if (id === 'sd' || id === 'md') { //車賣場的id實際值為subfolder，subfolder實際值為id
        var usedCarData = indexObj._dataStorage(usedCarObj.storage.usedCarData);
        if (nowAddImgType == 'usedcar-main-img') {
            usedCarData.used_car_imgs.main = usedCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
            indexObj._dataStorage(usedCarObj.storage.usedCarData, usedCarData);
        } else if (nowAddImgType == 'usedcar-picscategory1-img' || nowAddImgType == 'usedcar-picscategory2-img' || nowAddImgType == 'usedcar-picscategory3-img') {
            switch (nowAddImgType) {
                case 'usedcar-picscategory1-img':
                    usedCarData.used_car_imgs.picscategory1 = usedCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
                    break;
                case 'usedcar-picscategory2-img':
                    usedCarData.used_car_imgs.picscategory2 = usedCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
                    break;
                case 'usedcar-picscategory3-img':
                    usedCarData.used_car_imgs.picscategory3 = usedCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
                    break;
            }
            indexObj._dataStorage(usedCarObj.storage.usedCarData, usedCarData);
        } else {
            if (nowEditFilePath != '') {
                usedCarData.used_car_imgs.imgs.splice(usedCarData.used_car_imgs.imgs.indexOf(nowEditFilePath), 1, usedCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
            } else {
                usedCarData.used_car_imgs.imgs.push(usedCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
            }
            indexObj._dataStorage(usedCarObj.storage.usedCarData, usedCarData);
        }

        usedCarData = indexObj._dataStorage(usedCarObj.storage.usedCarData);
        //console.log(JSON.stringify(usedCarData));


        if (usedCarData.used_car_imgs.main != '') {
            usedCarSwiper.removeAllSlides();
            usedCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.main + '" onerror=\'this.src="../app/image/imgDefault.png"\' />   </div>');
        }
        if (usedCarData.used_car_imgs.imgs.length > 0) {
            for (var i in usedCarData.used_car_imgs.imgs) {
                usedCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.imgs[i] + '" onerror=\'this.src="../app/image/imgDefault.png"\' />   </div>');
            }
        }

        if (usedCarData.used_car_imgs.main != '' && usedCarData.used_car_imgs.imgs.length < 20) {
            usedCarSwiper.appendSlide('<div class="swiper-slide"><img src="../app/image/imgDefault.png" onerror=\'this.src="../app/image/imgDefault.png"\' /></div>');
        }

        if (usedCarData.used_car_imgs.picscategory1 != '') {
            $('.picscategory1').attr('src', stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.picscategory1);
        }
        if (usedCarData.used_car_imgs.picscategory2 != '') {
            $('.picscategory2').attr('src', stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.picscategory2);
        }
        if (usedCarData.used_car_imgs.picscategory3 != '') {
            $('.picscategory3').attr('src', stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.picscategory3);
        }


        usedCarSwiper.slideTo(usedCarData.used_car_imgs.imgs.length, 0, true);


        if (usedCarData.used_car_imgs.main != '') {
            $('.img-index').html((usedCarData.used_car_imgs.imgs.length + 1) + '/' + (usedCarData.used_car_imgs.imgs.length + 2));
        } else {
            $('.img-index').html((usedCarData.used_car_imgs.imgs.length + 1) + '/' + 1);
        }


        myApp.initImagesLazyLoad('.page-content');
    } else if (id === 'md_id') { //我的車庫的id實際值為subfolder，subfolder實際值為id
        var myCarData = indexObj._dataStorage(myCarObj.storage.myCarData);
        //console.log(JSON.stringify(myCarData));
        if (nowAddImgType == 'mycar-main-img') {
            myCarData.my_car_imgs.main = myCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
            indexObj._dataStorage(myCarObj.storage.myCarData, myCarData);
        } else {
            if (nowEditFilePath != '') {
                myCarData.my_car_imgs.imgs.splice(myCarData.my_car_imgs.imgs.indexOf(nowEditFilePath), 1, myCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
            } else {
                myCarData.my_car_imgs.imgs.push(myCarObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
            }
            indexObj._dataStorage(myCarObj.storage.myCarData, myCarData);
        }

        myCarData = indexObj._dataStorage(myCarObj.storage.myCarData);
        //console.log(JSON.stringify(myCarData));


        if (myCarData.my_car_imgs.main != '') {
            myCarSwiper.removeAllSlides();
            myCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.mycar_img_path + myCarData.my_car_imgs.main + '" onerror=\'this.src="../app/image/imgDefault.png"\' /></div>');
        }
        if (myCarData.my_car_imgs.imgs.length > 0) {
            for (var i in myCarData.my_car_imgs.imgs) {
                myCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.mycar_img_path + myCarData.my_car_imgs.imgs[i] + '" onerror=\'this.src="../app/image/imgDefault.png"\' /></div>');
            }
        }

        if (myCarData.my_car_imgs.main != '' && myCarData.my_car_imgs.imgs.length < 20) {
            myCarSwiper.appendSlide('<div class="swiper-slide"><img src="../app/image/imgDefault.png" onerror=\'this.src="../app/image/imgDefault.png"\' /></div>');
        }

        myCarSwiper.slideTo(myCarData.my_car_imgs.imgs.length, 0, true);


        if (myCarData.my_car_imgs.main != '') {
            $('.img-index').html((myCarData.my_car_imgs.imgs.length + 1) + '/' + (myCarData.my_car_imgs.imgs.length + 2));
        } else {
            $('.img-index').html((myCarData.my_car_imgs.imgs.length + 1) + '/' + 1);
        }


        myApp.initImagesLazyLoad('.page-content');
    } else if (subfolder == 'head_badge') {
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        mainSg.clubdata.ccd_clubbadge = carClubObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
        indexObj._dataCookies(indexObj._storage.main, mainSg, 'iscarmg.com');
        //console.log(mainSg.clubdata.ccd_clubbadge);
        if (mainSg.clubdata.ccd_clubbadge) {
            $$('.club-logo-block').html('<img data-src="' + stringObj.text.car_club_img_path + mainSg.clubdata.ccd_clubbadge + '" width=100 class="lazy" onerror=\'this.src="../app/image/imgDefault.png"\' /><div class="edit-icon"><i class="fa fa-pencil" aria-hidden="true"></i></div>');
            $('.club-logo-block').click(function() {
                addImage('club-logo', '');
            });
        }
        myApp.initImagesLazyLoad('.page-content');
    } else if (subfolder === 'shopcontent') {
        var shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};
        if (nowEditFilePath != '') {
            findArrayItem(shop_data.sd_advancedata, 'content_img', nowEditFilePath);
            shop_data.sd_advancedata[nowIndex].content_img = branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
        } else {
            shop_data.sd_advancedata.push({
                content_text: '',
                content_img: branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path
            });
        }
        indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
        saveShopData();
        mainView.router.load({
            url: localStorage.getItem('back_url').substring(localStorage.getItem('back_url').indexOf("#!/") + 3),
            reload: true
        });
        localStorage.removeItem('back_url');
    } else {
        //localStorage.setItem(branchObj.storage.imagePath, 'ShopCoupon');
        if (nowAddImgType === 'main-img') {
            //TEST  branchData.shopcoupon_imgs.main = img_path;
            branchData.shopcoupon_imgs.main = branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
            indexObj._dataStorage(branchObj.storage.branchData, branchData);
        } else if (nowAddImgType === 'sub-img') {
            if (nowEditFilePath !== '') {
                //TEST branchData.shopcoupon_imgs.imgs.splice(branchData.shopcoupon_imgs.imgs.indexOf(nowEditFilePath), 1, img_path);
                branchData.shopcoupon_imgs.imgs.splice(branchData.shopcoupon_imgs.imgs.indexOf(nowEditFilePath), 1, branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
            } else {
                //TEST branchData.shopcoupon_imgs.imgs.push(img_path);
                branchData.shopcoupon_imgs.imgs.push(branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
            }
            indexObj._dataStorage(branchObj.storage.branchData, branchData);
        } else if (nowAddImgType === 'report') {
            $('.image-block img').attr('src', stringObj.text.branch_img_temporary_path + img_path);
            localStorage.setItem('report_img', branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path);
        } else {
            var commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {
                scm_advancedescribe: []
            };
            if (nowEditFilePath !== '') {
                findArrayItem(commodity_data.scm_advancedescribe, 'content_img', nowEditFilePath);
                commodity_data.scm_advancedescribe[nowIndex].content_img = branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path;
            } else {
                commodity_data.scm_advancedescribe.push({
                    content_text: '',
                    content_img: branchObj.dataUrl.FTP_TEMPPRARY_PATH + img_path
                });
            }
            indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
        }

        if (branchData.shopcoupon_imgs.main !== '') {
            $$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '" onclick="addImage(\'main-img\',\'' + branchData.shopcoupon_imgs.main + '\')"/><div class="main-lable">' + stringObj.text.front_cover + '</div></div>');
        }
        if (branchData.shopcoupon_imgs.imgs.length > 0) {
            for (var i in branchData.shopcoupon_imgs.imgs) {
                $$('.image-block .container').append('<div class="sub-image-block"><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" onclick="addImage(\'sub-img\',\'' + branchData.shopcoupon_imgs.imgs[i] + '\')"/></div>');
            }
        }

        if (branchData.shopcoupon_imgs.imgs.length < 5) {
            $$('.image-block .container').append('<div class="image-item" onclick="addImage(\'sub-img\',\'\')">+</div>');
        }


        myApp.initImagesLazyLoad('.page-content');

        saveData();
        localStorage.setItem(branchObj.storage.imagePath, 'ShopCoupon');
        mainView.router.load({
            url: localStorage.getItem('back_url').substring(localStorage.getItem('back_url').indexOf("#!/") + 3),
            reload: true
        });
        localStorage.removeItem('back_url');

    }

};


/**
 * 設置排隊狀態
 * @param ssqd_id 服務編號
 * @param today_serviced 當前排隊號碼
 */
setQueueStatus = function(ssqd_id, today_serviced) {
    //branchObj.shopservicequequery(0, ssqd_id, '');
    //數字累加特效
    var options = {
        useEasing: true,
        useGrouping: true,
        separator: ',',
        decimal: '.',
        prefix: '',
        suffix: ''
    };
    var now_queue_num = new CountUp(".now-queue-num", 0, parseInt(today_serviced), 0, 1, options);
    now_queue_num.start();
    var shopServiceRecord = indexObj._dataStorage(branchObj.storage.shopServiceRecord) || {
        last_update_date: '',
        availableList: [],
        finishList: [],
        invalidList: []
    };


    if (JSON.stringify(shopServiceRecord.availableList).match(ssqd_id)) {

        var date = new Date();
        var month = (date.getMonth() + 1);
        var dates = date.getDate();

        if (month < 10) {
            month = '0' + month;
        }
        if (dates < 10) {
            dates = '0' + dates;
        }
        var today = new Date(date.getFullYear() + '/' + month + '/' + dates) / (1000 * 60 * 60 * 24); //當前時間
        var last_update_date = new Date(shopServiceRecord.last_update_date) / (1000 * 60 * 60 * 24); //最後排隊時間


        //排隊編號初始化
        if (today - last_update_date >= 1) {
            var user_num = new CountUp(".user-num", 0, 0, 0, 1, options);
        } else {
            var user_num = new CountUp(".user-num", 0, parseInt(shopServiceRecord.availableList[0].ssqq_queserno), 0, 1, options);
        }

        user_num.start();
    } else {
        var user_num = new CountUp(".user-num", 0, 0, 0, 1, options);
        user_num.start();
    }



};


/**
 * 更改商家活動狀態
 * @param id 活動編號
 * @param status 狀態(啟用/停用)
 */
changeStatus = function(id, status) {
    var mainSg = indexObj._dataCookies(indexObj._storage.main);
    var branchData = indexObj._dataStorage(branchObj.storage.branchData);
    if (nowPage == 'shopcoupon-management') {
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            scm_id: id,
            managetype: 1,
            scm_title: '',
            scm_fulldescript: '',
            scm_category: '',
            scm_mainpic: '',
            scm_activepics: '',
            scm_price: '',
            scm_startdate: '',
            scm_enddate: '',
            scm_reservationtag: '',
            scm_dailystart: '',
            scm_dailyend: '',
            scm_workhour: '',
            scm_preparehour: '',
            scm_includeweekend: '',
            scm_reservationavailable: '',
            scm_member_limit: '',
            scm_balanceno: ''
        };

        if (status) {
            data.scm_poststatus = '0';
            data.md_securitycode = '';
            branchObj.shopcouponmanager(data);
        } else {
            data.scm_poststatus = '1';
            if (mainSg.md_seccode_created === '1') {
                indexObj._dataCookies('shopcouponmanager_data', data);
                memberseccode('verify');
            } else {
                myApp.modal({
                    title: stringObj.text.warn,
                    text: stringObj.text.no_set_memberseccode,
                    buttons: [{
                        text: stringObj.text.cancel,
                        onClick: function() {}
                    }, {
                        text: stringObj.text.to_set,
                        onClick: function() {
                            memberseccode('set');
                        }
                    }]
                });
            }
        }

    } else if (nowPage == 'shopservice-setting') {
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            sd_id: branchData.sd_id,
            action_type: 1,
            ssqd_id: id,
            ssqd_title: '',
            ssqd_content: '',
            ssqd_mainpic: '',
            ssqd_workhour: '',
            ssqd_serviceprice: '',
            ssqd_effectivity: '',
            ssqd_maxqueueamount: ''
        };

        if (status) {
            data.ssqd_effectivity = '0';
        } else {
            data.ssqd_effectivity = '1';
        }

        //console.log(JSON.stringify(data));

        branchObj.shopservicemanage(data);
    }


};


/**
 * 新增/更新圖片
 * @param type 圖片類型
 * @param filePath 檔案路徑
 */
addImage = function(type, filePath) {

    //console.log(filePath);

    nowAddImgType = type;
    nowEditFilePath = filePath;
    var mainSg = indexObj._dataCookies(indexObj._storage.main);
    var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
    var folder;
    var id;
    /*if (branchData.sd_id) {
     id = branchData.sd_id
     }*/
    var FTP_PATH = branchObj.dataUrl.FTP_PATH_BRANCH + '/temporary';
    if (type === 'branch-img') {
        folder = 'maincover';
        id = branchData.sd_id;
    } else if (type === 'branch-service') {
        folder = 'shopservice';
        id = branchData.sd_id;
    } else if (type === 'push-img') {
        folder = 'shoppush';
        id = branchData.sd_id;
    } else if (type === 'usedcar-main-img' || type === 'usedcar-sub-img' || type === 'usedcar-add-img' || type === 'usedcar-picscategory1-img' || type === 'usedcar-picscategory2-img' || type === 'usedcar-picscategory3-img') {
        FTP_PATH = usedCarObj.dataUrl.FTP_PATH_USEDCAR + '/temporary';
        if (mainSg.md_clienttype == '1' || mainSg.md_clienttype == '99') {
            folder = 'sd';
            id = branchData.sd_id;
        } else if (mainSg.md_clienttype == '0') {
            folder = 'md';
            id = mainSg.mdId;
        }
    } else if (type == 'club-logo') {
        folder = 'head_badge';
        id = mainSg.clubdata.ccd_id;
        FTP_PATH = carClubObj.dataUrl.FTP_PATH_CARCLUB + '/temporary';
    } else if (type === 'mycar-main-img' || type === 'mycar-sub-img' || type === 'mycar-add-img') {
        folder = 'md_id';
        id = mainSg.mdId;
        FTP_PATH = myCarObj.dataUrl.FTP_PATH_MYCAR + '/temporary';
    } else if (type === 'shopcontent') {
        folder = 'shopcontent';
        id = branchData.sd_id;
    } else if (type === 'report') {
        folder = 'shopcoupon/' + now_scm_id + '/pick_pack/' + now_scl_id;
        id = branchData.sd_id;
    } else {
        folder = 'shopcoupon';
        id = branchData.sd_id;
    }



    myApp.modal({
        title: '請選擇上傳方式',
        text: '<div class="list-block media-list" style="margin-top: 4%;margin-bottom: 0;">' +
            '<ul style="background:none;">' +
            '<li class="branchCamera" style="border-bottom: 1px dashed #ccc;">' +
            '<div class="item-content">' +
            '<div class="item-media"><i class="fa fa-camera-retro" style="color: darkslateblue;font-size: 16pt;"></i></div>' +
            '<div class="item-inner">' +
            '<div class="item-title-row">' +
            '<div class="item-title">拍照上傳</div>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</li>' +
            '<li class="localImage" style="border-bottom: 1px dashed #ccc;">' +
            '<div class="item-content">' +
            '<div class="item-media"><i class="fa fa-picture-o" aria-hidden="true"  style="color: darkgreen;font-size: 16pt;"></i></div>' +
            '<div class="item-inner">' +
            '<div class="item-title-row">' +
            '<div class="item-title">本地圖片上傳</div>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</li>' +
            '<li class="removeImage">' +
            '<div class="item-content">' +
            '<div class="item-media"><i class="fa fa-trash-o" aria-hidden="true"  style="color: darkred;font-size: 16pt;"></i></div>' +
            '<div class="item-inner">' +
            '<div class="item-title-row">' +
            '<div class="item-title">&nbsp;刪除</div>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</li>' +
            '</ul>' +
            '</div>',
        buttons: [{
            text: stringObj.text.cancel,
            onClick: function() {

            }
        }]
    });

    //拍照上傳
    $('.branchCamera').click(function() {
        var date = new Date();
        var month = (date.getMonth() + 1);
        var dates = date.getDate();
        var hours = date.getHours();
        var min = date.getMinutes();
        var sec = date.getSeconds();
        if (month < 10) {
            month = '0' + month;
        }
        if (dates < 10) {
            dates = '0' + dates;
        }
        if (hours < 10) {
            hours = '0' + hours;
        }
        if (min < 10) {
            min = '0' + min;
        }
        if (sec < 10) {
            sec = '0' + sec;
        }
        if (type === 'shopcontent') {
            localStorage.setItem('back_url', window.location.href);
            localStorage.setItem('scrollTop', $('.branch-info-edit-content').scrollTop() + 70);
        }
        if (type === 'shopcoupon') {
            localStorage.setItem('back_url', window.location.href);
            localStorage.setItem('scrollTop', $('.' + nowPage + '-content').scrollTop() + 70);
        }
        var filename = '' + date.getFullYear() + month + dates + hours + min + sec;
        if (type == 'usedcar-main-img' || type == 'usedcar-sub-img' || type == 'usedcar-add-img' || type == 'usedcar-picscategory1-img' || type == 'usedcar-picscategory2-img' || type == 'usedcar-picscategory3-img' || type == 'mycar-main-img' || type == 'mycar-sub-img' || type == 'mycar-add-img') {
            webview.branchCamera(branchObj.dataUrl.FTP_HOST, FTP_PATH, folder, id, filename);
        } else {
            webview.branchCamera(branchObj.dataUrl.FTP_HOST, FTP_PATH, id, folder, filename);
        }
        myApp.closeModal();
    });

    //本地圖片上傳
    $('.localImage').click(function() {
        var date = new Date();
        var month = (date.getMonth() + 1);
        var dates = date.getDate();
        var hours = date.getHours();
        var min = date.getMinutes();
        var sec = date.getSeconds();
        if (month < 10) {
            month = '0' + month;
        }
        if (dates < 10) {
            dates = '0' + dates;
        }
        if (hours < 10) {
            hours = '0' + hours;
        }
        if (min < 10) {
            min = '0' + min;
        }
        if (sec < 10) {
            sec = '0' + sec;
        }
        if (type === 'shopcontent') {
            localStorage.setItem('back_url', window.location.href);
            localStorage.setItem('scrollTop', $('.branch-info-edit-content').scrollTop() + 70);
        }
        if (type === 'shopcoupon') {
            localStorage.setItem('back_url', window.location.href);
            localStorage.setItem('scrollTop', $('.' + nowPage + '-content').scrollTop() + 70);
        }
        var filename = '' + date.getFullYear() + month + dates + hours + min + sec;
        if (type == 'usedcar-main-img' || type == 'usedcar-sub-img' || type == 'usedcar-add-img' || type == 'usedcar-picscategory1-img' || type == 'usedcar-picscategory2-img' || type == 'usedcar-picscategory3-img' || type == 'mycar-main-img' || type == 'mycar-sub-img' || type == 'mycar-add-img') {
            webview.localImage(branchObj.dataUrl.FTP_HOST, FTP_PATH, folder, id, filename);
        } else {
            webview.localImage(branchObj.dataUrl.FTP_HOST, FTP_PATH, id, folder, filename);
        }
        myApp.closeModal();
    });

    if (type == 'main-img' || filePath == '' || type == 'branch-img' || type == 'branch-service' || type == 'usedcar-main-img' || type == 'usedcar-add-img' || type == 'mycar-main-img' || type == 'mycar-add-img') {
        $('.removeImage').css('display', 'none');
        $('.localImage').css('border-bottom', '0');
    }

    //刪除圖片
    $('.removeImage').click(function() {
        myApp.closeModal();
        deleteImg(filePath);
    });
};


/**
 * 刪除圖片
 * @param filePath 檔案路徑
 */
deleteImg = function(filePath) {
    myApp.modal({
        title: stringObj.text.warn,
        text: '確定要刪除?',
        buttons: [{
            text: stringObj.text.cancel,
            onClick: function() {

            }
        }, {
            text: stringObj.text.confirm,
            onClick: function() {
                myApp.showPreloader('刪除中...');
                var branchData = indexObj._dataStorage(branchObj.storage.branchData);
                if (nowPage === 'shopcoupon-edit') {

                    if (branchData.shopcoupon_imgs.imgs.indexOf(filePath) !== -1) {
                        branchData.delete_imgs.push(filePath);
                        branchData.shopcoupon_imgs.imgs.splice(branchData.shopcoupon_imgs.imgs.indexOf(filePath), 1);
                        indexObj._dataStorage(branchObj.storage.branchData, branchData);
                    }

                    var commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
                    findAndRemove(commodity_data.scm_advancedescribe, 'content_img', filePath);
                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                    localStorage.setItem('scrollTop', $('.shopcoupon-edit-content').scrollTop());
                    localStorage.setItem('back_url', window.location.href);
                    deleteFinish('true');
                } else if (nowPage === 'used-car-add') {
                    var usedCarData = indexObj._dataStorage(usedCarObj.storage.usedCarData);
                    switch (nowAddImgType) {
                        case 'usedcar-sub-img':
                            usedCarData.used_car_imgs.imgs.splice(usedCarData.used_car_imgs.imgs.indexOf(filePath), 1);
                            break;
                        case 'usedcar-picscategory1-img':
                            usedCarData.used_car_imgs.picscategory1 = '';
                            break;
                        case 'usedcar-picscategory2-img':
                            usedCarData.used_car_imgs.picscategory2 = '';
                            break;
                        case 'usedcar-picscategory3-img':
                            usedCarData.used_car_imgs.picscategory3 = '';
                            break;
                    }
                    indexObj._dataStorage(usedCarObj.storage.usedCarData, usedCarData);
                    deleteFinish('true');
                } else if (nowPage === 'my-car-info-edit') {
                    var myCarData = indexObj._dataStorage(myCarObj.storage.myCarData);
                    myCarData.my_car_imgs.imgs.splice(myCarData.my_car_imgs.imgs.indexOf(filePath), 1);
                    indexObj._dataStorage(myCarObj.storage.myCarData, myCarData);
                    deleteFinish('true');
                } else if (nowPage === 'branch-info-edit') {
                    var shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};
                    findAndRemove(shop_data.sd_advancedata, 'content_img', filePath);
                    indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
                    localStorage.setItem('scrollTop', $('.branch-info-edit-content').scrollTop());
                    localStorage.setItem('back_url', window.location.href);
                    /*if (app_version) {
                     if (isMobile.Android()) {
                     webview.deleteFileFromFTP(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, filePath);
                     } else if (isMobile.iOS()) {
                     var filePaths = [];
                     filePaths.push(filePath);
                     webview.deleteFileFromFTP(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, filePaths);
                     }
                     } else {
                     deleteFinish('true');
                     }*/
                    deleteFinish('true');
                } else if (nowPage === 'add-shopcoupon') {
                    var commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
                    findAndRemove(commodity_data.scm_advancedescribe, 'content_img', filePath);
                    indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);
                    localStorage.setItem('scrollTop', $('.add-shopcoupon-content').scrollTop());
                    localStorage.setItem('back_url', window.location.href);
                    /*if (app_version) {
                     if (isMobile.Android()) {
                     webview.deleteFileFromFTP(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, filePath);
                     } else if (isMobile.iOS()) {
                     var filePaths = [];
                     filePaths.push(filePath);
                     webview.deleteFileFromFTP(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, filePaths);
                     }
                     } else {
                     deleteFinish('true');
                     }*/
                    deleteFinish('true');
                } else {
                    if (isMobile.Android()) {
                        webview.deleteFileFromFTP(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, filePath);
                    } else if (isMobile.iOS()) {
                        var filePaths = [];
                        filePaths.push(filePath);
                        webview.deleteFileFromFTP(branchObj.dataUrl.FTP_HOST, branchObj.dataUrl.FTP_PATH_BRANCH, filePaths);
                    }

                    branchData.shopcoupon_imgs.imgs.splice(branchData.shopcoupon_imgs.imgs.indexOf(filePath), 1);
                    indexObj._dataStorage(branchObj.storage.branchData, branchData);
                }



            }
        }]
    });

};


/**
 * 刪除圖片後
 * @param isSuccess 是否成功
 */
deleteFinish = function(isSuccess) {
    myApp.hidePreloader();
    if (isSuccess == 'true') {
        //myApp.toast(stringObj.text.delete_success, '', {}).show();
        if (nowPage == 'used-car-add') {
            myApp.toast(stringObj.text.delete_success, '', {}).show();
            var usedCarData = indexObj._dataStorage(usedCarObj.storage.usedCarData);
            if (usedCarData.used_car_imgs.main != '') {
                usedCarSwiper.removeAllSlides();
                usedCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.main + '" onerror=\'this.src="../app/image/imgDefault.png"\' />   </div>');
            }
            if (usedCarData.used_car_imgs.imgs.length > 0) {
                for (var i in usedCarData.used_car_imgs.imgs) {
                    usedCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.imgs[i] + '" onerror=\'this.src="../app/image/imgDefault.png"\' />   </div>');
                }
            }

            if (usedCarData.used_car_imgs.main != '' && usedCarData.used_car_imgs.imgs.length < 20) {
                usedCarSwiper.appendSlide('<div class="swiper-slide"><img src="../app/image/imgDefault.png" onerror=\'this.src="../app/image/imgDefault.png"\' /></div>');
            }


            usedCarSwiper.slideTo(usedCarData.used_car_imgs.imgs.length, 0, true);


            if (usedCarData.used_car_imgs.main != '') {
                $('.img-index').html((usedCarData.used_car_imgs.imgs.length + 1) + '/' + (usedCarData.used_car_imgs.imgs.length + 2));
            } else {
                $('.img-index').html((usedCarData.used_car_imgs.imgs.length + 1) + '/' + 1);
            }

            if (usedCarData.used_car_imgs.picscategory1 != '') {
                $('.picscategory1').attr('src', stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.picscategory1);
            } else {
                $('.picscategory1').attr('src', '../app/image/add-img.png');
            }
            if (usedCarData.used_car_imgs.picscategory2 != '') {
                $('.picscategory2').attr('src', stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.picscategory2);
            } else {
                $('.picscategory2').attr('src', '../app/image/add-img.png');
            }
            if (usedCarData.used_car_imgs.picscategory3 != '') {
                $('.picscategory3').attr('src', stringObj.text.usedcar_img_path + usedCarData.used_car_imgs.picscategory3);
            } else {
                $('.picscategory3').attr('src', '../app/image/add-img.png');
            }

        } else if (nowPage == 'my-car-info-edit') {
            myApp.toast(stringObj.text.delete_success, '', {}).show();
            var myCarData = indexObj._dataStorage(myCarObj.storage.myCarData);
            if (myCarData.my_car_imgs.main != '') {
                myCarSwiper.removeAllSlides();
                myCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.mycar_img_path + myCarData.my_car_imgs.main + '" onerror=\'this.src="../app/image/imgDefault.png"\' />   </div>');
            }
            if (myCarData.my_car_imgs.imgs.length > 0) {
                for (var i in myCarData.my_car_imgs.imgs) {
                    myCarSwiper.appendSlide('<div class="swiper-slide"><img src="' + stringObj.text.mycar_img_path + myCarData.my_car_imgs.imgs[i] + '" onerror=\'this.src="../app/image/imgDefault.png"\' />   </div>');
                }
            }

            if (myCarData.my_car_imgs.main != '' && myCarData.my_car_imgs.imgs.length < 20) {
                myCarSwiper.appendSlide('<div class="swiper-slide"><img src="../app/image/imgDefault.png" onerror=\'this.src="../app/image/imgDefault.png"\' /></div>');
            }


            myCarSwiper.slideTo(myCarData.my_car_imgs.imgs.length, 0, true);


            if (myCarData.my_car_imgs.main != '') {
                $('.img-index').html((myCarData.my_car_imgs.imgs.length + 1) + '/' + (myCarData.my_car_imgs.imgs.length + 2));
            } else {
                $('.img-index').html((myCarData.my_car_imgs.imgs.length + 1) + '/' + 1);
            }

        } else if (nowPage === 'branch-info-edit') {
            saveShopData();
            mainView.router.load({
                url: localStorage.getItem('back_url').substring(localStorage.getItem('back_url').indexOf("#!/") + 3),
                reload: true
            });
            localStorage.removeItem('back_url');
        } else if (nowPage === 'add-shopcoupon' || nowPage === 'shopcoupon-edit') {
            saveData();
            mainView.router.load({
                url: localStorage.getItem('back_url').substring(localStorage.getItem('back_url').indexOf("#!/") + 3),
                reload: true
            });
            localStorage.removeItem('back_url');
        } else if (nowPage === 'message-info') {
            localStorage.removeItem(branchObj.storage.imagePath);
            $('.push-img-block img').attr('src', '../app/image/imgDefault.png');
            $('.edit-img').unbind('click');
            $('.edit-img').click(function() {
                if (Cookies.get('app_version') !== undefined) {
                    addImage('push-img', '');
                } else {
                    setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shoppush', '');
                }
            });
        } else {
            $$('.image-block .container').html('');
            var branchData = indexObj._dataStorage(branchObj.storage.branchData);
            if (branchData.shopcoupon_imgs.main != '') {
                //$$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '" onclick="addImage(\'main-img\',\'' + branchData.shopcoupon_imgs.main + '\')"/><div class="main-lable">' + stringObj.text.front_cover + '</div></div>');
                $$('.image-block .container').html('<div class="main-image-block"><img class="main lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.main + '"/><div class="main-lable">封面</div></div>');
                $('.main-image-block').click(function() {
                    if (isMobile.Android() || isMobile.iOS()) {
                        addImage('main-img', branchData.shopcoupon_imgs.main);
                    } else {
                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=main', '');
                    }
                });
            }
            if (branchData.shopcoupon_imgs.imgs.length > 0) {
                /*for (var i in branchData.shopcoupon_imgs.imgs) {
                 $$('.image-block .container').append('<div class="sub-image-block"><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" onclick="addImage(\'sub-img\',\'' + branchData.shopcoupon_imgs.imgs[i] + '\')"/></div>');
                 }*/
                for (var i in branchData.shopcoupon_imgs.imgs) {
                    //$$('.image-block .container').append('<div class="sub-image-block"><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" onclick="addImage(\'sub-img\',\'' + branchData.shopcoupon_imgs.imgs[i] + '\')"/></div>');
                    $$('.image-block .container').append('<div class="sub-image-block" position=' + i + '><img class="lazy" data-src="' + stringObj.text.branch_img_path + branchData.shopcoupon_imgs.imgs[i] + '" /></div>');
                }
                $('.sub-image-block').click(function() {
                    //console.log($(this).attr('position'));
                    //console.log(parseInt($(this).attr('position')));
                    if (isMobile.Android() || isMobile.iOS()) {
                        addImage('sub-img', branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                    } else {
                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=' + $(this).attr('position'), branchData.shopcoupon_imgs.imgs[parseInt($(this).attr('position'))]);
                    }
                });
            }
            if (branchData.shopcoupon_imgs.imgs.length < 5) {
                //$$('.image-block .container').append('<div class="image-item" onclick="addImage(\'sub-img\',\'\')">+</div>');
                $$('.image-block .container').append('<div class="image-item">+</div>');
                $('.image-item').click(function() {
                    if (isMobile.Android() || isMobile.iOS()) {
                        addImage('sub-img', '');
                    } else {
                        setImgOnPC('sd_id=' + branchData.sd_id + '&folder=shopcoupon&type=sub&position=add', '');
                    }
                });
            }
        }

        myApp.initImagesLazyLoad('.page-content');
    } else {
        myApp.alert(stringObj.text.delete_fail, stringObj.text.warn);
    }

};


/**
 * 活動券棄用
 * @param scm_id 活動主檔編號
 * @param scg_id 活動編號
 */
shopCouponAbandon = function(scm_id, scg_id) {

    $$('.swipeout-' + scg_id).on('deleted', function() {

        var reason = stringObj.text.abandon_reason;
        var reasonItem = "";
        for (var i in reason) {
            if (i == 0) {
                reasonItem +=
                    '<li>' +
                    '<label class="label-radio item-content">' +
                    '<input type="radio" name="reasonlist" value="' + i + '" checked>' +
                    '<div class="item-inner">' +
                    '<div class="item-title-row">' +
                    '<div class="item-title"><b>' + reason[i] + '</b></div>' +
                    '</div>' +
                    '</div>' +
                    '</label>' +
                    '</li>';
            } else {
                reasonItem +=
                    '<li>' +
                    '<label class="label-radio item-content">' +
                    '<input type="radio" name="reasonlist" value="' + i + '">' +
                    '<div class="item-inner">' +
                    '<div class="item-title-row">' +
                    '<div class="item-title"><b>' + reason[i] + '</b></div>' +
                    '</div>' +
                    '</div>' +
                    '</label>' +
                    '</li>';
            }

        }

        myApp.modal({
            title: '理由',
            text: '<div class="list-block media-list">' +
                '<ul id="reasonlist">' + reasonItem + '</ul>' +
                '</div>',
            buttons: [{
                text: stringObj.text.confirm,
                onClick: function() {
                    checkReason = $('input[name="reasonlist"]:checked').val();

                    myApp.showIndicator();

                    var mainSg = indexObj._dataCookies(indexObj._storage.main);

                    var data = {
                        modacc: stringObj.shop.moduleaccount,
                        modvrf: Cookies.get('modvrf'),
                        sat: mainSg.sat,
                        scm_id: scm_id,
                        scg_id: scg_id,
                        scg_abandomreason: checkReason
                    };

                    //console.log(JSON.stringify(data));

                    indexObj._wcfget({
                        url: branchObj.dataUrl.shopcouponabandon,
                        para: data,
                        success: function(r) {
                            if (r.shopcouponabandonresult) {
                                indexObj.jsonUrlDecode(r);
                                //console.log(JSON.stringify(r));
                                var rObj = JSON.parse(JSON.stringify(r.shopcouponabandonresult));
                                switch (rObj.message_no) {
                                    case '010909000':

                                        var alarmInfo = indexObj._dataStorage(branchObj.storage.alarmInfo) || {
                                            alarmInfoArray: []
                                        };
                                        var alarmCheckObj = JSON.parse(localStorage.getItem('alarmCheck')) || {
                                            alarmCheckArray: []
                                        };
                                        if (alarmInfo.alarmInfoArray.length > 0) {
                                            nowIndex = -1;
                                            findArrayItem(alarmInfo.alarmInfoArray, 'id', scg_id);
                                            if (nowIndex >= 0) {
                                                //console.log(JSON.stringify(alarmInfo.alarmInfoArray));
                                                //console.log(scg_id);
                                                //console.log(alarmInfo.alarmInfoArray[nowIndex].alarmIndex);
                                                webview.closeAlarm(alarmInfo.alarmInfoArray[nowIndex].alarmIndex, scg_id);
                                                findAndRemove(alarmInfo.alarmInfoArray, 'id', scg_id);
                                                indexObj._dataStorage(branchObj.storage.alarmInfo, alarmInfo);
                                                alarmCheckObj.alarmCheckArray.splice(alarmCheckObj.alarmCheckArray.indexOf(scg_id), 1);
                                                indexObj._dataStorage('alarmCheck', alarmCheckObj);
                                                //console.log(JSON.stringify(alarmInfo.alarmInfoArray));
                                                //console.log(JSON.stringify(alarmCheckObj.alarmCheckArray));
                                            }
                                        }

                                        var shopCouponRecord = indexObj._dataStorage(branchObj.storage.shopCouponRecord);
                                        findAndRemove(shopCouponRecord.availableList, 'scg_id', scg_id);
                                        indexObj._dataStorage(indexObj._storage.shopCouponRecord, shopCouponRecord);
                                        break;
                                    default:
                                        stringObj.return_header(rObj.message_no);
                                        break;
                                }
                                if (_tip) {
                                    myApp.alert(_tip + '( ' + rObj.message_no + ' )', stringObj.text.warn);
                                    _tip = null;
                                }

                            }
                            mainView.router.load({
                                url: 'coupon-record?tab=shop-coupon',
                                reload: true
                            });

                            myApp.hideIndicator();
                        },
                        error: function(r) {
                            //var error = $.evalJSON(r.responseText);
                            myApp.hideIndicator();
                            //console.log('Error : ' + JSON.stringify(r.responseText));
                            noNetwork();
                        }
                    });
                }
            }]
        })
        $('.modal').css("height", "60%");
        $('.modal-title+.modal-text').css("height", "89%");
        $('.modal-title+.modal-text').css("overflow-y", "auto");
        $('.modal .list-block').css("margin", "3% 0");
        $('.modal-inner').css("background", "#FFF");
        $('.modal .item-text').css("text-align", "left");
        $('.media-list li').css("border-bottom", "1px solid #DDD");


    });

};


/**
 * 商家留言回覆
 * @param sqna_id 問卷填寫記錄編號
 * @param sqnr_id 商家回覆留言編號
 * @param sqnr_responsemessage 回覆訊息內容
 * @param activetype 操作動作 0:新增 1:更新 2:刪除
 */
branchReply = function(sqna_id, sqnr_id, sqnr_responsemessage, activetype) {

    var mainSg = indexObj._dataCookies(indexObj._storage.main);
    var branchData = indexObj._dataStorage(branchObj.storage.branchData);

    if (activetype == '2') {
        $$('.swipeout-' + sqnr_id).on('deleted', function() {
            var data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                sd_id: branchData.sd_id,
                sqna_id: sqna_id,
                sqnr_id: sqnr_id,
                activetype: activetype,
                sqnr_responsemessage: ''
            };
            branchObj.shopquestionnaire_response(data);
        });
        if (window.location.href.match('webend_admin')) {

            myApp.modal({
                title: stringObj.text.warn,
                text: stringObj.text.check_delete,
                buttons: [{
                    text: stringObj.text.cancel,
                    onClick: function() {}
                }, {
                    text: stringObj.text._delete,
                    onClick: function() {
                        var data = {
                            modacc: stringObj.shop.moduleaccount,
                            modvrf: Cookies.get('modvrf'),
                            sat: mainSg.sat,
                            sd_id: branchData.sd_id,
                            sqna_id: sqna_id,
                            sqnr_id: sqnr_id,
                            activetype: activetype,
                            sqnr_responsemessage: ''
                        };
                        branchObj.shopquestionnaire_response(data);
                    }
                }, ]
            });

        }
    } else {

        myApp.modal({
            title: stringObj.text.sqna_message,
            text: '<textarea class="sqna_msg resizable" rows="9" placeholder="' + stringObj.text.input_limit70 + '" onkeyup="this.value = this.value.slice(0, 70)"></textarea>',
            buttons: [{
                text: stringObj.text.cancel,
                onClick: function() {

                }
            }, {
                text: stringObj.text.confirm,
                onClick: function() {
                    var data = {
                        modacc: stringObj.shop.moduleaccount,
                        modvrf: Cookies.get('modvrf'),
                        sat: mainSg.sat,
                        sd_id: branchData.sd_id,
                        sqna_id: sqna_id,
                        sqnr_id: sqnr_id,
                        activetype: activetype,
                        sqnr_responsemessage: $('.sqna_msg').val()
                    };
                    branchObj.shopquestionnaire_response(data);
                }
            }]
        });


        $('.sqna_msg').val(sqnr_responsemessage);

        $('textarea.sqna_msg').focus();


    }


};


/**
 * 用戶排隊
 * @param ssqd_id 服務編號
 */
queue = function(ssqd_id) {

    var popupHTML = '<div class="popup queue-popup">' +
        '<div class="navbar">' +
        '<div class="navbar-inner">' +
        '<div class="left sliding queue-left">' +
        '<a href="#" class="link icon-only close-popup">' +
        '<span class="icon-chevron-left"></span>' +
        '</a>' +
        '</div>' +
        '<div class="center sliding">' + stringObj.text.service_queue + '</div>' +
        '<div class="right queue-right">' +
        '</div>' +
        '</div>' +
        '</div>' +
        '<div class="queue-block">' +
        '<div class="row no-gutter">' +
        '<div class="col-20">款式：</div>' +
        '<div class="col-80">' +
        '<input type="text" class="carModels" placeholder="請選擇廠牌型號" readonly/>' +
        '</div>' +
        '</div>' +
        '<div style="margin: 4% 0;">備註：</div>' +
        '<textarea class="queremark" placeholder="內容訊息"></textarea>' +
        '<a href="#" class="button queue-btn">排隊</a>' +
        '</div>' +
        '</div>';
    myApp.popup(popupHTML);


    carModelArray = carModels.Alfa_Romeo[1];


    var branchRegion = myApp.picker({
        input: '.carModels',
        rotateEffect: false,
        toolbarTemplate: '<div class="toolbar">' +
            '<div class="toolbar-inner">' +
            '<div class="left">' +
            '<a href="#" class="link close-picker"></a>' +
            '</div>' +
            '<div class="right">' +
            '<a href="#" class="link close-picker"><i class="fa fa-check" aria-hidden="true"></i></a>' +
            '</div>' +
            '</div>' +
            '</div>',
        formatValue: function(p, values, displayValues) {
            return values[0] + '  ' + values[1];
        },
        cols: [{
                textAlign: 'left',
                width: 180,
                values: ["Alfa_Romeo", "Aston_Martin", "Audi", "Bentley", "BMW", "Bugatti", "Buick", "Cadillac", "Chery", "Chrysler", "Citroen", "CMC", "Daihatsu", "DS", "Ferrari", "Fiat", "Ford", "Honda", "Hyundai", "Infiniti", "IVECO", "Jaguar", "Kia", "Lamborghini", "Land Rover", "Lexus", "Lotus", "Luxgen", "Maserati", "Mazda", "McLaren", "Mercedes_Benz", "Mini", "Mitsubishi", "Morgan", "Nissan", "Opel", "Peugeot", "Porsche", "Proton", "Renault", "Rolls_Royce", "Skoda", "Smart", "Ssangyong", "Subaru", "Suzuki", "Tesla", "Tobe", "Toyota", "Volkswagen", "Volvo"],
                onChange: function(picker, carbrand) {
                    if (picker.cols[1].replaceValues) {
                        picker.cols[1].replaceValues(carModels[carbrand][0]);
                        carModelArray = carModels[carbrand][1];
                    }
                }
            },

            {

                values: carModels.Alfa_Romeo[0],
                width: 180,
                onChange: function(picker, carmodel) {
                    modelIndex = picker.cols[1].activeIndex;
                }
            },
        ]
    });



    $('.queue-btn').click(function() {
        myApp.closeModal('.queue-popup');
        var mainSg = indexObj._dataCookies(indexObj._storage.main);
        var data = {
            modacc: stringObj.shop.moduleaccount,
            modvrf: Cookies.get('modvrf'),
            sat: mainSg.sat,
            ssqd_id: ssqd_id,
            ci_serno: carModelArray[modelIndex],
            ssqq_queremark: $('.queremark').val()
        };
        branchObj.shopservicequeask(data);
    });

};


/**
 * 商家叫號 過號 過號叫號
 * @param type 叫號類型(叫號 過號 過號叫號)
 * @param id 服務編號
 */
serviceCall = function(type, id) {

    switch (type) {
        case 'call':
            //商家叫號
            branchObj.shopservicecallup(id);
            break;
        case 'pass':
            //商家過號
            var nextNumObj = indexObj._dataStorage(branchObj.storage.nextNumObj) || [];
            if (nextNumObj.length > 0) {
                findArrayItem(nextNumObj, 'ssqd_id', id);
                branchObj.shopqueuenoshow(id, nextNumObj[nowIndex].ssqq_id);
            } else {
                myApp.alert(stringObj.shop.no_queue, stringObj.text.warn);
                //branchObj.shopqueuenoshow(id, '');
            }
            break;
        case 'overCall':
            //商家過號叫號
            branchObj.shopqueueovercall(id);
            break;
    }

};


/**
 * 用戶排隊服務放棄
 * @param ssqd_id 服務項目編號
 * @param ssqq_id 服務排隊編號
 */
shopServiceAbandon = function(ssqd_id, ssqq_id) {
    branchObj.shopservicequeabandom(ssqd_id, ssqq_id);
};

/**
 * 前往商家主頁
 * @param smb_shoptype 商家類型
 * @param sd_id 商家編號
 * @param sd_shopname 商家編號
 */
toBranch = function(smb_shoptype, sd_id, sd_shopname) {
    var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
    branchData.sd_id = sd_id;
    branchData.sd_shopname = sd_shopname;
    branchData.smb_shoptype = smb_shoptype;
    indexObj._dataStorage(branchObj.storage.branchData, branchData);

    switch (smb_shoptype) {
        case '0':
            mainView.router.load({
                url: 'shop/branch-main?sd_id=' + sd_id,
                reload: true
            });
            break;
        case '1':
            mainView.router.load({
                url: 'shop/branch-main?sd_id=' + sd_id,
                reload: true
            });
            // mainView.router.load({
            //     url: 'used-car/publish-management?sd_id=' + sd_id,
            //     reload: true
            // });
            break;
        case '99':
            if (sd_id) {
                branchData.sd_id = sd_id;
                branchData.sd_type = 'shop';
                indexObj._dataStorage(branchObj.storage.branchData, branchData);
            }
            mainView.router.load({
                url: 'shop/branch-info-edit?sd_id=' + sd_id,
                reload: true
            });
            break;
    }

};


/**
 * 付費項目
 * @param type 付費類型
 * @param title 商家名稱
 * @param cbi_id 車輛資料編號
 * @param shopdata 開店資訊
 */
pay_list = function(type, title, cbi_id, shopdata) {
    var data;
    var dcil_list;
    switch (type) {
        case '0':
            dcil_list = stringObj.used_car.dcil_list_json0;
            data = shopdata;
            break;
        case '2':
            var mainSg = indexObj._dataCookies(indexObj._storage.main);
            var branchData = indexObj._dataStorage(branchObj.storage.branchData);
            dcil_list = stringObj.used_car.dcil_list_json1;
            data = {
                modacc: stringObj.shop.moduleaccount,
                modvrf: Cookies.get('modvrf'),
                sat: mainSg.sat,
                md_clienttype: type,
                sd_id: branchData.sd_id,
                cbi_id: cbi_id,
                dcil_id: ''
            };
            break;
    }
    var dcil_list_item = "";
    for (var i in dcil_list) {
        if (i === '0') {
            dcil_list_item +=
                '<li>' +
                '<label class="label-radio item-content">' +
                '<input type="radio" name="dcil_list" value="' + dcil_list[i].dcil_id + '" checked>' +
                '<div class="item-inner">' +
                '<div class="item-title-row">' +
                '<div class="item-title"><b>' + dcil_list[i].dcil_itemname + '</b></div>' +
                '<div class="item-after">' + dcil_list[i].dcil_depositamount + 'pt</div>' +
                '</div>' +
                '<div class="item-text">' + dcil_list[i].dcil_itemdescript + '</div>' +
                '</div>' +
                '</label>' +
                '</li>';
        } else {
            dcil_list_item +=
                '<li>' +
                '<label class="label-radio item-content">' +
                '<input type="radio" name="dcil_list" value="' + dcil_list[i].dcil_id + '">' +
                '<div class="item-inner">' +
                '<div class="item-title-row">' +
                '<div class="item-title"><b>' + dcil_list[i].dcil_itemname + '</b></div>' +
                '<div class="item-after">' + dcil_list[i].dcil_depositamount + 'pt</div>' +
                '</div>' +
                '<div class="item-text">' + dcil_list[i].dcil_itemdescript + '</div>' +
                '</div>' +
                '</label>' +
                '</li>';
        }

    }

    myApp.modal({
        title: stringObj.text.pay_list,
        text: '<div class="row no-gutter"><div class="col-20 note">名稱：</div><div class="col-80">' + title + '</div></div><div class="row no-gutter"><div class="col-35 note">' + stringObj.text.now_coin + '：</div><div class="col-65">' + 0 + '</div></div>',
        afterText: '<div class="dcil_list_block">' +
            '<div class="list-block media-list">' +
            '<ul id="reasonlist">' + dcil_list_item + '</ul>' +
            '</div>' +
            '</div>',
        buttons: [{
            text: stringObj.text.cancel,
            onClick: function() {

            }
        }, {
            text: stringObj.text.confirm,
            onClick: function() {
                data.dcil_id = $('input[name="dcil_list"]:checked').val();
                switch (type) {
                    case '0':
                        //開店申請
                        branchObj.postshopdata(data);
                        break;
                    case '2':
                        //刊登物件
                        usedCarObj.payusedcarpost(data);
                        break;
                }
            }
        }]
    })
    $('.modal').css("width", "300px");
    //$('.modal').css("height", "70%");
    if (browser_width > 330) {
        $('.modal').css("left", "47%");
    } else {
        $('.modal').css("left", "45%");
    }

    $('.modal-title+.modal-text').css("margin", "3% 0");
    $('.modal-title+.modal-text').css("text-align", "left");
    $('.modal-title+.modal-text .row').css("margin", "2% 0");
    $('.modal-title+.modal-text .row').css("padding", "0 15px");
    $('.modal-title+.modal-text .note').css("color", "darkslategray");
    $('.modal-title+.modal-text .col-35').css("width", "35%");
    $('.modal-title+.modal-text .col-65').css("width", "65%");
    $('.dcil_list_block').css("height", "80%");
    $('.dcil_list_block').css("overflow-y", "auto");

    $('.modal .list-block').css("margin", "1% 0");
    $('.modal-inner').css("background", "#FFF");
    $('.modal .item-text').css("text-align", "left");
    $('.media-list li').css("border-bottom", "1px solid #DDD");
    $('.item-after').css("color", "firebrick");

    //$('.modal').css("margin-top", "-60%");
    //$('.modal-inner').css("height", "80%");
};


/**
 * 選擇檔案圖片時瀏覽圖片
 */
readFile = function() {
    var file = this.files[0];
    var reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = function(e) {
        $('.popup .set-img-block').css('display', 'none');
        result.innerHTML = '<img id="pre-img" class="pre-img" src="' + this.result + '" alt="" height="' + img_height + '" width="' + img_width + '" />';

        //剪裁圖片設置
        var uploadCrop = $('.pre-img').croppie({
            enableExif: true,
            viewport: { //剪裁大小
                width: img_width,
                height: img_height
            },
            boundary: { //背景可見大小
                width: img_width,
                height: img_height
            }
        });
        $('.delete-btn').css('display', 'none');
        $('.upload-btn').css('display', 'none');
        $('.crop-btn').css('display', 'block');
        $('.crop-btn').click(function() {
            uploadCrop.croppie('result', {
                type: 'base64', //圖片輸出方式
                format: 'jpeg', //圖片格式
                quality: 0.8 //圖片質量
            }).then(function(html) {
                result.innerHTML = '<img id="pre-img" class="pre-img" src="' + html + '" alt="" height="' + img_height + '" width="' + img_width + '" />';
                $('.set-img-block').val(html);
                $('.crop-btn').css('display', 'none');
                $('.upload-btn').css('display', 'block');
            });
        });

    }
};


var img_width; //當前上傳圖片寬度
var img_height; //當前上傳圖片高度


/**
 * PC選擇圖片視窗
 * @param data 檔案資訊
 * @param filePath 檔案路徑
 */
setImgOnPC = function(data, filePath) {

    if (filePath) {
        var popupHTML = '<div class="popup">' +
            '<div class="close-btn">' +
            '<a href="#" class="close-popup">' +
            '<i class="fa fa-times" aria-hidden="true"></i>' +
            '</a>' +
            '</div>' +
            '<div class="title">' + stringObj.text.select_img + '</div>' +
            '<div class="content-block">' +
            '<form method="post" id="myForm" action="upload?' + data + '" enctype="multipart/form-data"><input type="file" name="file" id="file" class="set-img" accept="image/*"><input name="img" type="text" class="set-img-block" onclick="this.form.file.click();"><br><div id="result"><img id="pre-img" class="pre-img" src="' + stringObj.text.branch_img_path + filePath + '" /></div><br><input class="upload-btn" type="submit" name="submit" value="上傳" /></form><button class="crop-btn">剪裁</button><button class="delete-btn">刪除</button>' +
            '</div>' +
            '</div>';



    } else {
        var popupHTML = '<div class="popup">' +
            '<div class="close-btn">' +
            '<a href="#" class="close-popup">' +
            '<i class="fa fa-times" aria-hidden="true"></i>' +
            '</a>' +
            '</div>' +
            '<div class="title">' + stringObj.text.select_img + '</div>' +
            '<div class="content-block">' +
            '<form method="post" id="myForm" action="upload?' + data + '" enctype="multipart/form-data"><input type="file" name="file" id="file" class="set-img" accept="image/*"><input name="img" type="text" class="set-img-block" onclick="this.form.file.click();"><br><div id="result"></div><br><input class="upload-btn" type="submit" name="submit" value="上傳" /></form><button class="crop-btn">剪裁</button>' +
            '</div>' +
            '</div>';

    }

    myApp.popup(popupHTML);
    $('.upload-btn').click(function() {
        localStorage.setItem('back_url', window.location.href);
        if (nowPage === 'add-shopcoupon') {
            if ($('.add-shopcoupon-content').scrollTop() > 70) {
                localStorage.setItem('scrollTop', $('.add-shopcoupon-content').scrollTop() + 70);
            }
            saveData();
        } else if (nowPage === 'shopcoupon-edit') {
            if ($('.shopcoupon-edit-content').scrollTop() > 70) {
                localStorage.setItem('scrollTop', $('.shopcoupon-edit-content').scrollTop() + 70);
            }
            saveData();
        } else {
            localStorage.setItem('scrollTop', $('.branch-info-edit-content').scrollTop() + 70);
            saveShopData();
        }
    });


    $('.popup').addClass('set-img-popup');
    $('.set-img-block').css('height', ($('.set-img-block').width() / 8) * 5);

    img_width = $('.set-img-block').width();
    img_height = ($('.set-img-block').width() / 8) * 5;

    var result = document.getElementById("result");
    var input = document.getElementById("file");

    if (filePath) {
        $('.popup .set-img-block').css('display', 'none');
        $('.delete-btn').css('display', 'block');
        result.innerHTML = '<img id="pre-img" class="pre-img" src="' + stringObj.text.branch_img_path + filePath + '" alt="" height="' + img_height + '" width="' + img_width + '" />';
        //刪除圖片
        $('.delete-btn').click(function() {
            myApp.closeModal();
            deleteImg(filePath);
        });

    }

    if (typeof FileReader === 'undefined') {
        result.innerHTML = "Sorry, 瀏覽器不支持 FileReader";
        input.setAttribute('disabled', 'disabled');
    } else {
        input.addEventListener('change', readFile, false);
    }



};


/**
 * 後台汽車特店登出
 */
shopLogout = function() {

    myApp.modal({
        title: stringObj.text.warn,
        text: stringObj.text.logoutCheck,
        buttons: [{
            text: stringObj.text.cancel,
            onClick: function() {}
        }, {
            text: stringObj.text.confirm,
            onClick: function() {

                indexObj._dataStorage(indexObj._storage.branchData, null);
                indexObj._dataStorage(indexObj._storage.myFavorite, null);
                indexObj._dataStorage(indexObj._storage.mailList, null);
                indexObj._dataStorage(indexObj._storage.couponRecord, null);
                indexObj._dataStorage(indexObj._storage.shopCouponRecord, null);
                indexObj._dataStorage(indexObj._storage.shopServiceRecord, null);
                loginType = "";
                var mainSg = indexObj._dataCookies(indexObj._storage.main) || {};
                if (mainSg && mainSg.murId) {

                    if (mainSg.loginType === '0') {
                        var accessToken = mainSg.sso_token;
                    }

                    indexObj._dataCookies(indexObj._storage.main, {
                        murId: mainSg.murId
                    }, 'iscarmg.com');


                    mainSg = indexObj._dataCookies(indexObj._storage.main) || {
                        murId: mainSg.murId
                    };

                    var url = "http://" + stringObj.WEB_URL + "/Shop/webend_admin/login";


                    if (accessToken) {
                        //FB登出
                        //userMenuObj._dataStorage('fbInfo', null);
                        //window.location = "https://www.facebook.com/logout.php?next=" + url + "&access_token=" + accessToken;
                        window.open("https://www.facebook.com/logout.php?next=" + encodeURIComponent(url) + "&access_token=" + accessToken, '_self', false);
                    } else {
                        window.open(url, '_self', false);
                    }

                }



            }
        }]
    });


};

/**
 * 暫存商家資訊
 */
saveShopData = function() {

    if (nowPage === 'branch-info-edit') {
        var shop_data = indexObj._dataStorage(branchObj.storage.shop_data) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        shop_data.sd_shopname = $('.page:not(.cached) #branch-name').val();
        shop_data.sd_shoptel = $('.page:not(.cached) #branch-tel').val();
        shop_data.sd_zipcode = $('.page:not(.cached) .branchRegion').val();
        shop_data.sd_shopaddress = $('.page:not(.cached) #branch-address').val();
        shop_data.sd_weeklystart = $('.branchDate').val().substring(2, 3);
        shop_data.sd_weeklyend = $('.branchDate').val().substring(8, 9);
        shop_data.sd_dailystart = $('.branchTime').val().substring(0, 5);
        shop_data.sd_dailyend = $('.branchTime').val().substring(8, 13);
        shop_data.sd_shopphotopath = branchData.sd_shopphotopath || '';
        shop_data.sd_introtext = $('.page:not(.cached) #branch-info').val();
        shop_data.sd_contact_person = $('.page:not(.cached) #user-name').val();
        shop_data.sd_contact_tel = $('.page:not(.cached) #user-tel').val();
        shop_data.sd_contact_mobile = $('.page:not(.cached) #user-phone').val();
        shop_data.sd_contact_address = $('.page:not(.cached) #user-address').val();
        shop_data.sd_contact_email = $('.page:not(.cached) #user-email').val();
        shop_data.sd_advancedata = shop_data.sd_advancedata || [];
        indexObj._dataStorage(branchObj.storage.shop_data, shop_data);
    }

};

//暫存資料
saveData = function() {

    if (nowPage === 'temple-info') {
        var save_data = indexObj._dataStorage(branchObj.storage.save_data) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        save_data.tps_invoice_name = $('.tps_invoice_name').val();
        save_data.tps_invoice_tel = $('.tps_invoice_tel').val();
        save_data.tps_invoice_area = $('.tps_invoice_area').val();
        save_data.tps_invoice_address = $('.tps_invoice_address').val();
        save_data.iscarpolicy = false;
        $('.temple-bright-light .iscarpolicy input:checked').each(function() {
            save_data.iscarpolicy = true;
        });
        indexObj._dataStorage(branchObj.storage.save_data, save_data);

        var blessed_relatives = indexObj._dataStorage(branchObj.storage.blessed_relatives) || {};
        for (var i in blessed_relatives.blessedlist) {
            blessed_relatives.blessedlist[i].tpp = [];
            $('.light-' + blessed_relatives.blessedlist[i].tpr_serno + ' input[name="light"]:checked').each(function() {
                findArrayItem(blessed_relatives.blessedlist, 'tpr_serno', blessed_relatives.blessedlist[i].tpr_serno);
                blessed_relatives.blessedlist[i].tpp.push({
                    tpp_serno: this.value,
                    tpp_name: $(this).attr('tpp_name'),
                    tpp_price: $(this).attr('tpp_price')
                });
            });
        }
        indexObj._dataStorage(branchObj.storage.blessed_relatives, blessed_relatives);

    } else if (nowPage === 'add-shopcoupon' || nowPage === 'shopcoupon-edit') {
        var commodity_data = indexObj._dataStorage(branchObj.storage.commodity_data) || {};
        var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
        commodity_data.scm_title = $('#shopcoupon-name').val();
        commodity_data.scm_fulldescript = $('#scm_fulldescript').val();
        commodity_data.scm_producttype = commodity_data.scm_producttype;
        commodity_data.scm_category = 0; //pickerType.value[0],
        commodity_data.scm_mainpic = branchData.shopcoupon_imgs.main;
        commodity_data.scm_activepics = JSON.stringify(branchData.shopcoupon_imgs.imgs);
        commodity_data.scm_price = $('#price').val();
        commodity_data.scm_startdate = $('#calendar-range').val().substring(0, 10);
        commodity_data.scm_enddate = $('#calendar-range').val().substring(13);
        commodity_data.scm_reservationtag = commodity_data.scm_reservationtag;
        commodity_data.scm_dailystart = $('#shopcoupon-time').val().substring(0, 5);
        commodity_data.scm_dailyend = $('#shopcoupon-time').val().substring(8);
        commodity_data.scm_workhour = ((parseInt($('#require-time').val().substring(0, 2)) * 60) + parseInt($('#require-time').val().substring(6, 8))) / 30;
        commodity_data.scm_preparehour = ((parseInt($('#prepare-time').val().substring(0, 2)) * 60) + parseInt($('#prepare-time').val().substring(6, 8))) / 30;
        commodity_data.scm_includeweekend = $("input[name='weekend-radio']:checked").val();
        commodity_data.scm_reservationavailable = $('#reserve-num').val();
        commodity_data.scm_poststatus = '';
        commodity_data.scm_member_limit = $('#limit').val();
        commodity_data.scm_balanceno = $('#scm_balanceno').val();
        commodity_data.scm_coupon_providetype = commodity_data.scm_coupon_providetype;
        commodity_data.scm_bonus_payamount = $('#scm_bonus_payamount').val();
        commodity_data.scm_bonus_giveafteruse = commodity_data.scm_bonus_giveafteruse;
        commodity_data.scm_bonus_giveamount = $('#scm_bonus_giveamount').val();
        commodity_data.scm_advancedescribe = commodity_data.scm_advancedescribe || [];

        indexObj._dataStorage(branchObj.storage.commodity_data, commodity_data);

    }

};

/**
 * 紅陽信用卡支付
 */
suntechbuysafe = function(data) {

    // var pay_info = {
    //     web: data.web, //*商店代號 紅陽交易系統僅阻擋同 Td 在同瀏覽器上的未完成交易。
    //     MN: data.scm_item_sum, //交易金額 不可有小數點和千位符號。(新台幣)
    //     OrderInfo: data.scm_item, //*交易內容 不可有特殊字元。包含：*'<>[]”
    //     Td: data.scg_id, //商家訂單編號
    //     sna: data.scg_buyername, //消費者姓名 不可有特殊字元。包含：*'<>[]”
    //     sdt: data.scg_buyermobile, //消費者電話 空白 or 純數字。
    //     email: '', //消費者 Email 空白 or 符合 Email 格式內容。交易成功時會發送成功訊息給消費者。
    //     note1: data.scl_receivername, //備註 1 不可有特殊字元。包含：*'<>[]”
    //     note2: data.scl_postcode, //備註 2 不可有特殊字元。包含：*'<>[]”
    //     Card_Type: 0, //交易類別 空白 or 0 信用卡交易、1 銀聯卡交易。
    //     Country_Type: '', //語言類別 空白 or EN(英文)、JIS(日文)。
    //     Term: '', //分期數 空白 or 3、6、12、24
    //     ChkValue: CryptoJS.SHA1(stringObj.SunTenchWeb + stringObj.SunTenchTransPwd + data.scm_item_sum + '').toString().toUpperCase() //*交易檢查碼 並使用「SHA-1 雜湊函數」取得組合字串的雜湊值(轉大寫)。
    // };

    data.esafe_path = esafe_path;
    //console.log(JSON.stringify(data));
    var temp = indexObj.template('templateEsafeInfoForm');
    var item = temp(data);
    $$('.pay-info-block').append(item);
    $('.scg_form').submit();

};

/**
 * 綠界支付
 */
ecpay = function(data) {

    //console.log(JSON.stringify(data));
    var temp = indexObj.template('templateEcpayInfoForm');
    var item = temp(data);
    $$('.pay-info-block').append(item);
    $('.scg_form').submit();

};


/**
 * 利用IP取得目前所在經緯度
 */
ipLocation = function() {
    $.getJSON("http://ip-api.com/json/?callback=?", function(data) {
        //console.log(JSON.stringify(data));
        nowLocation(data.lon, data.lat);
    });
};

/**
 * 目前所在經緯度
 * @param longitude 經度
 * @param latitude 緯度
 */
nowLocation = function(longitude, latitude) {
    //myApp.alert('目前位置:(' + longitude + ',' + latitude + ')', 'isCar');
    if (longitude !== undefined && longitude !== 0 && longitude !== '') {
        nowlat = latitude;
        nowlng = longitude;
    } else {
        nowlat = stringObj.text.default_lat;
        nowlng = stringObj.text.default_lng;
    }
    if (nowPage === 'map' || nowMode === 'map') {
        //if (longitude !== undefined && longitude !== 0 && longitude !== '') {
        var myLatlng = new google.maps.LatLng(nowlat, nowlng);

        //設定地圖參數
        var mapOptions = {
            zoom: 14, //初始放大倍數
            center: myLatlng, //預設中心經緯度
            mapTypeId: google.maps.MapTypeId.ROADMAP, //正常2D道路模式
            mapTypeControl: false, //切換地圖檢視類型的面板
            streetViewControl: false //街景服務的面板
        };

        //在指定DOM元素中嵌入地圖 document.getElementById("full_map")
        var map_block = $('.full_map');
        full_map = new google.maps.Map(map_block[0], mapOptions);

        full_map.setCenter(new google.maps.LatLng(nowlat, nowlng));
        Cookies.set('sd_lat', full_map.getCenter().lat());
        Cookies.set('sd_lng', full_map.getCenter().lng());
        if (markers.length > 0) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
        }
        markers = [];
        if (nowPage === 'map') {
            $('.search-btn').css('display', 'none');
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            branchObj.branchListGet('');
            //地圖滑動後
            full_map.addListener('dragend', function() {

                $('.search-btn').css('display', 'block');

            });
        } else if (nowMode === 'map') {
            branchObj.firstId = '';
            branchObj.listId = '';
            branchObj.listLoading = false;
            branchObj.distance = '';
            branchObj.branchListGet('');
        }

        if (my_marker) {
            my_marker.setMap(null);
        }

        //map marker icon
        var image = {
            url: 'app/image/user-marker.png'
        };

        //將目前位置新增至地圖
        my_marker = new google.maps.Marker({
            position: new google.maps.LatLng(nowlat, nowlng),
            map: full_map,
            title: 'Me',
            icon: image
        });
        /*} else {
            var search_result = indexObj._dataStorage(indexObj._storage.search_result) || {};
            if (search_result.sd_lat === undefined || search_result.sd_lat === '') {
                if (my_marker) {
                    my_marker.setMap(null);
                }
                noGpsModal();
            }
        }*/
    }

    if (nowPage === 'shop-search-result' || nowPage === 'branch-cooperative') {
        if (longitude === undefined || longitude === 0 || longitude === '') {
            noGpsModal();
            $(this).prop('checked', false);
            $(this).next().css('background', 'darkgray');
            $(this).next().css('color', '#000');
            $('.block-list input').removeAttr('disabled');
            $('.block-list input[type="checkbox"] + label').css('background', 'darkgray');
            $('.block-list input[type="checkbox"] + label').css('color', '#000');
        } else {
            if (nowPage === 'branch-cooperative') {
                /*var search_result = {};
                search_result.spm_serno = 2;
                search_result.sd_lat = nowlat || '';
                search_result.sd_lng = nowlng || '';
                search_result.sd_shopname = '';
                search_result.sd_country = '';
                indexObj._dataStorage(indexObj._storage.search_result, search_result);
                mainView.router.load({
                    url: 'around-search-result'
                });*/
                $.getJSON("http://ip-api.com/json/?callback=?", function(data) {
                    var search_result = {};
                    search_result.spm_serno = 2;
                    search_result.sd_lat = data.lat || '';
                    search_result.sd_lng = data.lon || '';
                    search_result.sd_shopname = '';
                    search_result.sd_country = '';
                    indexObj._dataStorage(indexObj._storage.search_result, search_result);
                    mainView.router.load({
                        url: 'around-search-result'
                    });
                });
            }
        }
    }
};

// 將數字三位一個點分開
thousandComma = function(number) {
    var num = number.toString();
    var pattern = /(-?\d+)(\d{3})/;
    while (pattern.test(num)) {
        num = num.replace(pattern, "$1,$2");
    }
    return num;
}

// 判斷當月有幾天
getDaysOfMonth = function(month, year) {
    if (month === 2) {
        if (year % 4 === 0) {
            return 29;
        } else {
            return 28;
        }
    } else {
        if (month < 8) {
            if (month % 2 === 1) {
                return 31;
            } else {
                return 30;
            }
        } else {
            if (month % 2 === 1) {
                return 30;
            } else {
                return 31;
            }
        }
    }
}


/**
 * 檢查統一編號格式
 * @tax_id 統一編號
 */
chkTaxId = function(tax_id) {

    var cx = new Array;
    cx[0] = 1;
    cx[1] = 2;
    cx[2] = 1;
    cx[3] = 2;
    cx[4] = 1;
    cx[5] = 2;
    cx[6] = 4;
    cx[7] = 1;

    var SUM = 0;
    if (tax_id.length !== 8) {
        //統編錯誤，要有 8 個數字
        return 'lengthError';
    }
    var cnum = tax_id.split("");
    for (i = 0; i <= 7; i++) {
        if (tax_id.charCodeAt() < 48 || tax_id.charCodeAt() > 57) {
            //統編錯誤，要有 8 個 0-9 數字組合
            return 'formatError';
        }
        SUM += cc(cnum[i] * cx[i]);
    }
    if (SUM % 10 == 0) return '00';
    else if (cnum[6] == 7 && (SUM + 1) % 10 == 0) return '00';
    else return 'formatError'; //統編格式錯誤

};
cc = function(n) {
    if (n > 9) {
        var s = n + "";
        n1 = s.substring(0, 1) * 1;
        n2 = s.substring(1, 2) * 1;
        n = n1 + n2;
    }
    return n;
};


//document start
$(document).ready(function() {
    $$(document).on('touchstart touchmove touchcancel touchend', '.branch-pager', branchObj._pageTouch);
    if (!isMobile.Android() && !isMobile.iOS()) {
        window.onbeforeunload = function() {
            indexObj._dataStorage(branchObj.storage.imagePath, null);
            //return 'Are you sure you want to leave?';
        };
    }
    //window.onbeforeunload = confirmExit;
});

/*function confirmExit() {
 var branchData = indexObj._dataStorage(branchObj.storage.branchData) || {};
 branchData.shopcoupon_imgs = {
 main: '',
 imgs: []
 };
 indexObj._dataStorage(branchObj.storage.branchData, branchData);
 }*/


//page start
$$(document).on('pageInit', function(e) {
    var page = e.detail.page;

    nowPage = page.name;

    if (browser_width > 992) {
        //美化scroll bar
        $(".page-content").niceScroll({
            cursorcolor: "rgba(100,100,100,.9)",
            cursoropacitymin: 0,
            cursorborder: "1px solid #000",
            scrollspeed: 20
        });
    }

    // $('.navbar .left').click(function() {
    //     //取得iOS GPS
    //     if (isMobile.iOS()) {
    //         webview.getLocation();
    //     }
    // });

    // var res = "瀏覽器是否支持Cookie?" + navigator.cookieEnabled;
    // console.log(res);

    if (page.name !== 'branch-info-edit') {
        indexObj._dataStorage(branchObj.storage.shop_data, null);
    }

    if (page.name !== 'add-shopcoupon' && page.name !== 'shopcoupon-edit') {
        indexObj._dataStorage(branchObj.storage.commodity_data, null);
    }

    if (page.name !== 'temple-table') {
        localStorage.removeItem('nowTab');
        indexObj._dataStorage('createblessreport', null);
        indexObj._dataStorage('createblesslightreport', null);
    }

    if (page.name === 'add-relatives' || page.name === 'relatives-list' || page.name === 'temple-info' || page.name === 'pay-info') {} else {
        indexObj._dataStorage(branchObj.storage.save_data, null);
    }

    if (nowPage !== 'map') {
        indexObj._dataStorage('shop_list', null);
    }

    if (nowPage !== 'shopcoupon-info') {
        localStorage.removeItem('pageInit');
    }

    if (nowPage !== 'branch-main') {
        indexObj._dataStorage('reservationinfo', null);
    }

    if (nowPage !== 'branch-reservation-record') {
        indexObj._dataStorage('reservationpaused_list', null);
    }

    switch (page.name) {
        case 'shop-salesoverview':
            branchObj.shopsalesoverview(page);
            break;
        case 'shop-menu':
            indexObj.shopMenuInit(page);
            break;
        case 'coupon-record':
            indexObj.couponRecordInit(page);
            userAvatarInit();
            break;
        case 'branch-main':
            branchObj.branchMainInit(page);
            userAvatarInit();
            break;
        case 'branch-info-edit':
            branchObj.branchInfoEditInit(page);
            $('.navbar .left').click(function() {
                indexObj._dataStorage(branchObj.storage.imagePath, null);
            });
            break;
        case 'branch-cooperative':
            indexObj._dataStorage('shop_item', null);
            //var search_result = indexObj._dataStorage(branchObj.storage.search_result, search_result) || '';
            if (!indexObj._dataStorage(branchObj.storage.search_result)) {
                branchObj.branchCooperativeInit(page);
            }
            userAvatarInit();
            break;
        case 'branch-search':
            branchObj.branchSearchInit(page);
            break;
        case 'branch-info':
            localStorage.setItem('pageInit', 'false');
            branchObj.branchInfoInit(page);
            break;
        case 'branch-binding':
            branchObj.branchBindingInit(page);
            break;
        case 'myBranchs':
            branchObj.myBranchsInit(page);
            userAvatarInit();
            break;
        case 'branch-region-search':
            branchObj.branchRegionSearchInit(page);
            break;
        case 'shopcoupon-management':
            branchObj.shopcouponManagementInit(page);
            userAvatarInit();
            break;
        case 'questionnaire-management':
            branchObj.questionnaireManagementInit(page);
            userAvatarInit();
            break;
        case 'add-shopcoupon':
            branchObj.addShopCouponInit(page);
            $('.navbar .left').click(function() {
                indexObj._dataStorage(branchObj.storage.imagePath, null);
            });
            if (!isMobile.Android() && !isMobile.iOS()) {
                //美化scroll bar
                $(".page-content .image-block").niceScroll({
                    cursorcolor: "rgba(100,100,100,.9)",
                    cursoropacitymin: 0,
                    cursorborder: "1px solid #000"
                });
            }
            break;
        case 'shopcoupon-info':
            localStorage.setItem('pageInit', 'false');
            branchObj.shopCouponInfoInit(page);
            break;
        case 'shopcoupon-edit':
            branchObj.shopCouponEditInit(page);
            $('.navbar .left').click(function() {
                indexObj._dataStorage(branchObj.storage.imagePath, null);
            });
            break;
        case 'shopcoupon-reservation':
            branchObj.shopCouponReservationInit(page);
            break;
        case 'branch-scan-record':
            branchObj.branchScanRecordInit(page);
            break;
        case 'branch-reservation-record':
            branchObj.branchReservationRecordInit(page);
            break;
        case 'service-record':
            branchObj.serviceRecordInit(page);
            break;
        case 'shop-questionnaire':
            branchObj.shopQuestionnaireInit(page);
            break;
        case 'shopservice-management':
            branchObj.shopServiceManagementInit(page);
            userAvatarInit();
            break;
        case 'shopservice-setting':
            branchObj.shopServiceSettingInit(page);
            break;
        case 'shopservice-edit':
            branchObj.shopServiceEditInit(page);
            $('.navbar .left').click(function() {
                indexObj._dataStorage(branchObj.storage.imagePath, null);
            });
            break;
        case 'shopservice-pass':
            branchObj.shopServicePassInit(page);
            break;
        case 'shop-record':
            branchObj.shopRecordInit(page);
            userAvatarInit();
            break;
        case 'shopservice-info':
            branchObj.shopServiceinfoInit(page);
            break;
        case 'branch-select':
            branchObj.branchSelectInit(page);
            break;
        case 'application-shop':
            branchObj.applicationShopInit(page);
            userAvatarInit();
            break;
        case 'application-usedcar':
            branchObj.applicationUsedcarInit(page);
            break;
        case 'bonus-management':
            userAvatarInit();
            branchObj.bonusManagementInit(page);
            break;
        case 'bonus-edit':
            branchObj.bonusEditInit(page);
            break;
        case 'bonus-gift':
            branchObj.bonusGiftInit(page);
            break;
        case 'bonus-record':
            userAvatarInit();
            branchObj.bonusRecordInit(page);
            break;
        case 'client-list':
            userAvatarInit();
            branchObj.clientListInit(page);
            break;
        case 'staff-management':
            userAvatarInit();
            branchObj.staffManagementInit(page);
            break;
        case 'favorite':
            userAvatarInit();
            branchObj.favoriteInit(page);
            break;
        case 'message-main':
            userAvatarInit();
            break;
        case 'push-record':
            indexObj._dataStorage(branchObj.storage.imagePath, null);
            indexObj._dataStorage(branchObj.storage.push_objectfillter, null);
            indexObj._dataStorage(branchObj.storage.md_id_array, null);
            branchObj.pushRecordInit(page);
            break;
        case 'select-member':
            branchObj.selectMemberInit(page);
            break;
        case 'search-member':
            branchObj.searchMemberInit(page);
            break;
        case 'message-info':
            branchObj.messageInfoInit(page);
            break;
        case 'temple-info':
            branchObj.templeInfoInit(page);
            break;
        case 'pay-info':
            branchObj.payInfoInit(page);
            break;
        case 'pay-success':
            branchObj.paySuccessInit(page);
            break;
        case 'relatives-list':
            branchObj.relativesListInit(page);
            break;
        case 'add-relatives':
            branchObj.addRelativesInit(page);
            break;
        case 'temple-table':
            branchObj.templeTableInit(page);
            break;
        case 'map':
            indexObj._dataStorage(branchObj.storage.search_result, null);
            branchObj.mapInit(page);
            userAvatarInit();
            break;
        case 'shop-records':
            branchObj.shopRecordsInit(page);
            userAvatarInit();
            break;
        case 'pay-setting':
            branchObj.paySettingInit(page);
            break;
        case 'order-form-management':
            order_totalcount = 0;
            branchObj.orderFormManagementInit(page);
            break;
        case 'coupon-order-forms':
            localStorage.removeItem('report_img');
            branchObj.couponOrderFormsInit(page);
            break;
        case 'order-forms':
            localStorage.removeItem('report_img');
            branchObj.orderFormsInit(page);
            break;
        case 'order-form-info':
            localStorage.removeItem('report_img');
            branchObj.orderFormInfoInit(page);
            break;
        case 'pick-report':
            branchObj.pickReportInit(page);
            break;
        case 'shop-logistics':
            branchObj.shopLogisticsInit(page);
            break;
        case 'shop-buy-data':
            localStorage.removeItem('scg_id');
            branchObj.shopBuyDataInit(page);
            break;
        case 'quick-msg-management':
            branchObj.quickMsgManagementInit(page);
            break;
        case 'shop-search-result':
            branchObj.shopSearchResultInit(page);
            break;
        case 'around-search-result':
            branchObj.aroundSearchResultInit(page);
            break;
        case 'appointment-management':
            branchObj.appointmentManagementInit(page);
            break;
        case 'no-reply-reservation':
            branchObj.noReplyReservationInit(page);
            break;
        case 'shopcoupon-main':
            userAvatarInit();
            break;
        case 'settle-accounts':
            branchObj.settleAccountsInit(page);
            break;
        case 'settle-accounts-content':
            branchObj.settleAccountsContentInit(page);
            break;
        case 'settle-accounts-table':
            settle_accounts_totalcount = 0;
            branchObj.settleAccountsTableInit(page);
            break;


    }


});

//page back event
$$(document).on('pageAfterBack', function(e) {
    var page = e.detail.page.view.activePage;
    nowPage = page.name;
    switch (page.name) {
        case 'shop-logistics':
            branchObj.shopLogisticsInit(page);
            break;
    }
});
//     },
//     cols: [{
//         width: '100%',
//         textAlign: 'center',
//         values: [15, day],
//         displayValues: ['上半月(1日~15日)','下半月(16日~'+day+'日)'],
//         onChange: function(picker, carmodel) {
//             // if (picker.cols[0].value === '0') {
//             //     data.scg_usestatus = '';
//             // } else {
//             //     data.scg_usestatus = picker.cols[0].value;
//             // }
//         }
//     }]
// });